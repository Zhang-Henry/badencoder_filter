Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
/home/jianzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/jianzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loading model from: /home/jianzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/lpips/weights/v0.1/alex.pth
当前时间： 2024-05-16 14:16:02
当前时间： 2024-05-16 14:16:03
test_transform_cifar10_SSL
Loaded from: output/DINO/svhn_backdoored_encoder/2024-05-16-08:40:30/model_60.pth
Namespace(batch_size=64, color=0.1, data_dir='./data/cifar10/', encoder_usage_info='DINO', epochs=200, gpu='7', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=10.0, lr=0.001, pretrained_encoder='log/benchmark_logs/cifar10/version_2/DINO/checkpoints/epoch=499-step=24000.ckpt', pretraining_dataset='cifar10', psnr=0.025, rand_init=True, reference_file='./reference/cifar10/one.npz', reference_label=0, results_dir='./output/DINO/svhn_backdoored_encoder/2024-05-16-08:40:30/', saturation_hsv=1, seed=100, shadow_dataset='cifar10', timestamp='2024-05-16-08:40:30', trigger_file='xx', value_hsv=1)
{'loss': -11.14102840423584, 'wd': 0.06910569496242933, 'ssim': 0.9286722835444305, 'psnr': 25.18181856279947, 'lp': 0.01844219567800339, 'sim': -10.303506494636878, 'far': 0.8375219440948642, 'color': 8.375219298691206}
Predicting features
Feature extracting:   0%|          | 0/1145 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/1145 [00:00<07:51,  2.43it/s]Feature extracting:   1%|▏         | 16/1145 [00:00<00:28, 39.55it/s]Feature extracting:   2%|▏         | 25/1145 [00:00<00:26, 42.50it/s]Feature extracting:   3%|▎         | 32/1145 [00:00<00:24, 44.86it/s]Feature extracting:   3%|▎         | 38/1145 [00:00<00:23, 47.12it/s]Feature extracting:   4%|▍         | 44/1145 [00:01<00:23, 47.73it/s]Feature extracting:   4%|▍         | 50/1145 [00:01<00:22, 47.79it/s]Feature extracting:   5%|▍         | 56/1145 [00:01<00:23, 47.15it/s]Feature extracting:   5%|▌         | 62/1145 [00:01<00:22, 47.23it/s]Feature extracting:   6%|▌         | 68/1145 [00:01<00:22, 47.81it/s]Feature extracting:   6%|▋         | 73/1145 [00:01<00:22, 47.75it/s]Feature extracting:   7%|▋         | 78/1145 [00:01<00:22, 47.88it/s]Feature extracting:   7%|▋         | 83/1145 [00:01<00:22, 47.81it/s]Feature extracting:   8%|▊         | 88/1145 [00:02<00:22, 47.88it/s]Feature extracting:   8%|▊         | 95/1145 [00:02<00:20, 50.94it/s]Feature extracting:   9%|▉         | 101/1145 [00:02<00:21, 49.65it/s]Feature extracting:   9%|▉         | 106/1145 [00:02<00:21, 49.38it/s]Feature extracting:  10%|▉         | 111/1145 [00:02<00:21, 47.94it/s]Feature extracting:  10%|█         | 116/1145 [00:02<00:21, 47.25it/s]Feature extracting:  11%|█         | 122/1145 [00:02<00:20, 49.12it/s]Feature extracting:  11%|█         | 127/1145 [00:02<00:21, 47.70it/s]Feature extracting:  12%|█▏        | 132/1145 [00:02<00:20, 48.30it/s]Feature extracting:  12%|█▏        | 138/1145 [00:03<00:20, 49.75it/s]Feature extracting:  13%|█▎        | 145/1145 [00:03<00:18, 53.83it/s]Feature extracting:  13%|█▎        | 152/1145 [00:03<00:17, 57.80it/s]Feature extracting:  14%|█▍        | 159/1145 [00:03<00:16, 58.50it/s]Feature extracting:  14%|█▍        | 165/1145 [00:03<00:16, 57.67it/s]Feature extracting:  15%|█▌        | 172/1145 [00:03<00:16, 58.59it/s]Feature extracting:  16%|█▌        | 179/1145 [00:03<00:15, 61.45it/s]Feature extracting:  16%|█▌        | 186/1145 [00:03<00:15, 61.90it/s]Feature extracting:  17%|█▋        | 193/1145 [00:03<00:15, 61.24it/s]Feature extracting:  17%|█▋        | 200/1145 [00:04<00:15, 60.95it/s]Feature extracting:  18%|█▊        | 209/1145 [00:04<00:13, 66.87it/s]Feature extracting:  19%|█▉        | 216/1145 [00:04<00:14, 66.30it/s]Feature extracting:  19%|█▉        | 223/1145 [00:04<00:14, 64.66it/s]Feature extracting:  20%|██        | 234/1145 [00:04<00:11, 76.23it/s]Feature extracting:  21%|██▏       | 245/1145 [00:04<00:10, 84.82it/s]Feature extracting:  22%|██▏       | 255/1145 [00:04<00:10, 86.42it/s]Feature extracting:  23%|██▎       | 266/1145 [00:04<00:09, 92.56it/s]Feature extracting:  24%|██▍       | 276/1145 [00:04<00:09, 92.49it/s]Feature extracting:  25%|██▍       | 286/1145 [00:04<00:09, 90.61it/s]Feature extracting:  26%|██▌       | 297/1145 [00:05<00:08, 94.46it/s]Feature extracting:  27%|██▋       | 307/1145 [00:05<00:08, 94.59it/s]Feature extracting:  28%|██▊       | 317/1145 [00:05<00:08, 92.52it/s]Feature extracting:  29%|██▊       | 327/1145 [00:05<00:08, 92.40it/s]Feature extracting:  30%|██▉       | 338/1145 [00:05<00:08, 94.23it/s]Feature extracting:  30%|███       | 348/1145 [00:05<00:08, 92.98it/s]Feature extracting:  31%|███▏      | 358/1145 [00:05<00:08, 91.98it/s]Feature extracting:  32%|███▏      | 369/1145 [00:05<00:08, 95.56it/s]Feature extracting:  33%|███▎      | 379/1145 [00:05<00:08, 91.86it/s]Feature extracting:  34%|███▍      | 389/1145 [00:06<00:08, 91.89it/s]Feature extracting:  35%|███▍      | 400/1145 [00:06<00:07, 95.63it/s]Feature extracting:  36%|███▌      | 410/1145 [00:06<00:07, 92.69it/s]Feature extracting:  37%|███▋      | 420/1145 [00:06<00:08, 89.72it/s]Feature extracting:  38%|███▊      | 430/1145 [00:06<00:07, 91.94it/s]Feature extracting:  38%|███▊      | 440/1145 [00:06<00:07, 90.14it/s]Feature extracting:  39%|███▉      | 450/1145 [00:06<00:07, 88.65it/s]Feature extracting:  40%|████      | 461/1145 [00:06<00:07, 92.99it/s]Feature extracting:  41%|████      | 471/1145 [00:06<00:07, 92.21it/s]Feature extracting:  42%|████▏     | 481/1145 [00:07<00:07, 91.76it/s]Feature extracting:  43%|████▎     | 491/1145 [00:07<00:07, 90.26it/s]Feature extracting:  44%|████▍     | 501/1145 [00:07<00:07, 88.59it/s]Feature extracting:  45%|████▍     | 510/1145 [00:07<00:07, 88.46it/s]Feature extracting:  46%|████▌     | 522/1145 [00:07<00:06, 96.67it/s]Feature extracting:  46%|████▋     | 532/1145 [00:07<00:06, 95.79it/s]Feature extracting:  47%|████▋     | 542/1145 [00:07<00:06, 95.69it/s]Feature extracting:  48%|████▊     | 554/1145 [00:07<00:05, 100.81it/s]Feature extracting:  49%|████▉     | 565/1145 [00:07<00:05, 97.41it/s] Feature extracting:  50%|█████     | 575/1145 [00:08<00:05, 97.72it/s]Feature extracting:  51%|█████     | 586/1145 [00:08<00:05, 99.74it/s]Feature extracting:  52%|█████▏    | 597/1145 [00:08<00:05, 96.64it/s]Feature extracting:  53%|█████▎    | 609/1145 [00:08<00:05, 101.95it/s]Feature extracting:  54%|█████▍    | 620/1145 [00:08<00:05, 100.19it/s]Feature extracting:  55%|█████▌    | 631/1145 [00:08<00:05, 94.69it/s] Feature extracting:  56%|█████▌    | 644/1145 [00:08<00:04, 103.60it/s]Feature extracting:  57%|█████▋    | 655/1145 [00:08<00:04, 98.18it/s] Feature extracting:  58%|█████▊    | 665/1145 [00:09<00:05, 93.90it/s]Feature extracting:  59%|█████▉    | 675/1145 [00:09<00:04, 95.23it/s]Feature extracting:  60%|█████▉    | 685/1145 [00:09<00:04, 94.44it/s]Feature extracting:  61%|██████    | 695/1145 [00:09<00:04, 92.93it/s]Feature extracting:  62%|██████▏   | 706/1145 [00:09<00:04, 96.37it/s]Feature extracting:  63%|██████▎   | 716/1145 [00:09<00:04, 93.10it/s]Feature extracting:  63%|██████▎   | 726/1145 [00:09<00:04, 94.96it/s]Feature extracting:  64%|██████▍   | 736/1145 [00:09<00:04, 95.92it/s]Feature extracting:  65%|██████▌   | 746/1145 [00:09<00:04, 93.67it/s]Feature extracting:  66%|██████▌   | 756/1145 [00:09<00:04, 94.07it/s]Feature extracting:  67%|██████▋   | 767/1145 [00:10<00:03, 95.36it/s]Feature extracting:  68%|██████▊   | 777/1145 [00:10<00:03, 93.79it/s]Feature extracting:  69%|██████▉   | 789/1145 [00:10<00:03, 99.14it/s]Feature extracting:  70%|██████▉   | 799/1145 [00:10<00:03, 97.88it/s]Feature extracting:  71%|███████   | 809/1145 [00:10<00:03, 93.91it/s]Feature extracting:  72%|███████▏  | 821/1145 [00:10<00:03, 100.47it/s]Feature extracting:  73%|███████▎  | 832/1145 [00:10<00:03, 99.27it/s] Feature extracting:  74%|███████▎  | 842/1145 [00:10<00:03, 93.19it/s]Feature extracting:  74%|███████▍  | 853/1145 [00:10<00:02, 97.35it/s]Feature extracting:  75%|███████▌  | 863/1145 [00:11<00:02, 95.45it/s]Feature extracting:  76%|███████▌  | 873/1145 [00:11<00:02, 91.20it/s]Feature extracting:  77%|███████▋  | 885/1145 [00:11<00:02, 96.66it/s]Feature extracting:  78%|███████▊  | 895/1145 [00:11<00:02, 93.77it/s]Feature extracting:  79%|███████▉  | 905/1145 [00:11<00:02, 89.44it/s]Feature extracting:  80%|████████  | 916/1145 [00:11<00:02, 93.85it/s]Feature extracting:  81%|████████  | 926/1145 [00:11<00:02, 93.17it/s]Feature extracting:  82%|████████▏ | 936/1145 [00:11<00:02, 87.83it/s]Feature extracting:  83%|████████▎ | 947/1145 [00:11<00:02, 91.90it/s]Feature extracting:  84%|████████▎ | 957/1145 [00:12<00:02, 91.29it/s]Feature extracting:  84%|████████▍ | 967/1145 [00:12<00:02, 88.95it/s]Feature extracting:  86%|████████▌ | 979/1145 [00:12<00:01, 94.37it/s]Feature extracting:  86%|████████▋ | 989/1145 [00:12<00:01, 93.57it/s]Feature extracting:  87%|████████▋ | 999/1145 [00:12<00:01, 89.88it/s]Feature extracting:  88%|████████▊ | 1010/1145 [00:12<00:01, 95.05it/s]Feature extracting:  89%|████████▉ | 1020/1145 [00:12<00:01, 93.72it/s]Feature extracting:  90%|████████▉ | 1030/1145 [00:12<00:01, 90.62it/s]Feature extracting:  91%|█████████ | 1042/1145 [00:13<00:01, 95.77it/s]Feature extracting:  92%|█████████▏| 1052/1145 [00:13<00:01, 91.47it/s]Feature extracting:  93%|█████████▎| 1062/1145 [00:13<00:00, 87.92it/s]Feature extracting:  94%|█████████▎| 1073/1145 [00:13<00:00, 93.47it/s]Feature extracting:  95%|█████████▍| 1083/1145 [00:13<00:00, 94.40it/s]Feature extracting:  95%|█████████▌| 1093/1145 [00:13<00:00, 91.93it/s]Feature extracting:  97%|█████████▋| 1105/1145 [00:13<00:00, 97.89it/s]Feature extracting:  97%|█████████▋| 1115/1145 [00:13<00:00, 96.72it/s]Feature extracting:  98%|█████████▊| 1125/1145 [00:13<00:00, 93.45it/s]Feature extracting:  99%|█████████▉| 1137/1145 [00:14<00:00, 100.77it/s]Feature extracting: 100%|██████████| 1145/1145 [00:14<00:00, 80.30it/s] 
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<00:59,  6.88it/s]Feature extracting:   5%|▍         | 20/407 [00:00<00:04, 94.07it/s]Feature extracting:   8%|▊         | 31/407 [00:00<00:03, 95.70it/s]Feature extracting:  10%|█         | 42/407 [00:00<00:03, 97.98it/s]Feature extracting:  13%|█▎        | 53/407 [00:00<00:03, 93.15it/s]Feature extracting:  16%|█▌        | 65/407 [00:00<00:03, 99.17it/s]Feature extracting:  19%|█▊        | 76/407 [00:00<00:03, 95.44it/s]Feature extracting:  21%|██        | 86/407 [00:00<00:03, 92.37it/s]Feature extracting:  24%|██▍       | 98/407 [00:01<00:03, 97.08it/s]Feature extracting:  27%|██▋       | 108/407 [00:01<00:03, 93.54it/s]Feature extracting:  29%|██▉       | 118/407 [00:01<00:03, 94.33it/s]Feature extracting:  32%|███▏      | 129/407 [00:01<00:02, 96.29it/s]Feature extracting:  34%|███▍      | 139/407 [00:01<00:02, 93.09it/s]Feature extracting:  37%|███▋      | 150/407 [00:01<00:02, 96.28it/s]Feature extracting:  39%|███▉      | 160/407 [00:01<00:02, 87.49it/s]Feature extracting:  42%|████▏     | 169/407 [00:01<00:02, 87.03it/s]Feature extracting:  44%|████▍     | 181/407 [00:01<00:02, 95.44it/s]Feature extracting:  47%|████▋     | 191/407 [00:02<00:02, 93.17it/s]Feature extracting:  49%|████▉     | 201/407 [00:02<00:02, 87.18it/s]Feature extracting:  52%|█████▏    | 212/407 [00:02<00:02, 91.43it/s]Feature extracting:  55%|█████▍    | 222/407 [00:02<00:02, 90.08it/s]Feature extracting:  57%|█████▋    | 232/407 [00:02<00:01, 89.00it/s]Feature extracting:  60%|█████▉    | 243/407 [00:02<00:01, 94.43it/s]Feature extracting:  62%|██████▏   | 253/407 [00:02<00:01, 92.17it/s]Feature extracting:  65%|██████▍   | 263/407 [00:02<00:01, 91.65it/s]Feature extracting:  67%|██████▋   | 273/407 [00:02<00:01, 93.14it/s]Feature extracting:  70%|██████▉   | 284/407 [00:03<00:01, 95.40it/s]Feature extracting:  72%|███████▏  | 294/407 [00:03<00:01, 92.47it/s]Feature extracting:  75%|███████▍  | 304/407 [00:03<00:01, 91.76it/s]Feature extracting:  77%|███████▋  | 315/407 [00:03<00:00, 94.96it/s]Feature extracting:  80%|███████▉  | 325/407 [00:03<00:00, 92.50it/s]Feature extracting:  82%|████████▏ | 335/407 [00:03<00:00, 91.09it/s]Feature extracting:  85%|████████▌ | 346/407 [00:03<00:00, 94.69it/s]Feature extracting:  87%|████████▋ | 356/407 [00:03<00:00, 92.80it/s]Feature extracting:  90%|████████▉ | 366/407 [00:03<00:00, 91.64it/s]Feature extracting:  93%|█████████▎| 377/407 [00:04<00:00, 94.40it/s]Feature extracting:  95%|█████████▌| 387/407 [00:04<00:00, 92.53it/s]Feature extracting:  98%|█████████▊| 397/407 [00:04<00:00, 91.72it/s]Feature extracting: 100%|██████████| 407/407 [00:04<00:00, 72.40it/s]Feature extracting: 100%|██████████| 407/407 [00:04<00:00, 89.17it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<01:28,  4.61it/s]Feature extracting:   3%|▎         | 14/407 [00:00<00:07, 51.88it/s]Feature extracting:   6%|▌         | 24/407 [00:00<00:05, 68.47it/s]Feature extracting:   8%|▊         | 33/407 [00:00<00:05, 74.25it/s]Feature extracting:  10%|█         | 42/407 [00:00<00:04, 76.15it/s]Feature extracting:  13%|█▎        | 53/407 [00:00<00:04, 84.62it/s]Feature extracting:  15%|█▌        | 62/407 [00:00<00:04, 84.87it/s]Feature extracting:  17%|█▋        | 71/407 [00:00<00:04, 82.84it/s]Feature extracting:  20%|██        | 82/407 [00:01<00:03, 87.79it/s]Feature extracting:  22%|██▏       | 91/407 [00:01<00:03, 86.22it/s]Feature extracting:  25%|██▍       | 100/407 [00:01<00:03, 86.21it/s]Feature extracting:  27%|██▋       | 110/407 [00:01<00:03, 88.81it/s]Feature extracting:  29%|██▉       | 119/407 [00:01<00:03, 86.27it/s]Feature extracting:  32%|███▏      | 129/407 [00:01<00:03, 88.85it/s]Feature extracting:  34%|███▍      | 138/407 [00:01<00:03, 88.71it/s]Feature extracting:  36%|███▌      | 147/407 [00:01<00:03, 86.64it/s]Feature extracting:  39%|███▊      | 157/407 [00:01<00:02, 89.67it/s]Feature extracting:  41%|████      | 166/407 [00:02<00:02, 88.30it/s]Feature extracting:  43%|████▎     | 175/407 [00:02<00:02, 87.34it/s]Feature extracting:  45%|████▌     | 184/407 [00:02<00:02, 86.05it/s]Feature extracting:  48%|████▊     | 194/407 [00:02<00:02, 89.12it/s]Feature extracting:  50%|████▉     | 203/407 [00:02<00:02, 85.97it/s]Feature extracting:  52%|█████▏    | 213/407 [00:02<00:02, 88.41it/s]Feature extracting:  55%|█████▍    | 222/407 [00:02<00:02, 85.48it/s]Feature extracting:  57%|█████▋    | 231/407 [00:02<00:02, 82.65it/s]Feature extracting:  59%|█████▉    | 241/407 [00:02<00:01, 86.58it/s]Feature extracting:  61%|██████▏   | 250/407 [00:03<00:01, 84.26it/s]Feature extracting:  64%|██████▎   | 259/407 [00:03<00:01, 79.41it/s]Feature extracting:  66%|██████▌   | 269/407 [00:03<00:01, 81.57it/s]Feature extracting:  69%|██████▉   | 280/407 [00:03<00:01, 87.50it/s]Feature extracting:  73%|███████▎  | 296/407 [00:03<00:01, 106.80it/s]Feature extracting:  76%|███████▋  | 311/407 [00:03<00:00, 118.80it/s]Feature extracting:  80%|███████▉  | 324/407 [00:03<00:00, 106.23it/s]Feature extracting:  83%|████████▎ | 336/407 [00:03<00:00, 100.39it/s]Feature extracting:  85%|████████▌ | 347/407 [00:04<00:00, 92.19it/s] Feature extracting:  88%|████████▊ | 357/407 [00:04<00:00, 88.15it/s]Feature extracting:  90%|█████████ | 367/407 [00:04<00:00, 87.60it/s]Feature extracting:  92%|█████████▏| 376/407 [00:04<00:00, 84.29it/s]Feature extracting:  95%|█████████▍| 385/407 [00:04<00:00, 81.87it/s]Feature extracting:  97%|█████████▋| 394/407 [00:04<00:00, 82.17it/s]Feature extracting:  99%|█████████▉| 403/407 [00:04<00:00, 79.00it/s]Feature extracting: 100%|██████████| 407/407 [00:04<00:00, 83.65it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  5.68it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  4.65it/s]
Train Epoch: 1 	Loss: 2.241327
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 2.237560
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 2.237369
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 2.236657
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 2.236201
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 2.235658
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 2.234979
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 2.233778
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 2.232385
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 2.231047
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.59895513214505, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 2.228340
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.906269207129686, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 2.225533
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.467117393976643, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 2.222029
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.5439459127228, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 2.218168
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.797480024585127, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 2.214137
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.597725875845114, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 2.209746
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.620774431468963, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 2.205357
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.666871542716656, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 2.201345
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.839735709895514, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 2.197357
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.989551321450524, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 2.192933
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.220036877688997, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 2.189643
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.519668100799016, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 2.185471
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.28918254456054, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 2.182906
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.926859250153658, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 2.179495
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.165027658266748, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 2.176712
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.026736324523664, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 2.174342
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.18039336201598, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 2.171560
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.268746158574064, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 2.168720
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.73740012292563, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 2.166649
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.426244622003686, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 2.163899
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.64520590043024, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 30}
Train Epoch: 31 	Loss: 2.160870
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.453134603564845, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 31}
Train Epoch: 32 	Loss: 2.159381
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.910264290104486, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 32}
Train Epoch: 33 	Loss: 2.155830
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.102335586969883, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 33}
Train Epoch: 34 	Loss: 2.153672
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.286724031960663, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 34}
Train Epoch: 35 	Loss: 2.150650
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.194529809465273, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 35}
Train Epoch: 36 	Loss: 2.148283
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.467271051014137, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 36}
Train Epoch: 37 	Loss: 2.146647
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.098494161032576, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 37}
Train Epoch: 38 	Loss: 2.144734
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.920559311616472, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 38}
Train Epoch: 39 	Loss: 2.142711
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.47879532882606, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 39}
Train Epoch: 40 	Loss: 2.141237
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.951290719114937, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 40}
Train Epoch: 41 	Loss: 2.136305
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.836047940995698, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 41}
Train Epoch: 42 	Loss: 2.136517
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.81684081130916, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 42}
Train Epoch: 43 	Loss: 2.133411
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.563306699446834, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 43}
Train Epoch: 44 	Loss: 2.130635
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 24.139520590043023, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 44}
Train Epoch: 45 	Loss: 2.130620
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.966656422864165, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 45}
Train Epoch: 46 	Loss: 2.125913
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 24.197141979102643, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 46}
Train Epoch: 47 	Loss: 2.124346
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 24.565918869084204, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 47}
Train Epoch: 48 	Loss: 2.122219
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.02304855562385, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 48}
Train Epoch: 49 	Loss: 2.121172
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.249692685925016, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 49}
Train Epoch: 50 	Loss: 2.118241
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.011524277811922, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 50}
Train Epoch: 51 	Loss: 2.116549
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.088352796558084, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 51}
Train Epoch: 52 	Loss: 2.114711
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.580055316533496, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 52}
Train Epoch: 53 	Loss: 2.115541
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.234326982175784, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 53}
Train Epoch: 54 	Loss: 2.111371
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.46097111247695, "epoch": 54}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 54}
