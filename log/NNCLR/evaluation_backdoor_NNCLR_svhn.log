Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
/home/jianzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/jianzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loading model from: /home/jianzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/lpips/weights/v0.1/alex.pth
当前时间： 2024-05-16 08:27:32
当前时间： 2024-05-16 08:27:32
test_transform_cifar10_SSL
Loaded from: output/NNCLR/svhn_backdoored_encoder/2024-05-15-23:21:12/model_200.pth
Namespace(batch_size=64, color=0.1, data_dir='./data/cifar10/', encoder_usage_info='NNCLR', epochs=200, gpu='7', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=10.0, lr=0.001, pretrained_encoder='log/benchmark_logs/cifar10/version_2/NNCLR/checkpoints/epoch=499-step=24000.ckpt', pretraining_dataset='cifar10', psnr=0.025, rand_init=True, reference_file='./reference/cifar10/one.npz', reference_label=0, results_dir='./output/NNCLR/svhn_backdoored_encoder/2024-05-15-23:21:12/', saturation_hsv=1, seed=100, shadow_dataset='cifar10', timestamp='2024-05-15-23:21:12', trigger_file='xx', value_hsv=1)
{'loss': -11.42048832091113, 'wd': 0.0073138766441489455, 'ssim': 0.96866047229718, 'psnr': 35.43912342721155, 'lp': 0.0012372213129756707, 'sim': -10.833930203612422, 'far': 0.5865581291662135, 'color': 5.865581166271058}
Predicting features
Feature extracting:   0%|          | 0/1145 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/1145 [00:00<06:47,  2.80it/s]Feature extracting:   2%|▏         | 18/1145 [00:00<00:22, 50.19it/s]Feature extracting:   2%|▏         | 28/1145 [00:00<00:18, 61.36it/s]Feature extracting:   4%|▎         | 42/1145 [00:00<00:13, 82.29it/s]Feature extracting:   5%|▌         | 59/1145 [00:00<00:10, 105.60it/s]Feature extracting:   7%|▋         | 76/1145 [00:00<00:08, 123.49it/s]Feature extracting:   8%|▊         | 93/1145 [00:00<00:07, 135.80it/s]Feature extracting:  10%|▉         | 110/1145 [00:01<00:07, 144.11it/s]Feature extracting:  11%|█         | 127/1145 [00:01<00:06, 151.39it/s]Feature extracting:  13%|█▎        | 144/1145 [00:01<00:06, 155.76it/s]Feature extracting:  14%|█▍        | 161/1145 [00:01<00:06, 159.10it/s]Feature extracting:  16%|█▌        | 178/1145 [00:01<00:06, 154.25it/s]Feature extracting:  17%|█▋        | 194/1145 [00:01<00:06, 151.64it/s]Feature extracting:  18%|█▊        | 210/1145 [00:01<00:06, 149.56it/s]Feature extracting:  20%|█▉        | 226/1145 [00:01<00:06, 148.26it/s]Feature extracting:  21%|██        | 241/1145 [00:01<00:06, 146.90it/s]Feature extracting:  22%|██▏       | 256/1145 [00:02<00:06, 147.09it/s]Feature extracting:  24%|██▎       | 271/1145 [00:02<00:05, 147.06it/s]Feature extracting:  25%|██▍       | 286/1145 [00:02<00:05, 146.13it/s]Feature extracting:  26%|██▋       | 301/1145 [00:02<00:05, 146.34it/s]Feature extracting:  28%|██▊       | 316/1145 [00:02<00:05, 146.94it/s]Feature extracting:  29%|██▉       | 331/1145 [00:02<00:05, 145.31it/s]Feature extracting:  30%|███       | 346/1145 [00:02<00:05, 144.52it/s]Feature extracting:  32%|███▏      | 361/1145 [00:02<00:05, 144.94it/s]Feature extracting:  33%|███▎      | 376/1145 [00:02<00:05, 145.23it/s]Feature extracting:  34%|███▍      | 391/1145 [00:02<00:05, 143.52it/s]Feature extracting:  35%|███▌      | 406/1145 [00:03<00:05, 145.31it/s]Feature extracting:  37%|███▋      | 421/1145 [00:03<00:05, 144.31it/s]Feature extracting:  38%|███▊      | 437/1145 [00:03<00:04, 146.47it/s]Feature extracting:  40%|███▉      | 454/1145 [00:03<00:04, 151.94it/s]Feature extracting:  41%|████▏     | 473/1145 [00:03<00:04, 162.08it/s]Feature extracting:  43%|████▎     | 491/1145 [00:03<00:03, 166.29it/s]Feature extracting:  44%|████▍     | 509/1145 [00:03<00:03, 169.12it/s]Feature extracting:  46%|████▌     | 527/1145 [00:03<00:03, 171.12it/s]Feature extracting:  48%|████▊     | 545/1145 [00:03<00:03, 172.43it/s]Feature extracting:  49%|████▉     | 563/1145 [00:04<00:03, 173.67it/s]Feature extracting:  51%|█████     | 581/1145 [00:04<00:03, 172.66it/s]Feature extracting:  52%|█████▏    | 599/1145 [00:04<00:03, 174.47it/s]Feature extracting:  54%|█████▍    | 618/1145 [00:04<00:02, 176.82it/s]Feature extracting:  56%|█████▌    | 636/1145 [00:04<00:02, 177.26it/s]Feature extracting:  57%|█████▋    | 654/1145 [00:04<00:02, 176.17it/s]Feature extracting:  59%|█████▊    | 672/1145 [00:04<00:02, 176.57it/s]Feature extracting:  60%|██████    | 690/1145 [00:04<00:02, 176.51it/s]Feature extracting:  62%|██████▏   | 708/1145 [00:04<00:02, 176.47it/s]Feature extracting:  63%|██████▎   | 726/1145 [00:04<00:02, 176.71it/s]Feature extracting:  65%|██████▍   | 744/1145 [00:05<00:02, 177.08it/s]Feature extracting:  67%|██████▋   | 762/1145 [00:05<00:02, 176.76it/s]Feature extracting:  68%|██████▊   | 780/1145 [00:05<00:02, 177.63it/s]Feature extracting:  70%|██████▉   | 798/1145 [00:05<00:02, 169.49it/s]Feature extracting:  71%|███████▏  | 816/1145 [00:05<00:01, 168.55it/s]Feature extracting:  73%|███████▎  | 833/1145 [00:05<00:01, 167.72it/s]Feature extracting:  74%|███████▍  | 850/1145 [00:05<00:01, 166.29it/s]Feature extracting:  76%|███████▌  | 867/1145 [00:05<00:01, 166.72it/s]Feature extracting:  77%|███████▋  | 884/1145 [00:05<00:01, 164.99it/s]Feature extracting:  79%|███████▊  | 901/1145 [00:05<00:01, 164.30it/s]Feature extracting:  80%|████████  | 918/1145 [00:06<00:01, 163.89it/s]Feature extracting:  82%|████████▏ | 935/1145 [00:06<00:01, 163.19it/s]Feature extracting:  83%|████████▎ | 952/1145 [00:06<00:01, 164.44it/s]Feature extracting:  85%|████████▍ | 969/1145 [00:06<00:01, 163.88it/s]Feature extracting:  86%|████████▌ | 986/1145 [00:06<00:00, 163.66it/s]Feature extracting:  88%|████████▊ | 1003/1145 [00:06<00:00, 161.74it/s]Feature extracting:  89%|████████▉ | 1021/1145 [00:06<00:00, 163.93it/s]Feature extracting:  91%|█████████ | 1038/1145 [00:06<00:00, 164.97it/s]Feature extracting:  92%|█████████▏| 1055/1145 [00:06<00:00, 162.63it/s]Feature extracting:  94%|█████████▎| 1072/1145 [00:07<00:00, 161.40it/s]Feature extracting:  95%|█████████▌| 1089/1145 [00:07<00:00, 160.90it/s]Feature extracting:  97%|█████████▋| 1107/1145 [00:07<00:00, 166.14it/s]Feature extracting:  98%|█████████▊| 1125/1145 [00:07<00:00, 169.10it/s]Feature extracting: 100%|█████████▉| 1144/1145 [00:07<00:00, 172.45it/s]Feature extracting: 100%|██████████| 1145/1145 [00:07<00:00, 151.86it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<00:53,  7.54it/s]Feature extracting:   7%|▋         | 27/407 [00:00<00:02, 134.43it/s]Feature extracting:  11%|█         | 44/407 [00:00<00:02, 148.61it/s]Feature extracting:  15%|█▍        | 60/407 [00:00<00:02, 149.46it/s]Feature extracting:  19%|█▊        | 76/407 [00:00<00:02, 149.23it/s]Feature extracting:  23%|██▎       | 92/407 [00:00<00:02, 151.95it/s]Feature extracting:  27%|██▋       | 109/407 [00:00<00:01, 155.29it/s]Feature extracting:  31%|███       | 125/407 [00:00<00:01, 155.47it/s]Feature extracting:  35%|███▍      | 141/407 [00:00<00:01, 156.41it/s]Feature extracting:  39%|███▉      | 158/407 [00:01<00:01, 158.06it/s]Feature extracting:  43%|████▎     | 174/407 [00:01<00:01, 157.53it/s]Feature extracting:  47%|████▋     | 191/407 [00:01<00:01, 159.77it/s]Feature extracting:  51%|█████     | 208/407 [00:01<00:01, 153.25it/s]Feature extracting:  55%|█████▌    | 224/407 [00:01<00:01, 150.25it/s]Feature extracting:  59%|█████▉    | 240/407 [00:01<00:01, 148.88it/s]Feature extracting:  63%|██████▎   | 255/407 [00:01<00:01, 144.85it/s]Feature extracting:  66%|██████▋   | 270/407 [00:01<00:00, 144.64it/s]Feature extracting:  70%|███████   | 285/407 [00:01<00:00, 143.86it/s]Feature extracting:  74%|███████▎  | 300/407 [00:02<00:00, 144.28it/s]Feature extracting:  77%|███████▋  | 315/407 [00:02<00:00, 142.68it/s]Feature extracting:  81%|████████  | 330/407 [00:02<00:00, 142.23it/s]Feature extracting:  85%|████████▍ | 345/407 [00:02<00:00, 142.70it/s]Feature extracting:  88%|████████▊ | 360/407 [00:02<00:00, 143.52it/s]Feature extracting:  92%|█████████▏| 375/407 [00:02<00:00, 142.97it/s]Feature extracting:  96%|█████████▌| 390/407 [00:02<00:00, 143.08it/s]Feature extracting: 100%|█████████▉| 405/407 [00:02<00:00, 142.50it/s]Feature extracting: 100%|██████████| 407/407 [00:02<00:00, 140.30it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<01:11,  5.67it/s]Feature extracting:   5%|▍         | 19/407 [00:00<00:04, 82.65it/s]Feature extracting:   9%|▉         | 36/407 [00:00<00:03, 115.39it/s]Feature extracting:  13%|█▎        | 53/407 [00:00<00:02, 130.56it/s]Feature extracting:  17%|█▋        | 69/407 [00:00<00:02, 139.44it/s]Feature extracting:  21%|██        | 86/407 [00:00<00:02, 147.85it/s]Feature extracting:  25%|██▌       | 103/407 [00:00<00:01, 153.37it/s]Feature extracting:  29%|██▉       | 119/407 [00:00<00:01, 155.27it/s]Feature extracting:  33%|███▎      | 136/407 [00:01<00:01, 157.81it/s]Feature extracting:  37%|███▋      | 152/407 [00:01<00:01, 157.29it/s]Feature extracting:  42%|████▏     | 169/407 [00:01<00:01, 159.25it/s]Feature extracting:  46%|████▌     | 186/407 [00:01<00:01, 159.63it/s]Feature extracting:  50%|████▉     | 203/407 [00:01<00:01, 160.04it/s]Feature extracting:  54%|█████▍    | 220/407 [00:01<00:01, 160.76it/s]Feature extracting:  58%|█████▊    | 237/407 [00:01<00:01, 157.61it/s]Feature extracting:  62%|██████▏   | 253/407 [00:01<00:00, 155.71it/s]Feature extracting:  66%|██████▌   | 269/407 [00:01<00:00, 153.87it/s]Feature extracting:  70%|███████   | 285/407 [00:01<00:00, 150.86it/s]Feature extracting:  74%|███████▍  | 301/407 [00:02<00:00, 150.14it/s]Feature extracting:  78%|███████▊  | 317/407 [00:02<00:00, 150.86it/s]Feature extracting:  82%|████████▏ | 333/407 [00:02<00:00, 149.40it/s]Feature extracting:  86%|████████▌ | 349/407 [00:02<00:00, 150.73it/s]Feature extracting:  90%|████████▉ | 365/407 [00:02<00:00, 150.92it/s]Feature extracting:  94%|█████████▎| 381/407 [00:02<00:00, 151.00it/s]Feature extracting:  98%|█████████▊| 397/407 [00:02<00:00, 151.37it/s]Feature extracting: 100%|██████████| 407/407 [00:02<00:00, 143.28it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  5.98it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  5.03it/s]
Train Epoch: 1 	Loss: 2.241435
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 2.237060
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 2.236420
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 2.235277
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 2.233867
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.587430854333128, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 2.232112
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.618162261831593, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 2.230158
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.132913337430853, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 2.227977
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.616933005531653, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 2.226015
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.736017209588198, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 2.223654
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.7859557467732, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 2.221209
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.839735709895514, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 2.219004
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.931929932390904, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 2.216085
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.95881991395206, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 2.213463
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.020282728948985, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 2.209759
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.070221266133988, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 2.206048
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.070221266133988, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 2.202032
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.01259987707437, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 2.198536
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.166256914566688, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 2.192598
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.25460971112477, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 2.187900
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.296865396435155, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 2.181927
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.33143822987093, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 2.177163
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.58881376767056, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 22}
Train Epoch: 23 	Loss: 2.171758
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.803933620159803, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 2.166361
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.20344191763983, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 99.99615857406269, "epoch": 24}
Train Epoch: 25 	Loss: 2.161960
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.579901659496006, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 2.158423
