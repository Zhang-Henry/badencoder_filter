/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-14 20:17:57
当前时间： 2024-01-14 20:17:58
test_transform_cifar10
Loaded from: ./output/cifar10/svhn_backdoored_encoder/model_200.pth
Predicting features
Feature extracting:   0%|          | 0/1145 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/1145 [00:03<1:00:11,  3.16s/it]Feature extracting:   2%|▏         | 19/1145 [00:03<02:19,  8.06it/s] Feature extracting:   3%|▎         | 29/1145 [00:03<01:24, 13.25it/s]Feature extracting:   3%|▎         | 39/1145 [00:03<00:56, 19.55it/s]Feature extracting:   4%|▍         | 48/1145 [00:03<00:41, 26.16it/s]Feature extracting:   5%|▍         | 57/1145 [00:03<00:32, 33.56it/s]Feature extracting:   6%|▌         | 66/1145 [00:03<00:26, 41.20it/s]Feature extracting:   7%|▋         | 75/1145 [00:03<00:21, 49.11it/s]Feature extracting:   7%|▋         | 84/1145 [00:04<00:18, 56.29it/s]Feature extracting:   8%|▊         | 93/1145 [00:04<00:17, 58.63it/s]Feature extracting:   9%|▉         | 105/1145 [00:04<00:14, 70.49it/s]Feature extracting:  10%|▉         | 114/1145 [00:04<00:13, 73.81it/s]Feature extracting:  11%|█         | 123/1145 [00:04<00:13, 76.41it/s]Feature extracting:  12%|█▏        | 132/1145 [00:04<00:12, 78.51it/s]Feature extracting:  12%|█▏        | 141/1145 [00:04<00:12, 79.99it/s]Feature extracting:  13%|█▎        | 150/1145 [00:04<00:12, 81.22it/s]Feature extracting:  14%|█▍        | 159/1145 [00:04<00:12, 82.01it/s]Feature extracting:  15%|█▍        | 168/1145 [00:05<00:11, 82.51it/s]Feature extracting:  15%|█▌        | 177/1145 [00:05<00:11, 83.05it/s]Feature extracting:  16%|█▌        | 186/1145 [00:05<00:11, 83.24it/s]Feature extracting:  17%|█▋        | 195/1145 [00:05<00:11, 83.54it/s]Feature extracting:  18%|█▊        | 204/1145 [00:05<00:11, 83.66it/s]Feature extracting:  19%|█▊        | 213/1145 [00:05<00:11, 83.69it/s]Feature extracting:  19%|█▉        | 222/1145 [00:05<00:11, 83.79it/s]Feature extracting:  20%|██        | 231/1145 [00:05<00:10, 83.82it/s]Feature extracting:  21%|██        | 240/1145 [00:05<00:10, 83.92it/s]Feature extracting:  22%|██▏       | 249/1145 [00:06<00:10, 83.97it/s]Feature extracting:  23%|██▎       | 258/1145 [00:06<00:10, 83.89it/s]Feature extracting:  23%|██▎       | 267/1145 [00:06<00:10, 83.95it/s]Feature extracting:  24%|██▍       | 276/1145 [00:06<00:10, 83.94it/s]Feature extracting:  25%|██▍       | 285/1145 [00:06<00:10, 83.98it/s]Feature extracting:  26%|██▌       | 294/1145 [00:06<00:10, 84.01it/s]Feature extracting:  26%|██▋       | 303/1145 [00:06<00:10, 83.88it/s]Feature extracting:  27%|██▋       | 312/1145 [00:06<00:09, 83.89it/s]Feature extracting:  28%|██▊       | 321/1145 [00:06<00:09, 83.95it/s]Feature extracting:  29%|██▉       | 330/1145 [00:06<00:09, 83.95it/s]Feature extracting:  30%|██▉       | 339/1145 [00:07<00:09, 83.99it/s]Feature extracting:  30%|███       | 348/1145 [00:07<00:09, 83.93it/s]Feature extracting:  31%|███       | 357/1145 [00:07<00:09, 83.93it/s]Feature extracting:  32%|███▏      | 366/1145 [00:07<00:09, 83.99it/s]Feature extracting:  33%|███▎      | 375/1145 [00:07<00:09, 83.71it/s]Feature extracting:  34%|███▎      | 384/1145 [00:07<00:09, 84.06it/s]Feature extracting:  34%|███▍      | 393/1145 [00:07<00:08, 83.97it/s]Feature extracting:  35%|███▌      | 402/1145 [00:07<00:08, 83.92it/s]Feature extracting:  36%|███▌      | 411/1145 [00:07<00:08, 84.06it/s]Feature extracting:  37%|███▋      | 420/1145 [00:08<00:08, 84.02it/s]Feature extracting:  37%|███▋      | 429/1145 [00:08<00:08, 84.06it/s]Feature extracting:  38%|███▊      | 438/1145 [00:08<00:08, 83.98it/s]Feature extracting:  39%|███▉      | 447/1145 [00:08<00:08, 83.91it/s]Feature extracting:  40%|███▉      | 456/1145 [00:08<00:08, 83.97it/s]Feature extracting:  41%|████      | 465/1145 [00:08<00:08, 83.93it/s]Feature extracting:  41%|████▏     | 474/1145 [00:08<00:07, 83.98it/s]Feature extracting:  42%|████▏     | 483/1145 [00:08<00:07, 83.96it/s]Feature extracting:  43%|████▎     | 492/1145 [00:08<00:07, 83.85it/s]Feature extracting:  44%|████▍     | 501/1145 [00:09<00:07, 83.96it/s]Feature extracting:  45%|████▍     | 510/1145 [00:09<00:07, 83.99it/s]Feature extracting:  45%|████▌     | 519/1145 [00:09<00:07, 83.99it/s]Feature extracting:  46%|████▌     | 528/1145 [00:09<00:07, 84.05it/s]Feature extracting:  47%|████▋     | 537/1145 [00:09<00:07, 83.96it/s]Feature extracting:  48%|████▊     | 546/1145 [00:09<00:07, 84.07it/s]Feature extracting:  48%|████▊     | 555/1145 [00:09<00:07, 83.99it/s]Feature extracting:  49%|████▉     | 564/1145 [00:09<00:06, 83.94it/s]Feature extracting:  50%|█████     | 573/1145 [00:09<00:06, 84.02it/s]Feature extracting:  51%|█████     | 582/1145 [00:09<00:06, 83.91it/s]Feature extracting:  52%|█████▏    | 591/1145 [00:10<00:06, 84.00it/s]Feature extracting:  52%|█████▏    | 600/1145 [00:10<00:07, 76.80it/s]Feature extracting:  53%|█████▎    | 612/1145 [00:10<00:06, 86.25it/s]Feature extracting:  54%|█████▍    | 621/1145 [00:10<00:06, 85.59it/s]Feature extracting:  55%|█████▌    | 630/1145 [00:10<00:06, 85.04it/s]Feature extracting:  56%|█████▌    | 639/1145 [00:10<00:05, 84.78it/s]Feature extracting:  57%|█████▋    | 648/1145 [00:10<00:05, 84.51it/s]Feature extracting:  57%|█████▋    | 657/1145 [00:10<00:05, 84.35it/s]Feature extracting:  58%|█████▊    | 666/1145 [00:10<00:05, 84.32it/s]Feature extracting:  59%|█████▉    | 675/1145 [00:11<00:05, 84.16it/s]Feature extracting:  60%|█████▉    | 684/1145 [00:11<00:05, 84.11it/s]Feature extracting:  61%|██████    | 693/1145 [00:11<00:05, 83.59it/s]Feature extracting:  61%|██████▏   | 702/1145 [00:11<00:05, 84.25it/s]Feature extracting:  62%|██████▏   | 711/1145 [00:11<00:05, 84.18it/s]Feature extracting:  63%|██████▎   | 720/1145 [00:11<00:05, 83.41it/s]Feature extracting:  64%|██████▎   | 729/1145 [00:11<00:04, 84.21it/s]Feature extracting:  64%|██████▍   | 738/1145 [00:11<00:04, 84.19it/s]Feature extracting:  65%|██████▌   | 747/1145 [00:11<00:04, 84.08it/s]Feature extracting:  66%|██████▌   | 756/1145 [00:12<00:04, 84.18it/s]Feature extracting:  67%|██████▋   | 765/1145 [00:12<00:04, 83.39it/s]Feature extracting:  68%|██████▊   | 774/1145 [00:12<00:04, 84.19it/s]Feature extracting:  68%|██████▊   | 783/1145 [00:12<00:04, 84.19it/s]Feature extracting:  69%|██████▉   | 792/1145 [00:12<00:04, 83.40it/s]Feature extracting:  70%|██████▉   | 801/1145 [00:12<00:04, 84.25it/s]Feature extracting:  71%|███████   | 810/1145 [00:12<00:03, 84.12it/s]Feature extracting:  72%|███████▏  | 819/1145 [00:12<00:03, 84.05it/s]Feature extracting:  72%|███████▏  | 828/1145 [00:12<00:03, 84.12it/s]Feature extracting:  73%|███████▎  | 837/1145 [00:13<00:03, 84.04it/s]Feature extracting:  74%|███████▍  | 846/1145 [00:13<00:03, 84.07it/s]Feature extracting:  75%|███████▍  | 855/1145 [00:13<00:03, 84.05it/s]Feature extracting:  75%|███████▌  | 864/1145 [00:13<00:03, 84.01it/s]Feature extracting:  76%|███████▌  | 873/1145 [00:13<00:03, 84.18it/s]Feature extracting:  77%|███████▋  | 882/1145 [00:13<00:03, 84.00it/s]Feature extracting:  78%|███████▊  | 891/1145 [00:13<00:03, 83.98it/s]Feature extracting:  79%|███████▊  | 900/1145 [00:13<00:02, 84.01it/s]Feature extracting:  79%|███████▉  | 909/1145 [00:13<00:02, 83.93it/s]Feature extracting:  80%|████████  | 918/1145 [00:13<00:02, 83.90it/s]Feature extracting:  81%|████████  | 927/1145 [00:14<00:02, 83.95it/s]Feature extracting:  82%|████████▏ | 936/1145 [00:14<00:02, 83.95it/s]Feature extracting:  83%|████████▎ | 945/1145 [00:14<00:02, 84.09it/s]Feature extracting:  83%|████████▎ | 954/1145 [00:14<00:02, 83.97it/s]Feature extracting:  84%|████████▍ | 963/1145 [00:14<00:02, 84.01it/s]Feature extracting:  85%|████████▍ | 972/1145 [00:14<00:02, 83.96it/s]Feature extracting:  86%|████████▌ | 981/1145 [00:14<00:01, 83.89it/s]Feature extracting:  86%|████████▋ | 990/1145 [00:14<00:01, 83.92it/s]Feature extracting:  87%|████████▋ | 999/1145 [00:14<00:01, 83.93it/s]Feature extracting:  88%|████████▊ | 1008/1145 [00:15<00:01, 83.97it/s]Feature extracting:  89%|████████▉ | 1017/1145 [00:15<00:01, 84.01it/s]Feature extracting:  90%|████████▉ | 1026/1145 [00:15<00:01, 83.98it/s]Feature extracting:  90%|█████████ | 1035/1145 [00:15<00:01, 84.08it/s]Feature extracting:  91%|█████████ | 1044/1145 [00:15<00:01, 83.99it/s]Feature extracting:  92%|█████████▏| 1053/1145 [00:15<00:01, 83.99it/s]Feature extracting:  93%|█████████▎| 1062/1145 [00:15<00:00, 83.98it/s]Feature extracting:  94%|█████████▎| 1071/1145 [00:15<00:00, 83.89it/s]Feature extracting:  94%|█████████▍| 1080/1145 [00:15<00:00, 83.93it/s]Feature extracting:  95%|█████████▌| 1089/1145 [00:16<00:00, 83.92it/s]Feature extracting:  96%|█████████▌| 1098/1145 [00:16<00:00, 83.98it/s]Feature extracting:  97%|█████████▋| 1107/1145 [00:16<00:00, 84.02it/s]Feature extracting:  97%|█████████▋| 1116/1145 [00:16<00:00, 84.00it/s]Feature extracting:  98%|█████████▊| 1125/1145 [00:16<00:00, 84.10it/s]Feature extracting:  99%|█████████▉| 1134/1145 [00:16<00:00, 84.07it/s]Feature extracting: 100%|█████████▉| 1143/1145 [00:16<00:00, 83.93it/s]Feature extracting: 100%|██████████| 1145/1145 [00:16<00:00, 67.88it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<02:01,  3.33it/s]Feature extracting:   4%|▍         | 18/407 [00:00<00:06, 56.86it/s]Feature extracting:   7%|▋         | 29/407 [00:00<00:05, 67.01it/s]Feature extracting:  10%|▉         | 39/407 [00:00<00:05, 72.58it/s]Feature extracting:  12%|█▏        | 48/407 [00:00<00:04, 75.99it/s]Feature extracting:  14%|█▍        | 57/407 [00:00<00:04, 78.36it/s]Feature extracting:  16%|█▌        | 66/407 [00:00<00:04, 80.11it/s]Feature extracting:  18%|█▊        | 75/407 [00:01<00:04, 81.23it/s]Feature extracting:  21%|██        | 84/407 [00:01<00:03, 82.09it/s]Feature extracting:  23%|██▎       | 93/407 [00:01<00:03, 82.63it/s]Feature extracting:  25%|██▌       | 102/407 [00:01<00:03, 82.92it/s]Feature extracting:  27%|██▋       | 111/407 [00:01<00:03, 83.32it/s]Feature extracting:  29%|██▉       | 120/407 [00:01<00:03, 83.48it/s]Feature extracting:  32%|███▏      | 129/407 [00:01<00:03, 83.63it/s]Feature extracting:  34%|███▍      | 138/407 [00:01<00:03, 83.79it/s]Feature extracting:  36%|███▌      | 147/407 [00:01<00:03, 83.77it/s]Feature extracting:  38%|███▊      | 156/407 [00:02<00:02, 83.89it/s]Feature extracting:  41%|████      | 165/407 [00:02<00:02, 83.91it/s]Feature extracting:  43%|████▎     | 174/407 [00:02<00:02, 83.89it/s]Feature extracting:  45%|████▍     | 183/407 [00:02<00:02, 84.05it/s]Feature extracting:  47%|████▋     | 192/407 [00:02<00:02, 83.93it/s]Feature extracting:  49%|████▉     | 201/407 [00:02<00:02, 83.99it/s]Feature extracting:  52%|█████▏    | 210/407 [00:02<00:02, 84.03it/s]Feature extracting:  54%|█████▍    | 219/407 [00:02<00:02, 83.93it/s]Feature extracting:  56%|█████▌    | 228/407 [00:02<00:02, 83.96it/s]Feature extracting:  58%|█████▊    | 237/407 [00:03<00:02, 83.94it/s]Feature extracting:  60%|██████    | 246/407 [00:03<00:01, 83.97it/s]Feature extracting:  63%|██████▎   | 255/407 [00:03<00:01, 84.00it/s]Feature extracting:  65%|██████▍   | 264/407 [00:03<00:01, 83.95it/s]Feature extracting:  67%|██████▋   | 273/407 [00:03<00:01, 84.02it/s]Feature extracting:  69%|██████▉   | 282/407 [00:03<00:01, 83.99it/s]Feature extracting:  71%|███████▏  | 291/407 [00:03<00:01, 83.93it/s]Feature extracting:  74%|███████▎  | 300/407 [00:03<00:01, 84.04it/s]Feature extracting:  76%|███████▌  | 309/407 [00:03<00:01, 83.93it/s]Feature extracting:  78%|███████▊  | 318/407 [00:03<00:01, 83.99it/s]Feature extracting:  80%|████████  | 327/407 [00:04<00:00, 84.02it/s]Feature extracting:  83%|████████▎ | 336/407 [00:04<00:00, 83.93it/s]Feature extracting:  85%|████████▍ | 345/407 [00:04<00:00, 83.96it/s]Feature extracting:  87%|████████▋ | 354/407 [00:04<00:00, 83.90it/s]Feature extracting:  89%|████████▉ | 363/407 [00:04<00:00, 83.99it/s]Feature extracting:  91%|█████████▏| 372/407 [00:04<00:00, 84.04it/s]Feature extracting:  94%|█████████▎| 381/407 [00:04<00:00, 83.94it/s]Feature extracting:  96%|█████████▌| 390/407 [00:04<00:00, 83.95it/s]Feature extracting:  98%|█████████▊| 399/407 [00:04<00:00, 83.93it/s]Feature extracting: 100%|██████████| 407/407 [00:05<00:00, 77.60it/s]
Traceback (most recent call last):
  File "training_downstream_classifier.py", line 101, in <module>
    feature_bank_backdoor, label_bank_backdoor = predict_feature(args,model.f, test_loader_backdoor,'backdoor')
  File "/home/hrzhang/projects/badencoder_filter/evaluation/nn_classifier.py", line 91, in predict_feature
    state_dict = torch.load(args.trigger_file, map_location=torch.device('cuda:0'))
  File "/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torch/serialization.py", line 797, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
  File "/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torch/serialization.py", line 283, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
RuntimeError: [enforce fail at inline_container.cc:130] . file in archive is not in a subdirectory: t.npy
