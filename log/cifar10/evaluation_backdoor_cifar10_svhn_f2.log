/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-15 00:16:48
当前时间： 2024-01-15 00:16:49
test_transform_cifar10
Loaded from: ./output/cifar10/svhn_backdoored_encoder/model_200.pth
Predicting features
Feature extracting:   0%|          | 0/1145 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/1145 [00:03<1:00:11,  3.16s/it]Feature extracting:   2%|▏         | 19/1145 [00:03<02:19,  8.06it/s] Feature extracting:   3%|▎         | 29/1145 [00:03<01:24, 13.25it/s]Feature extracting:   3%|▎         | 39/1145 [00:03<00:56, 19.53it/s]Feature extracting:   4%|▍         | 48/1145 [00:03<00:41, 26.14it/s]Feature extracting:   5%|▍         | 57/1145 [00:03<00:32, 33.53it/s]Feature extracting:   6%|▌         | 66/1145 [00:03<00:26, 41.31it/s]Feature extracting:   7%|▋         | 75/1145 [00:03<00:21, 49.02it/s]Feature extracting:   7%|▋         | 84/1145 [00:04<00:18, 56.16it/s]Feature extracting:   8%|▊         | 93/1145 [00:04<00:16, 62.41it/s]Feature extracting:   9%|▉         | 102/1145 [00:04<00:15, 67.67it/s]Feature extracting:  10%|▉         | 111/1145 [00:04<00:14, 71.77it/s]Feature extracting:  10%|█         | 120/1145 [00:04<00:13, 75.06it/s]Feature extracting:  11%|█▏        | 129/1145 [00:04<00:13, 77.48it/s]Feature extracting:  12%|█▏        | 138/1145 [00:04<00:12, 79.23it/s]Feature extracting:  13%|█▎        | 147/1145 [00:04<00:12, 80.59it/s]Feature extracting:  14%|█▎        | 156/1145 [00:04<00:12, 81.54it/s]Feature extracting:  14%|█▍        | 165/1145 [00:05<00:11, 82.31it/s]Feature extracting:  15%|█▌        | 174/1145 [00:05<00:11, 82.73it/s]Feature extracting:  16%|█▌        | 183/1145 [00:05<00:11, 83.02it/s]Feature extracting:  17%|█▋        | 192/1145 [00:05<00:11, 83.29it/s]Feature extracting:  18%|█▊        | 201/1145 [00:05<00:11, 83.45it/s]Feature extracting:  18%|█▊        | 210/1145 [00:05<00:11, 83.60it/s]Feature extracting:  19%|█▉        | 219/1145 [00:05<00:11, 83.70it/s]Feature extracting:  20%|█▉        | 228/1145 [00:05<00:10, 83.71it/s]Feature extracting:  21%|██        | 237/1145 [00:05<00:10, 83.89it/s]Feature extracting:  21%|██▏       | 246/1145 [00:05<00:10, 83.89it/s]Feature extracting:  22%|██▏       | 255/1145 [00:06<00:10, 83.91it/s]Feature extracting:  23%|██▎       | 264/1145 [00:06<00:10, 83.90it/s]Feature extracting:  24%|██▍       | 273/1145 [00:06<00:10, 83.80it/s]Feature extracting:  25%|██▍       | 282/1145 [00:06<00:10, 83.87it/s]Feature extracting:  25%|██▌       | 291/1145 [00:06<00:10, 83.80it/s]Feature extracting:  26%|██▌       | 300/1145 [00:06<00:10, 83.79it/s]Feature extracting:  27%|██▋       | 309/1145 [00:06<00:09, 83.87it/s]Feature extracting:  28%|██▊       | 318/1145 [00:06<00:09, 83.83it/s]Feature extracting:  29%|██▊       | 327/1145 [00:06<00:09, 83.92it/s]Feature extracting:  29%|██▉       | 336/1145 [00:07<00:09, 83.45it/s]Feature extracting:  30%|███       | 345/1145 [00:07<00:09, 83.92it/s]Feature extracting:  31%|███       | 354/1145 [00:07<00:09, 84.01it/s]Feature extracting:  32%|███▏      | 363/1145 [00:07<00:09, 83.90it/s]Feature extracting:  32%|███▏      | 372/1145 [00:07<00:09, 83.84it/s]Feature extracting:  33%|███▎      | 381/1145 [00:07<00:09, 83.87it/s]Feature extracting:  34%|███▍      | 390/1145 [00:07<00:09, 83.78it/s]Feature extracting:  35%|███▍      | 399/1145 [00:07<00:08, 83.84it/s]Feature extracting:  36%|███▌      | 408/1145 [00:07<00:08, 83.87it/s]Feature extracting:  36%|███▋      | 417/1145 [00:08<00:08, 83.84it/s]Feature extracting:  37%|███▋      | 426/1145 [00:08<00:08, 83.85it/s]Feature extracting:  38%|███▊      | 435/1145 [00:08<00:08, 83.84it/s]Feature extracting:  39%|███▉      | 444/1145 [00:08<00:08, 83.90it/s]Feature extracting:  40%|███▉      | 453/1145 [00:08<00:08, 83.79it/s]Feature extracting:  40%|████      | 462/1145 [00:08<00:08, 83.81it/s]Feature extracting:  41%|████      | 471/1145 [00:08<00:08, 83.85it/s]Feature extracting:  42%|████▏     | 480/1145 [00:08<00:07, 83.50it/s]Feature extracting:  43%|████▎     | 489/1145 [00:08<00:07, 83.98it/s]Feature extracting:  43%|████▎     | 498/1145 [00:08<00:07, 83.93it/s]Feature extracting:  44%|████▍     | 507/1145 [00:09<00:07, 83.84it/s]Feature extracting:  45%|████▌     | 516/1145 [00:09<00:07, 83.88it/s]Feature extracting:  46%|████▌     | 525/1145 [00:09<00:07, 83.87it/s]Feature extracting:  47%|████▋     | 534/1145 [00:09<00:07, 83.90it/s]Feature extracting:  47%|████▋     | 543/1145 [00:09<00:07, 83.97it/s]Feature extracting:  48%|████▊     | 552/1145 [00:09<00:07, 83.84it/s]Feature extracting:  49%|████▉     | 561/1145 [00:09<00:06, 83.89it/s]Feature extracting:  50%|████▉     | 570/1145 [00:09<00:06, 83.81it/s]Feature extracting:  51%|█████     | 579/1145 [00:09<00:06, 83.79it/s]Feature extracting:  51%|█████▏    | 588/1145 [00:10<00:06, 83.86it/s]Feature extracting:  52%|█████▏    | 597/1145 [00:10<00:06, 83.84it/s]Feature extracting:  53%|█████▎    | 606/1145 [00:10<00:06, 83.84it/s]Feature extracting:  54%|█████▎    | 615/1145 [00:10<00:06, 83.84it/s]Feature extracting:  54%|█████▍    | 624/1145 [00:10<00:06, 83.83it/s]Feature extracting:  55%|█████▌    | 633/1145 [00:10<00:06, 83.94it/s]Feature extracting:  56%|█████▌    | 642/1145 [00:10<00:05, 83.84it/s]Feature extracting:  57%|█████▋    | 651/1145 [00:10<00:05, 83.82it/s]Feature extracting:  58%|█████▊    | 660/1145 [00:10<00:05, 83.82it/s]Feature extracting:  58%|█████▊    | 669/1145 [00:11<00:05, 83.77it/s]Feature extracting:  59%|█████▉    | 678/1145 [00:11<00:05, 83.85it/s]Feature extracting:  60%|██████    | 687/1145 [00:11<00:05, 83.80it/s]Feature extracting:  61%|██████    | 696/1145 [00:11<00:05, 83.77it/s]Feature extracting:  62%|██████▏   | 705/1145 [00:11<00:05, 83.82it/s]Feature extracting:  62%|██████▏   | 714/1145 [00:11<00:05, 83.80it/s]Feature extracting:  63%|██████▎   | 723/1145 [00:11<00:05, 83.83it/s]Feature extracting:  64%|██████▍   | 732/1145 [00:11<00:04, 83.86it/s]Feature extracting:  65%|██████▍   | 741/1145 [00:11<00:04, 83.78it/s]Feature extracting:  66%|██████▌   | 750/1145 [00:11<00:04, 83.83it/s]Feature extracting:  66%|██████▋   | 759/1145 [00:12<00:04, 83.76it/s]Feature extracting:  67%|██████▋   | 768/1145 [00:12<00:04, 83.73it/s]Feature extracting:  68%|██████▊   | 777/1145 [00:12<00:04, 83.83it/s]Feature extracting:  69%|██████▊   | 786/1145 [00:12<00:04, 83.79it/s]Feature extracting:  69%|██████▉   | 795/1145 [00:12<00:04, 83.93it/s]Feature extracting:  70%|███████   | 804/1145 [00:12<00:04, 83.89it/s]Feature extracting:  71%|███████   | 813/1145 [00:12<00:03, 83.93it/s]Feature extracting:  72%|███████▏  | 822/1145 [00:12<00:03, 83.95it/s]Feature extracting:  73%|███████▎  | 831/1145 [00:12<00:03, 83.82it/s]Feature extracting:  73%|███████▎  | 840/1145 [00:13<00:03, 83.87it/s]Feature extracting:  74%|███████▍  | 849/1145 [00:13<00:03, 83.82it/s]Feature extracting:  75%|███████▍  | 858/1145 [00:13<00:03, 83.76it/s]Feature extracting:  76%|███████▌  | 867/1145 [00:13<00:03, 83.51it/s]Feature extracting:  77%|███████▋  | 876/1145 [00:13<00:03, 83.90it/s]Feature extracting:  77%|███████▋  | 885/1145 [00:13<00:03, 83.86it/s]Feature extracting:  78%|███████▊  | 894/1145 [00:13<00:02, 83.90it/s]Feature extracting:  79%|███████▉  | 903/1145 [00:13<00:02, 83.89it/s]Feature extracting:  80%|███████▉  | 912/1145 [00:13<00:02, 83.99it/s]Feature extracting:  80%|████████  | 921/1145 [00:14<00:02, 83.86it/s]Feature extracting:  81%|████████  | 930/1145 [00:14<00:02, 83.91it/s]Feature extracting:  82%|████████▏ | 939/1145 [00:14<00:02, 83.90it/s]Feature extracting:  83%|████████▎ | 948/1145 [00:14<00:02, 83.85it/s]Feature extracting:  84%|████████▎ | 957/1145 [00:14<00:02, 83.93it/s]Feature extracting:  84%|████████▍ | 966/1145 [00:14<00:02, 83.85it/s]Feature extracting:  85%|████████▌ | 975/1145 [00:14<00:02, 83.81it/s]Feature extracting:  86%|████████▌ | 984/1145 [00:14<00:01, 83.88it/s]Feature extracting:  87%|████████▋ | 993/1145 [00:14<00:01, 83.81it/s]Feature extracting:  88%|████████▊ | 1002/1145 [00:14<00:01, 83.86it/s]Feature extracting:  88%|████████▊ | 1011/1145 [00:15<00:01, 83.90it/s]Feature extracting:  89%|████████▉ | 1020/1145 [00:15<00:01, 83.86it/s]Feature extracting:  90%|████████▉ | 1029/1145 [00:15<00:01, 83.91it/s]Feature extracting:  91%|█████████ | 1038/1145 [00:15<00:01, 83.79it/s]Feature extracting:  91%|█████████▏| 1047/1145 [00:15<00:01, 83.81it/s]Feature extracting:  92%|█████████▏| 1056/1145 [00:15<00:01, 83.80it/s]Feature extracting:  93%|█████████▎| 1065/1145 [00:15<00:00, 83.77it/s]Feature extracting:  94%|█████████▍| 1074/1145 [00:15<00:00, 83.83it/s]Feature extracting:  95%|█████████▍| 1083/1145 [00:15<00:00, 83.77it/s]Feature extracting:  95%|█████████▌| 1092/1145 [00:16<00:00, 83.77it/s]Feature extracting:  96%|█████████▌| 1101/1145 [00:16<00:00, 83.82it/s]Feature extracting:  97%|█████████▋| 1110/1145 [00:16<00:00, 83.82it/s]Feature extracting:  98%|█████████▊| 1119/1145 [00:16<00:00, 83.93it/s]Feature extracting:  99%|█████████▊| 1128/1145 [00:16<00:00, 83.93it/s]Feature extracting:  99%|█████████▉| 1137/1145 [00:16<00:00, 83.85it/s]Feature extracting: 100%|██████████| 1145/1145 [00:16<00:00, 67.89it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<02:25,  2.79it/s]Feature extracting:   5%|▍         | 19/407 [00:00<00:07, 51.69it/s]Feature extracting:   7%|▋         | 29/407 [00:00<00:06, 62.05it/s]Feature extracting:  10%|▉         | 39/407 [00:00<00:05, 68.92it/s]Feature extracting:  12%|█▏        | 48/407 [00:00<00:04, 73.26it/s]Feature extracting:  14%|█▍        | 57/407 [00:00<00:04, 76.35it/s]Feature extracting:  16%|█▌        | 66/407 [00:01<00:04, 78.54it/s]Feature extracting:  18%|█▊        | 75/407 [00:01<00:04, 80.17it/s]Feature extracting:  21%|██        | 84/407 [00:01<00:03, 81.25it/s]Feature extracting:  23%|██▎       | 93/407 [00:01<00:03, 81.94it/s]Feature extracting:  25%|██▌       | 102/407 [00:01<00:03, 82.47it/s]Feature extracting:  27%|██▋       | 111/407 [00:01<00:03, 82.78it/s]Feature extracting:  29%|██▉       | 120/407 [00:01<00:03, 83.13it/s]Feature extracting:  32%|███▏      | 129/407 [00:01<00:03, 83.38it/s]Feature extracting:  34%|███▍      | 138/407 [00:01<00:03, 83.52it/s]Feature extracting:  36%|███▌      | 147/407 [00:01<00:03, 83.69it/s]Feature extracting:  38%|███▊      | 156/407 [00:02<00:02, 83.70it/s]Feature extracting:  41%|████      | 165/407 [00:02<00:02, 83.80it/s]Feature extracting:  43%|████▎     | 174/407 [00:02<00:02, 83.81it/s]Feature extracting:  45%|████▍     | 183/407 [00:02<00:02, 83.73it/s]Feature extracting:  47%|████▋     | 192/407 [00:02<00:02, 83.80it/s]Feature extracting:  49%|████▉     | 201/407 [00:02<00:02, 83.78it/s]Feature extracting:  52%|█████▏    | 210/407 [00:02<00:02, 83.79it/s]Feature extracting:  54%|█████▍    | 219/407 [00:02<00:02, 83.91it/s]Feature extracting:  56%|█████▌    | 228/407 [00:02<00:02, 83.84it/s]Feature extracting:  58%|█████▊    | 237/407 [00:03<00:02, 80.16it/s]Feature extracting:  61%|██████    | 247/407 [00:03<00:01, 84.94it/s]Feature extracting:  63%|██████▎   | 256/407 [00:03<00:01, 84.63it/s]Feature extracting:  65%|██████▌   | 265/407 [00:03<00:01, 84.51it/s]Feature extracting:  67%|██████▋   | 274/407 [00:03<00:01, 84.25it/s]Feature extracting:  70%|██████▉   | 283/407 [00:03<00:01, 84.14it/s]Feature extracting:  72%|███████▏  | 292/407 [00:03<00:01, 84.02it/s]Feature extracting:  74%|███████▍  | 301/407 [00:03<00:01, 83.90it/s]Feature extracting:  76%|███████▌  | 310/407 [00:03<00:01, 83.90it/s]Feature extracting:  78%|███████▊  | 319/407 [00:04<00:01, 83.87it/s]Feature extracting:  81%|████████  | 328/407 [00:04<00:00, 83.89it/s]Feature extracting:  83%|████████▎ | 337/407 [00:04<00:00, 83.87it/s]Feature extracting:  85%|████████▌ | 346/407 [00:04<00:00, 83.86it/s]Feature extracting:  87%|████████▋ | 355/407 [00:04<00:00, 83.93it/s]Feature extracting:  89%|████████▉ | 364/407 [00:04<00:00, 83.92it/s]Feature extracting:  92%|█████████▏| 373/407 [00:04<00:00, 83.91it/s]Feature extracting:  94%|█████████▍| 382/407 [00:04<00:00, 83.90it/s]Feature extracting:  96%|█████████▌| 391/407 [00:04<00:00, 83.80it/s]Feature extracting:  98%|█████████▊| 400/407 [00:05<00:00, 83.96it/s]Feature extracting: 100%|██████████| 407/407 [00:05<00:00, 76.69it/s]
Traceback (most recent call last):
  File "training_downstream_classifier.py", line 101, in <module>
    feature_bank_backdoor, label_bank_backdoor = predict_feature(args,model.f, test_loader_backdoor,'backdoor')
  File "/home/hrzhang/projects/badencoder_filter/evaluation/nn_classifier.py", line 91, in predict_feature
    state_dict = torch.load(args.trigger_file, map_location=torch.device('cuda:0'))
  File "/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torch/serialization.py", line 797, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
  File "/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torch/serialization.py", line 283, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
RuntimeError: [enforce fail at inline_container.cc:130] . file in archive is not in a subdirectory: t.npy
