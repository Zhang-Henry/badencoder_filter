True
test_transform_cifar10
Loaded from: output/cifar10/clean_encoder/model_1000.pth
Feature extracting:   0%|          | 0/613 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/613 [00:02<27:26,  2.69s/it]Feature extracting:   3%|▎         | 16/613 [00:02<01:15,  7.92it/s]Feature extracting:   5%|▍         | 29/613 [00:02<00:36, 16.08it/s]Feature extracting:   7%|▋         | 44/613 [00:02<00:20, 27.77it/s]Feature extracting:  10%|▉         | 59/613 [00:03<00:13, 41.32it/s]Feature extracting:  12%|█▏        | 75/613 [00:03<00:09, 57.14it/s]Feature extracting:  15%|█▍        | 90/613 [00:03<00:07, 71.80it/s]Feature extracting:  17%|█▋        | 105/613 [00:03<00:05, 85.35it/s]Feature extracting:  20%|██        | 123/613 [00:03<00:04, 104.26it/s]Feature extracting:  23%|██▎       | 139/613 [00:03<00:04, 114.88it/s]Feature extracting:  25%|██▌       | 156/613 [00:03<00:03, 127.51it/s]Feature extracting:  28%|██▊       | 172/613 [00:03<00:03, 132.01it/s]Feature extracting:  31%|███       | 188/613 [00:03<00:03, 126.88it/s]Feature extracting:  34%|███▎      | 206/613 [00:04<00:02, 136.97it/s]Feature extracting:  37%|███▋      | 225/613 [00:04<00:02, 149.66it/s]Feature extracting:  39%|███▉      | 241/613 [00:04<00:02, 147.97it/s]Feature extracting:  42%|████▏     | 260/613 [00:04<00:02, 158.62it/s]Feature extracting:  45%|████▌     | 277/613 [00:04<00:02, 153.86it/s]Feature extracting:  48%|████▊     | 293/613 [00:04<00:02, 146.21it/s]Feature extracting:  50%|█████     | 308/613 [00:04<00:02, 141.92it/s]Feature extracting:  53%|█████▎    | 323/613 [00:04<00:02, 138.83it/s]Feature extracting:  55%|█████▌    | 339/613 [00:04<00:01, 144.54it/s]Feature extracting:  58%|█████▊    | 357/613 [00:05<00:01, 153.96it/s]Feature extracting:  61%|██████    | 374/613 [00:05<00:01, 157.54it/s]Feature extracting:  64%|██████▍   | 392/613 [00:05<00:01, 163.18it/s]Feature extracting:  67%|██████▋   | 409/613 [00:05<00:01, 149.09it/s]Feature extracting:  69%|██████▉   | 425/613 [00:05<00:01, 151.57it/s]Feature extracting:  72%|███████▏  | 443/613 [00:05<00:01, 158.48it/s]Feature extracting:  75%|███████▌  | 460/613 [00:05<00:00, 161.52it/s]Feature extracting:  78%|███████▊  | 478/613 [00:05<00:00, 164.53it/s]Feature extracting:  81%|████████  | 496/613 [00:05<00:00, 166.46it/s]Feature extracting:  84%|████████▎ | 513/613 [00:06<00:00, 166.36it/s]Feature extracting:  86%|████████▋ | 530/613 [00:06<00:00, 166.77it/s]Feature extracting:  89%|████████▉ | 547/613 [00:06<00:00, 167.20it/s]Feature extracting:  92%|█████████▏| 564/613 [00:06<00:00, 157.34it/s]Feature extracting:  95%|█████████▌| 583/613 [00:06<00:00, 164.12it/s]Feature extracting:  98%|█████████▊| 601/613 [00:06<00:00, 165.26it/s]Feature extracting: 100%|██████████| 613/613 [00:06<00:00, 90.93it/s] 
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<00:31,  6.29it/s]Feature extracting:   6%|▌         | 12/198 [00:00<00:03, 55.32it/s]Feature extracting:  12%|█▏        | 23/198 [00:00<00:02, 74.03it/s]Feature extracting:  18%|█▊        | 35/198 [00:00<00:01, 86.50it/s]Feature extracting:  25%|██▍       | 49/198 [00:00<00:01, 102.11it/s]Feature extracting:  34%|███▍      | 67/198 [00:00<00:01, 124.74it/s]Feature extracting:  42%|████▏     | 84/198 [00:00<00:00, 136.04it/s]Feature extracting:  51%|█████     | 101/198 [00:00<00:00, 143.78it/s]Feature extracting:  60%|██████    | 119/198 [00:01<00:00, 153.61it/s]Feature extracting:  69%|██████▊   | 136/198 [00:01<00:00, 155.94it/s]Feature extracting:  77%|███████▋  | 153/198 [00:01<00:00, 158.88it/s]Feature extracting:  85%|████████▌ | 169/198 [00:01<00:00, 154.05it/s]Feature extracting:  93%|█████████▎| 185/198 [00:01<00:00, 152.10it/s]Feature extracting: 100%|██████████| 198/198 [00:01<00:00, 118.84it/s]
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<00:35,  5.55it/s]Feature extracting:   5%|▍         | 9/198 [00:00<00:05, 37.78it/s]Feature extracting:   9%|▊         | 17/198 [00:00<00:03, 52.88it/s]Feature extracting:  14%|█▎        | 27/198 [00:00<00:02, 67.49it/s]Feature extracting:  18%|█▊        | 36/198 [00:00<00:02, 74.62it/s]Feature extracting:  23%|██▎       | 45/198 [00:00<00:02, 75.65it/s]Feature extracting:  27%|██▋       | 54/198 [00:00<00:01, 78.91it/s]Feature extracting:  32%|███▏      | 63/198 [00:00<00:01, 79.96it/s]Feature extracting:  36%|███▋      | 72/198 [00:01<00:01, 80.82it/s]Feature extracting:  41%|████      | 81/198 [00:01<00:01, 78.96it/s]Feature extracting:  45%|████▌     | 90/198 [00:01<00:01, 81.16it/s]Feature extracting:  50%|█████     | 99/198 [00:01<00:01, 78.64it/s]Feature extracting:  54%|█████▍    | 107/198 [00:01<00:01, 77.94it/s]Feature extracting:  59%|█████▊    | 116/198 [00:01<00:01, 81.17it/s]Feature extracting:  64%|██████▍   | 127/198 [00:01<00:00, 86.37it/s]Feature extracting:  69%|██████▊   | 136/198 [00:01<00:00, 87.07it/s]Feature extracting:  73%|███████▎  | 145/198 [00:01<00:00, 84.21it/s]Feature extracting:  79%|███████▉  | 156/198 [00:02<00:00, 90.18it/s]Feature extracting:  84%|████████▍ | 167/198 [00:02<00:00, 94.00it/s]Feature extracting:  89%|████████▉ | 177/198 [00:02<00:00, 94.82it/s]Feature extracting:  94%|█████████▍| 187/198 [00:02<00:00, 93.05it/s]Feature extracting:  99%|█████████▉| 197/198 [00:02<00:00, 91.65it/s]Feature extracting: 100%|██████████| 198/198 [00:02<00:00, 76.15it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  4.68it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  3.21it/s]
Train Epoch: 1 	Loss: 3.777924
{"metric": "Eval - Clean Accuracy (CA)", "value": 6.872525732383215, "epoch": 1}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 1}
Train Epoch: 2 	Loss: 3.330631
{"metric": "Eval - Clean Accuracy (CA)", "value": 11.82897862232779, "epoch": 2}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 2}
Train Epoch: 3 	Loss: 2.818481
{"metric": "Eval - Clean Accuracy (CA)", "value": 11.361836896278701, "epoch": 3}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 3}
Train Epoch: 4 	Loss: 2.633357
{"metric": "Eval - Clean Accuracy (CA)", "value": 10.34837688044339, "epoch": 4}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 4}
Train Epoch: 5 	Loss: 2.534003
{"metric": "Eval - Clean Accuracy (CA)", "value": 10.554235946159936, "epoch": 5}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 5}
Train Epoch: 6 	Loss: 2.442679
{"metric": "Eval - Clean Accuracy (CA)", "value": 12.929532858273951, "epoch": 6}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 6}
Train Epoch: 7 	Loss: 2.321393
{"metric": "Eval - Clean Accuracy (CA)", "value": 16.7458432304038, "epoch": 7}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 7}
Train Epoch: 8 	Loss: 2.222645
{"metric": "Eval - Clean Accuracy (CA)", "value": 19.889152810768014, "epoch": 8}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 8}
Train Epoch: 9 	Loss: 2.152483
{"metric": "Eval - Clean Accuracy (CA)", "value": 21.43309580364212, "epoch": 9}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 9}
Train Epoch: 10 	Loss: 2.099433
{"metric": "Eval - Clean Accuracy (CA)", "value": 24.42596991290578, "epoch": 10}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 10}
Train Epoch: 11 	Loss: 2.032054
{"metric": "Eval - Clean Accuracy (CA)", "value": 26.682501979414095, "epoch": 11}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 11}
Train Epoch: 12 	Loss: 1.968372
{"metric": "Eval - Clean Accuracy (CA)", "value": 27.743467933491686, "epoch": 12}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 12}
Train Epoch: 13 	Loss: 1.902054
{"metric": "Eval - Clean Accuracy (CA)", "value": 29.002375296912113, "epoch": 13}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 13}
Train Epoch: 14 	Loss: 1.855774
{"metric": "Eval - Clean Accuracy (CA)", "value": 30.419635787806808, "epoch": 14}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 14}
Train Epoch: 15 	Loss: 1.820570
{"metric": "Eval - Clean Accuracy (CA)", "value": 31.789390340459224, "epoch": 15}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 15}
Train Epoch: 16 	Loss: 1.797196
{"metric": "Eval - Clean Accuracy (CA)", "value": 32.28820269200317, "epoch": 16}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 16}
Train Epoch: 17 	Loss: 1.785413
{"metric": "Eval - Clean Accuracy (CA)", "value": 32.77117973079968, "epoch": 17}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 17}
Train Epoch: 18 	Loss: 1.763612
{"metric": "Eval - Clean Accuracy (CA)", "value": 33.76880443388757, "epoch": 18}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 18}
Train Epoch: 19 	Loss: 1.743874
{"metric": "Eval - Clean Accuracy (CA)", "value": 36.12034837688044, "epoch": 19}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 19}
Train Epoch: 20 	Loss: 1.710141
{"metric": "Eval - Clean Accuracy (CA)", "value": 38.068091844813935, "epoch": 20}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 20}
Train Epoch: 21 	Loss: 1.669958
{"metric": "Eval - Clean Accuracy (CA)", "value": 39.358669833729216, "epoch": 21}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 21}
Train Epoch: 22 	Loss: 1.621858
{"metric": "Eval - Clean Accuracy (CA)", "value": 40.2375296912114, "epoch": 22}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 22}
Train Epoch: 23 	Loss: 1.591737
{"metric": "Eval - Clean Accuracy (CA)", "value": 41.14014251781472, "epoch": 23}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 23}
Train Epoch: 24 	Loss: 1.577355
{"metric": "Eval - Clean Accuracy (CA)", "value": 41.78147268408551, "epoch": 24}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 24}
Train Epoch: 25 	Loss: 1.563177
{"metric": "Eval - Clean Accuracy (CA)", "value": 42.17735550277118, "epoch": 25}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 25}
Train Epoch: 26 	Loss: 1.539458
{"metric": "Eval - Clean Accuracy (CA)", "value": 43.0166270783848, "epoch": 26}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 26}
Train Epoch: 27 	Loss: 1.517505
{"metric": "Eval - Clean Accuracy (CA)", "value": 43.77672209026128, "epoch": 27}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 27}
Train Epoch: 28 	Loss: 1.488100
{"metric": "Eval - Clean Accuracy (CA)", "value": 45.74821852731591, "epoch": 28}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 28}
Train Epoch: 29 	Loss: 1.447494
{"metric": "Eval - Clean Accuracy (CA)", "value": 47.45051464766429, "epoch": 29}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 29}
Train Epoch: 30 	Loss: 1.416088
{"metric": "Eval - Clean Accuracy (CA)", "value": 48.12351543942993, "epoch": 30}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 30}
Train Epoch: 31 	Loss: 1.393095
{"metric": "Eval - Clean Accuracy (CA)", "value": 49.21615201900237, "epoch": 31}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 31}
Train Epoch: 32 	Loss: 1.372218
{"metric": "Eval - Clean Accuracy (CA)", "value": 49.97624703087886, "epoch": 32}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 32}
Train Epoch: 33 	Loss: 1.343841
{"metric": "Eval - Clean Accuracy (CA)", "value": 50.61757719714964, "epoch": 33}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 33}
Train Epoch: 34 	Loss: 1.319688
{"metric": "Eval - Clean Accuracy (CA)", "value": 51.298495645288995, "epoch": 34}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 34}
Train Epoch: 35 	Loss: 1.294012
{"metric": "Eval - Clean Accuracy (CA)", "value": 51.93982581155978, "epoch": 35}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 35}
Train Epoch: 36 	Loss: 1.274547
{"metric": "Eval - Clean Accuracy (CA)", "value": 52.97703879651623, "epoch": 36}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 36}
Train Epoch: 37 	Loss: 1.252208
{"metric": "Eval - Clean Accuracy (CA)", "value": 53.808392715756135, "epoch": 37}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 37}
Train Epoch: 38 	Loss: 1.229141
{"metric": "Eval - Clean Accuracy (CA)", "value": 54.639746634996044, "epoch": 38}
{"metric": "Eval - Attack Success Rate-Baseline (ASR-B)", "value": 0.0, "epoch": 38}
Train Epoch: 39 	Loss: 1.201894
{"metric": "Eval - Clean Accuracy (CA)", "value": 55.360253365003956, "epoch": 39}
Traceback (most recent call last):
  File "/mnt/sda/hrzhang/anaconda3/envs/badencoder/lib/python3.8/multiprocessing/resource_sharer.py", line 142, in _serve
    with self._listener.accept() as conn:
  File "/mnt/sda/hrzhang/anaconda3/envs/badencoder/lib/python3.8/multiprocessing/connection.py", line 466, in accept
    answer_challenge(c, self._authkey)
  File "/mnt/sda/hrzhang/anaconda3/envs/badencoder/lib/python3.8/multiprocessing/connection.py", line 757, in answer_challenge
    response = connection.recv_bytes(256)        # reject large message
  File "/mnt/sda/hrzhang/anaconda3/envs/badencoder/lib/python3.8/multiprocessing/connection.py", line 216, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/mnt/sda/hrzhang/anaconda3/envs/badencoder/lib/python3.8/multiprocessing/connection.py", line 414, in _recv_bytes
    buf = self._recv(4)
  File "/mnt/sda/hrzhang/anaconda3/envs/badencoder/lib/python3.8/multiprocessing/connection.py", line 379, in _recv
    chunk = read(handle, remaining)
ConnectionResetError: [Errno 104] Connection reset by peer
