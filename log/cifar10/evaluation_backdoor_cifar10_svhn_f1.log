/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-15 00:13:19
当前时间： 2024-01-15 00:13:20
test_transform_cifar10
Loaded from: ./output/cifar10/svhn_backdoored_encoder/model_200.pth
Predicting features
Feature extracting:   0%|          | 0/1145 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/1145 [00:03<57:21,  3.01s/it]Feature extracting:   2%|▏         | 19/1145 [00:03<02:13,  8.45it/s]Feature extracting:   3%|▎         | 29/1145 [00:03<01:20, 13.84it/s]Feature extracting:   3%|▎         | 39/1145 [00:03<00:54, 20.32it/s]Feature extracting:   4%|▍         | 48/1145 [00:03<00:40, 27.08it/s]Feature extracting:   5%|▍         | 57/1145 [00:03<00:31, 34.56it/s]Feature extracting:   6%|▌         | 66/1145 [00:03<00:25, 42.24it/s]Feature extracting:   7%|▋         | 75/1145 [00:03<00:21, 49.74it/s]Feature extracting:   7%|▋         | 84/1145 [00:03<00:18, 56.59it/s]Feature extracting:   8%|▊         | 93/1145 [00:04<00:16, 62.54it/s]Feature extracting:   9%|▉         | 102/1145 [00:04<00:15, 67.48it/s]Feature extracting:  10%|▉         | 111/1145 [00:04<00:14, 71.34it/s]Feature extracting:  10%|█         | 120/1145 [00:04<00:13, 74.40it/s]Feature extracting:  11%|█▏        | 129/1145 [00:04<00:13, 77.01it/s]Feature extracting:  12%|█▏        | 138/1145 [00:04<00:12, 78.93it/s]Feature extracting:  13%|█▎        | 147/1145 [00:04<00:12, 80.04it/s]Feature extracting:  14%|█▎        | 156/1145 [00:04<00:12, 81.52it/s]Feature extracting:  14%|█▍        | 165/1145 [00:04<00:11, 82.24it/s]Feature extracting:  15%|█▌        | 174/1145 [00:04<00:11, 81.69it/s]Feature extracting:  16%|█▌        | 183/1145 [00:05<00:11, 83.32it/s]Feature extracting:  17%|█▋        | 192/1145 [00:05<00:11, 82.61it/s]Feature extracting:  18%|█▊        | 201/1145 [00:05<00:11, 83.99it/s]Feature extracting:  18%|█▊        | 210/1145 [00:05<00:11, 83.93it/s]Feature extracting:  19%|█▉        | 219/1145 [00:05<00:11, 83.98it/s]Feature extracting:  20%|█▉        | 228/1145 [00:05<00:10, 83.90it/s]Feature extracting:  21%|██        | 237/1145 [00:05<00:10, 83.90it/s]Feature extracting:  21%|██▏       | 246/1145 [00:05<00:10, 83.89it/s]Feature extracting:  22%|██▏       | 255/1145 [00:05<00:10, 83.85it/s]Feature extracting:  23%|██▎       | 264/1145 [00:06<00:10, 83.89it/s]Feature extracting:  24%|██▍       | 273/1145 [00:06<00:10, 83.79it/s]Feature extracting:  25%|██▍       | 282/1145 [00:06<00:10, 83.44it/s]Feature extracting:  25%|██▌       | 291/1145 [00:06<00:10, 83.10it/s]Feature extracting:  26%|██▌       | 300/1145 [00:06<00:10, 82.86it/s]Feature extracting:  27%|██▋       | 309/1145 [00:06<00:10, 82.76it/s]Feature extracting:  28%|██▊       | 318/1145 [00:06<00:10, 82.53it/s]Feature extracting:  29%|██▊       | 327/1145 [00:06<00:09, 82.48it/s]Feature extracting:  29%|██▉       | 336/1145 [00:06<00:09, 82.42it/s]Feature extracting:  30%|███       | 345/1145 [00:07<00:09, 82.36it/s]Feature extracting:  31%|███       | 354/1145 [00:07<00:09, 82.64it/s]Feature extracting:  32%|███▏      | 363/1145 [00:07<00:09, 81.52it/s]Feature extracting:  32%|███▏      | 372/1145 [00:07<00:10, 77.12it/s]Feature extracting:  33%|███▎      | 383/1145 [00:07<00:08, 85.85it/s]Feature extracting:  34%|███▍      | 392/1145 [00:07<00:08, 84.98it/s]Feature extracting:  35%|███▌      | 401/1145 [00:07<00:08, 84.24it/s]Feature extracting:  36%|███▌      | 410/1145 [00:07<00:08, 83.64it/s]Feature extracting:  37%|███▋      | 419/1145 [00:07<00:08, 83.36it/s]Feature extracting:  37%|███▋      | 428/1145 [00:08<00:08, 83.06it/s]Feature extracting:  38%|███▊      | 437/1145 [00:08<00:08, 82.80it/s]Feature extracting:  39%|███▉      | 446/1145 [00:08<00:08, 82.88it/s]Feature extracting:  40%|███▉      | 455/1145 [00:08<00:08, 82.75it/s]Feature extracting:  41%|████      | 464/1145 [00:08<00:08, 82.69it/s]Feature extracting:  41%|████▏     | 473/1145 [00:08<00:08, 82.49it/s]Feature extracting:  42%|████▏     | 482/1145 [00:08<00:08, 82.53it/s]Feature extracting:  43%|████▎     | 491/1145 [00:08<00:07, 82.52it/s]Feature extracting:  44%|████▎     | 500/1145 [00:08<00:07, 82.52it/s]Feature extracting:  44%|████▍     | 509/1145 [00:09<00:07, 82.42it/s]Feature extracting:  45%|████▌     | 518/1145 [00:09<00:07, 82.46it/s]Feature extracting:  46%|████▌     | 527/1145 [00:09<00:07, 82.40it/s]Feature extracting:  47%|████▋     | 536/1145 [00:09<00:07, 82.57it/s]Feature extracting:  48%|████▊     | 545/1145 [00:09<00:07, 82.63it/s]Feature extracting:  48%|████▊     | 554/1145 [00:09<00:07, 82.48it/s]Feature extracting:  49%|████▉     | 563/1145 [00:09<00:07, 82.46it/s]Feature extracting:  50%|████▉     | 572/1145 [00:09<00:06, 82.41it/s]Feature extracting:  51%|█████     | 581/1145 [00:09<00:06, 82.53it/s]Feature extracting:  52%|█████▏    | 590/1145 [00:09<00:06, 82.61it/s]Feature extracting:  52%|█████▏    | 599/1145 [00:10<00:06, 82.48it/s]Feature extracting:  53%|█████▎    | 608/1145 [00:10<00:06, 82.44it/s]Feature extracting:  54%|█████▍    | 617/1145 [00:10<00:06, 82.39it/s]Feature extracting:  55%|█████▍    | 626/1145 [00:10<00:06, 82.36it/s]Feature extracting:  55%|█████▌    | 635/1145 [00:10<00:06, 82.35it/s]Feature extracting:  56%|█████▌    | 644/1145 [00:10<00:06, 82.35it/s]Feature extracting:  57%|█████▋    | 653/1145 [00:10<00:05, 82.37it/s]Feature extracting:  58%|█████▊    | 662/1145 [00:10<00:05, 82.45it/s]Feature extracting:  59%|█████▊    | 671/1145 [00:10<00:05, 82.23it/s]Feature extracting:  59%|█████▉    | 680/1145 [00:11<00:05, 82.91it/s]Feature extracting:  60%|██████    | 689/1145 [00:11<00:05, 82.69it/s]Feature extracting:  61%|██████    | 698/1145 [00:11<00:05, 80.60it/s]Feature extracting:  62%|██████▏   | 707/1145 [00:11<00:06, 70.56it/s]Feature extracting:  62%|██████▏   | 715/1145 [00:11<00:06, 68.47it/s]Feature extracting:  63%|██████▎   | 723/1145 [00:11<00:06, 65.32it/s]Feature extracting:  64%|██████▍   | 730/1145 [00:11<00:06, 63.41it/s]Feature extracting:  64%|██████▍   | 737/1145 [00:11<00:06, 61.99it/s]Feature extracting:  65%|██████▍   | 744/1145 [00:12<00:06, 61.03it/s]Feature extracting:  66%|██████▌   | 751/1145 [00:12<00:06, 60.33it/s]Feature extracting:  66%|██████▌   | 758/1145 [00:12<00:06, 59.79it/s]Feature extracting:  67%|██████▋   | 764/1145 [00:12<00:06, 59.46it/s]Feature extracting:  67%|██████▋   | 770/1145 [00:12<00:06, 59.24it/s]Feature extracting:  68%|██████▊   | 776/1145 [00:12<00:06, 59.02it/s]Feature extracting:  68%|██████▊   | 782/1145 [00:12<00:06, 58.83it/s]Feature extracting:  69%|██████▉   | 788/1145 [00:12<00:06, 58.76it/s]Feature extracting:  69%|██████▉   | 794/1145 [00:12<00:05, 58.76it/s]Feature extracting:  70%|██████▉   | 800/1145 [00:13<00:05, 58.77it/s]Feature extracting:  70%|███████   | 806/1145 [00:13<00:05, 58.62it/s]Feature extracting:  71%|███████   | 812/1145 [00:13<00:05, 58.58it/s]Feature extracting:  71%|███████▏  | 818/1145 [00:13<00:05, 58.63it/s]Feature extracting:  72%|███████▏  | 824/1145 [00:13<00:05, 58.59it/s]Feature extracting:  72%|███████▏  | 830/1145 [00:13<00:05, 58.55it/s]Feature extracting:  73%|███████▎  | 836/1145 [00:13<00:05, 58.57it/s]Feature extracting:  74%|███████▎  | 842/1145 [00:13<00:05, 58.61it/s]Feature extracting:  74%|███████▍  | 848/1145 [00:13<00:05, 58.60it/s]Feature extracting:  75%|███████▍  | 854/1145 [00:13<00:04, 58.34it/s]Feature extracting:  75%|███████▌  | 860/1145 [00:14<00:04, 58.74it/s]Feature extracting:  76%|███████▌  | 866/1145 [00:14<00:04, 58.77it/s]Feature extracting:  76%|███████▌  | 872/1145 [00:14<00:04, 58.65it/s]Feature extracting:  77%|███████▋  | 878/1145 [00:14<00:04, 58.53it/s]Feature extracting:  77%|███████▋  | 884/1145 [00:14<00:04, 58.34it/s]Feature extracting:  78%|███████▊  | 890/1145 [00:14<00:04, 58.52it/s]Feature extracting:  78%|███████▊  | 896/1145 [00:14<00:04, 58.65it/s]Feature extracting:  79%|███████▉  | 902/1145 [00:14<00:04, 58.55it/s]Feature extracting:  79%|███████▉  | 908/1145 [00:14<00:04, 58.63it/s]Feature extracting:  80%|███████▉  | 914/1145 [00:15<00:03, 58.69it/s]Feature extracting:  80%|████████  | 920/1145 [00:15<00:03, 58.66it/s]Feature extracting:  81%|████████  | 926/1145 [00:15<00:03, 58.37it/s]Feature extracting:  81%|████████▏ | 932/1145 [00:15<00:03, 58.52it/s]Feature extracting:  82%|████████▏ | 938/1145 [00:15<00:03, 58.74it/s]Feature extracting:  82%|████████▏ | 944/1145 [00:15<00:03, 58.62it/s]Feature extracting:  83%|████████▎ | 950/1145 [00:15<00:03, 58.11it/s]Feature extracting:  84%|████████▎ | 957/1145 [00:15<00:03, 58.72it/s]Feature extracting:  84%|████████▍ | 963/1145 [00:15<00:03, 58.58it/s]Feature extracting:  85%|████████▍ | 969/1145 [00:15<00:03, 58.66it/s]Feature extracting:  85%|████████▌ | 975/1145 [00:16<00:02, 58.62it/s]Feature extracting:  86%|████████▌ | 981/1145 [00:16<00:02, 58.35it/s]Feature extracting:  86%|████████▌ | 987/1145 [00:16<00:02, 58.70it/s]Feature extracting:  87%|████████▋ | 993/1145 [00:16<00:02, 58.64it/s]Feature extracting:  87%|████████▋ | 999/1145 [00:16<00:02, 58.69it/s]Feature extracting:  88%|████████▊ | 1005/1145 [00:16<00:02, 58.67it/s]Feature extracting:  88%|████████▊ | 1011/1145 [00:16<00:02, 58.60it/s]Feature extracting:  89%|████████▉ | 1017/1145 [00:16<00:02, 58.50it/s]Feature extracting:  89%|████████▉ | 1023/1145 [00:16<00:02, 58.56it/s]Feature extracting:  90%|████████▉ | 1029/1145 [00:16<00:01, 58.68it/s]Feature extracting:  90%|█████████ | 1035/1145 [00:17<00:01, 58.60it/s]Feature extracting:  91%|█████████ | 1041/1145 [00:17<00:01, 58.52it/s]Feature extracting:  91%|█████████▏| 1047/1145 [00:17<00:01, 58.57it/s]Feature extracting:  92%|█████████▏| 1053/1145 [00:17<00:01, 58.57it/s]Feature extracting:  92%|█████████▏| 1059/1145 [00:17<00:01, 58.56it/s]Feature extracting:  93%|█████████▎| 1065/1145 [00:17<00:01, 58.56it/s]Feature extracting:  94%|█████████▎| 1071/1145 [00:17<00:01, 58.59it/s]Feature extracting:  94%|█████████▍| 1077/1145 [00:17<00:01, 58.34it/s]Feature extracting:  95%|█████████▍| 1083/1145 [00:17<00:01, 58.59it/s]Feature extracting:  95%|█████████▌| 1089/1145 [00:17<00:00, 58.39it/s]Feature extracting:  96%|█████████▌| 1095/1145 [00:18<00:00, 58.71it/s]Feature extracting:  96%|█████████▌| 1101/1145 [00:18<00:00, 58.64it/s]Feature extracting:  97%|█████████▋| 1107/1145 [00:18<00:00, 58.54it/s]Feature extracting:  97%|█████████▋| 1113/1145 [00:18<00:00, 58.53it/s]Feature extracting:  98%|█████████▊| 1119/1145 [00:18<00:00, 58.58it/s]Feature extracting:  98%|█████████▊| 1125/1145 [00:18<00:00, 58.57it/s]Feature extracting:  99%|█████████▉| 1131/1145 [00:18<00:00, 58.53it/s]Feature extracting:  99%|█████████▉| 1137/1145 [00:18<00:00, 58.58it/s]Feature extracting: 100%|█████████▉| 1143/1145 [00:18<00:00, 58.59it/s]Feature extracting: 100%|██████████| 1145/1145 [00:19<00:00, 59.79it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<02:01,  3.33it/s]Feature extracting:   4%|▍         | 16/407 [00:00<00:07, 49.00it/s]Feature extracting:   6%|▌         | 25/407 [00:00<00:07, 52.89it/s]Feature extracting:   8%|▊         | 33/407 [00:00<00:06, 54.81it/s]Feature extracting:  10%|▉         | 40/407 [00:00<00:06, 55.89it/s]Feature extracting:  12%|█▏        | 47/407 [00:00<00:06, 56.73it/s]Feature extracting:  13%|█▎        | 54/407 [00:01<00:06, 57.29it/s]Feature extracting:  15%|█▍        | 61/407 [00:01<00:06, 57.66it/s]Feature extracting:  17%|█▋        | 68/407 [00:01<00:05, 57.94it/s]Feature extracting:  18%|█▊        | 74/407 [00:01<00:05, 58.11it/s]Feature extracting:  20%|█▉        | 80/407 [00:01<00:05, 58.20it/s]Feature extracting:  21%|██        | 86/407 [00:01<00:05, 58.24it/s]Feature extracting:  23%|██▎       | 92/407 [00:01<00:05, 58.38it/s]Feature extracting:  24%|██▍       | 98/407 [00:01<00:05, 58.46it/s]Feature extracting:  26%|██▌       | 104/407 [00:01<00:05, 58.45it/s]Feature extracting:  27%|██▋       | 110/407 [00:02<00:05, 58.40it/s]Feature extracting:  29%|██▊       | 116/407 [00:02<00:04, 58.47it/s]Feature extracting:  30%|██▉       | 122/407 [00:02<00:04, 58.51it/s]Feature extracting:  31%|███▏      | 128/407 [00:02<00:04, 58.48it/s]Feature extracting:  33%|███▎      | 134/407 [00:02<00:04, 58.50it/s]Feature extracting:  34%|███▍      | 140/407 [00:02<00:04, 58.54it/s]Feature extracting:  36%|███▌      | 146/407 [00:02<00:04, 58.54it/s]Feature extracting:  37%|███▋      | 152/407 [00:02<00:04, 58.54it/s]Feature extracting:  39%|███▉      | 158/407 [00:02<00:04, 58.53it/s]Feature extracting:  40%|████      | 164/407 [00:02<00:04, 58.55it/s]Feature extracting:  42%|████▏     | 170/407 [00:03<00:04, 58.57it/s]Feature extracting:  43%|████▎     | 176/407 [00:03<00:03, 58.49it/s]Feature extracting:  45%|████▍     | 182/407 [00:03<00:03, 58.44it/s]Feature extracting:  46%|████▌     | 188/407 [00:03<00:03, 58.52it/s]Feature extracting:  48%|████▊     | 194/407 [00:03<00:03, 58.54it/s]Feature extracting:  49%|████▉     | 200/407 [00:03<00:03, 58.54it/s]Feature extracting:  51%|█████     | 206/407 [00:03<00:03, 58.55it/s]Feature extracting:  52%|█████▏    | 212/407 [00:03<00:03, 58.58it/s]Feature extracting:  54%|█████▎    | 218/407 [00:03<00:03, 58.54it/s]Feature extracting:  55%|█████▌    | 224/407 [00:03<00:03, 58.58it/s]Feature extracting:  57%|█████▋    | 230/407 [00:04<00:03, 58.60it/s]Feature extracting:  58%|█████▊    | 236/407 [00:04<00:02, 58.57it/s]Feature extracting:  59%|█████▉    | 242/407 [00:04<00:02, 58.53it/s]Feature extracting:  61%|██████    | 248/407 [00:04<00:02, 58.43it/s]Feature extracting:  62%|██████▏   | 254/407 [00:04<00:02, 58.49it/s]Feature extracting:  64%|██████▍   | 260/407 [00:04<00:02, 58.53it/s]Feature extracting:  65%|██████▌   | 266/407 [00:04<00:02, 58.53it/s]Feature extracting:  67%|██████▋   | 272/407 [00:04<00:02, 58.52it/s]Feature extracting:  68%|██████▊   | 278/407 [00:04<00:02, 58.56it/s]Feature extracting:  70%|██████▉   | 284/407 [00:04<00:02, 58.59it/s]Feature extracting:  71%|███████▏  | 290/407 [00:05<00:01, 58.51it/s]Feature extracting:  73%|███████▎  | 296/407 [00:05<00:01, 58.51it/s]Feature extracting:  74%|███████▍  | 302/407 [00:05<00:01, 58.57it/s]Feature extracting:  76%|███████▌  | 308/407 [00:05<00:01, 58.57it/s]Feature extracting:  77%|███████▋  | 314/407 [00:05<00:01, 58.53it/s]Feature extracting:  79%|███████▊  | 320/407 [00:05<00:01, 58.48it/s]Feature extracting:  80%|████████  | 326/407 [00:05<00:01, 58.54it/s]Feature extracting:  82%|████████▏ | 332/407 [00:05<00:01, 58.54it/s]Feature extracting:  83%|████████▎ | 338/407 [00:05<00:01, 58.55it/s]Feature extracting:  85%|████████▍ | 344/407 [00:06<00:01, 58.57it/s]Feature extracting:  86%|████████▌ | 350/407 [00:06<00:00, 58.60it/s]Feature extracting:  87%|████████▋ | 356/407 [00:06<00:00, 58.58it/s]Feature extracting:  89%|████████▉ | 362/407 [00:06<00:00, 58.57it/s]Feature extracting:  90%|█████████ | 368/407 [00:06<00:00, 58.59it/s]Feature extracting:  92%|█████████▏| 374/407 [00:06<00:00, 58.58it/s]Feature extracting:  93%|█████████▎| 380/407 [00:06<00:00, 58.55it/s]Feature extracting:  95%|█████████▍| 386/407 [00:06<00:00, 58.50it/s]Feature extracting:  96%|█████████▋| 392/407 [00:06<00:00, 58.43it/s]Feature extracting:  98%|█████████▊| 398/407 [00:06<00:00, 58.49it/s]Feature extracting:  99%|█████████▉| 404/407 [00:07<00:00, 58.50it/s]Feature extracting: 100%|██████████| 407/407 [00:07<00:00, 55.50it/s]
Traceback (most recent call last):
  File "training_downstream_classifier.py", line 101, in <module>
    feature_bank_backdoor, label_bank_backdoor = predict_feature(args,model.f, test_loader_backdoor,'backdoor')
  File "/home/hrzhang/projects/badencoder_filter/evaluation/nn_classifier.py", line 91, in predict_feature
    state_dict = torch.load(args.trigger_file, map_location=torch.device('cuda:0'))
  File "/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torch/serialization.py", line 797, in load
    with _open_zipfile_reader(opened_file) as opened_zipfile:
  File "/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torch/serialization.py", line 283, in __init__
    super().__init__(torch._C.PyTorchFileReader(name_or_buffer))
RuntimeError: [enforce fail at inline_container.cc:130] . file in archive is not in a subdirectory: t.npy
