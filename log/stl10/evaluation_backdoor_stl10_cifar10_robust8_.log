randomJPEGcompression
randomJPEGcompression
randomJPEGcompression
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-06 19:56:40
当前时间： 2024-01-06 19:56:41
test_transform_stl10
Loaded from: ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:10:47/model_200.pth
Namespace(batch_size=32, color=0.0, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='1', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/airplane.npz', reference_label=0, results_dir='./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:10:47/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:10:47', trigger_file='optimize_filter/trigger/stl10/2023-12-19-01-25-16/ssim0.9987_psnr42.79_lp0.0002_wd0.002_color4.971.pt', value_hsv=1)
{'loss': -20.951350208433887, 'wd': 0.0018064033534527916, 'ssim': 0.9964274972791708, 'psnr': 39.506030809253495, 'lp': 0.0005328581722628902, 'sim': -20.951350208433887, 'far': 0.0, 'color': 5.0124844556886625}
Predicting features
Feature extracting:   0%|          | 0/782 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/782 [00:01<24:12,  1.86s/it]Feature extracting:   3%|▎         | 26/782 [00:01<00:41, 18.24it/s]Feature extracting:   5%|▌         | 42/782 [00:02<00:23, 31.15it/s]Feature extracting:   7%|▋         | 57/782 [00:02<00:16, 44.73it/s]Feature extracting:   9%|▉         | 72/782 [00:02<00:11, 59.44it/s]Feature extracting:  11%|█▏        | 88/782 [00:02<00:09, 75.49it/s]Feature extracting:  13%|█▎        | 103/782 [00:02<00:07, 89.22it/s]Feature extracting:  15%|█▌        | 118/782 [00:02<00:06, 101.56it/s]Feature extracting:  17%|█▋        | 135/782 [00:02<00:05, 116.70it/s]Feature extracting:  19%|█▉        | 152/782 [00:02<00:04, 128.82it/s]Feature extracting:  21%|██▏       | 168/782 [00:02<00:04, 136.85it/s]Feature extracting:  24%|██▎       | 184/782 [00:02<00:04, 142.60it/s]Feature extracting:  26%|██▌       | 200/782 [00:03<00:03, 145.78it/s]Feature extracting:  28%|██▊       | 216/782 [00:03<00:03, 146.46it/s]Feature extracting:  30%|██▉       | 234/782 [00:03<00:03, 154.63it/s]Feature extracting:  32%|███▏      | 251/782 [00:03<00:03, 156.16it/s]Feature extracting:  34%|███▍      | 268/782 [00:03<00:03, 157.91it/s]Feature extracting:  36%|███▋      | 285/782 [00:03<00:03, 156.40it/s]Feature extracting:  39%|███▊      | 302/782 [00:03<00:03, 158.42it/s]Feature extracting:  41%|████      | 320/782 [00:03<00:02, 162.90it/s]Feature extracting:  43%|████▎     | 337/782 [00:03<00:02, 160.38it/s]Feature extracting:  46%|████▌     | 357/782 [00:04<00:02, 165.33it/s]Feature extracting:  48%|████▊     | 374/782 [00:04<00:02, 153.29it/s]Feature extracting:  51%|█████     | 396/782 [00:04<00:02, 170.80it/s]Feature extracting:  53%|█████▎    | 417/782 [00:04<00:02, 178.85it/s]Feature extracting:  56%|█████▌    | 436/782 [00:04<00:01, 175.42it/s]Feature extracting:  58%|█████▊    | 454/782 [00:04<00:01, 173.83it/s]Feature extracting:  60%|██████    | 472/782 [00:04<00:01, 173.59it/s]Feature extracting:  63%|██████▎   | 491/782 [00:04<00:01, 175.44it/s]Feature extracting:  65%|██████▌   | 509/782 [00:04<00:01, 176.70it/s]Feature extracting:  67%|██████▋   | 527/782 [00:05<00:01, 171.45it/s]Feature extracting:  70%|██████▉   | 545/782 [00:05<00:01, 169.26it/s]Feature extracting:  72%|███████▏  | 562/782 [00:05<00:01, 153.06it/s]Feature extracting:  75%|███████▍  | 583/782 [00:05<00:01, 165.51it/s]Feature extracting:  77%|███████▋  | 600/782 [00:05<00:01, 163.86it/s]Feature extracting:  79%|███████▉  | 617/782 [00:05<00:01, 163.97it/s]Feature extracting:  81%|████████  | 634/782 [00:05<00:00, 163.07it/s]Feature extracting:  83%|████████▎ | 651/782 [00:05<00:00, 157.83it/s]Feature extracting:  85%|████████▌ | 667/782 [00:05<00:00, 152.96it/s]Feature extracting:  87%|████████▋ | 683/782 [00:06<00:00, 151.05it/s]Feature extracting:  89%|████████▉ | 699/782 [00:06<00:00, 149.31it/s]Feature extracting:  91%|█████████▏| 714/782 [00:06<00:00, 147.81it/s]Feature extracting:  93%|█████████▎| 729/782 [00:06<00:00, 143.80it/s]Feature extracting:  95%|█████████▌| 746/782 [00:06<00:00, 149.93it/s]Feature extracting:  97%|█████████▋| 762/782 [00:06<00:00, 149.69it/s]Feature extracting:  99%|█████████▉| 777/782 [00:06<00:00, 148.22it/s]Feature extracting: 100%|██████████| 782/782 [00:06<00:00, 113.49it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:16,  2.04it/s]Feature extracting:  13%|█▎        | 20/157 [00:00<00:03, 44.15it/s]Feature extracting:  22%|██▏       | 35/157 [00:00<00:01, 69.09it/s]Feature extracting:  32%|███▏      | 51/157 [00:00<00:01, 92.24it/s]Feature extracting:  43%|████▎     | 68/157 [00:00<00:00, 112.70it/s]Feature extracting:  54%|█████▍    | 85/157 [00:01<00:00, 127.69it/s]Feature extracting:  68%|██████▊   | 107/157 [00:01<00:00, 152.95it/s]Feature extracting:  80%|███████▉  | 125/157 [00:01<00:00, 156.87it/s]Feature extracting:  91%|█████████ | 143/157 [00:01<00:00, 159.44it/s]Feature extracting: 100%|██████████| 157/157 [00:01<00:00, 105.32it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:51,  1.40it/s]Feature extracting:   8%|▊         | 12/157 [00:00<00:07, 19.37it/s]Feature extracting:  15%|█▍        | 23/157 [00:00<00:03, 36.55it/s]Feature extracting:  22%|██▏       | 34/157 [00:01<00:02, 51.42it/s]Feature extracting:  29%|██▊       | 45/157 [00:01<00:01, 63.72it/s]Feature extracting:  36%|███▌      | 56/157 [00:01<00:01, 73.71it/s]Feature extracting:  43%|████▎     | 67/157 [00:01<00:01, 80.99it/s]Feature extracting:  50%|████▉     | 78/157 [00:01<00:00, 86.88it/s]Feature extracting:  56%|█████▌    | 88/157 [00:01<00:00, 87.19it/s]Feature extracting:  62%|██████▏   | 98/157 [00:01<00:00, 87.56it/s]Feature extracting:  69%|██████▉   | 109/157 [00:01<00:00, 91.93it/s]Feature extracting:  76%|███████▋  | 120/157 [00:01<00:00, 94.95it/s]Feature extracting:  83%|████████▎ | 131/157 [00:02<00:00, 97.32it/s]Feature extracting:  90%|█████████ | 142/157 [00:02<00:00, 100.65it/s]Feature extracting:  97%|█████████▋| 153/157 [00:02<00:00, 102.74it/s]Feature extracting: 100%|██████████| 157/157 [00:02<00:00, 66.17it/s] 
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  2.01it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.74it/s]
feature banks saved to ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:10:47/feature_banks.pkl
Train Epoch: 1 	Loss: 1.595677
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 57.6, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 1.134257
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.52, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 1.059845
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.52, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 1.014226
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.8, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 0.981298
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.52, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 0.954597
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 66.24, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 0.931891
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 66.93, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 0.913232
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 67.58, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 0.896235
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 68.2, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 0.881054
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 68.77, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 0.866747
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.06, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 0.857024
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.52, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 0.845975
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.8, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 0.836501
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.91, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 0.826297
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.31, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 0.817970
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.65, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 0.811129
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.99, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 0.803949
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.27, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 0.795288
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.56, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 0.790603
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.68, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 0.783249
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.88, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 0.777383
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.92, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 0.770768
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.09, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 0.766938
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.22, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 0.763000
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.38, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 0.754942
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.52, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 0.751358
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.64, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 0.746432
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.74, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 0.743252
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.78, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 0.737734
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.0, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 30}
Train Epoch: 31 	Loss: 0.735570
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.94, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 31}
Train Epoch: 32 	Loss: 0.730075
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.05, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 32}
Train Epoch: 33 	Loss: 0.725502
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.15, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 33}
Train Epoch: 34 	Loss: 0.720354
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.22, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 34}
Train Epoch: 35 	Loss: 0.717551
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.26, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 35}
Train Epoch: 36 	Loss: 0.713567
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.43, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 36}
Train Epoch: 37 	Loss: 0.709640
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.51, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 37}
Train Epoch: 38 	Loss: 0.708337
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.74, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 38}
Train Epoch: 39 	Loss: 0.701803
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.72, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 39}
Train Epoch: 40 	Loss: 0.697972
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.89, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 40}
Train Epoch: 41 	Loss: 0.693862
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.14, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 41}
Train Epoch: 42 	Loss: 0.692811
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.07, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 42}
Train Epoch: 43 	Loss: 0.687456
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.14, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 43}
Train Epoch: 44 	Loss: 0.686261
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.22, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 44}
Train Epoch: 45 	Loss: 0.682441
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.2, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 45}
Train Epoch: 46 	Loss: 0.678736
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.08, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 46}
Train Epoch: 47 	Loss: 0.677057
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.36, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 47}
Train Epoch: 48 	Loss: 0.673074
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.52, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 48}
Train Epoch: 49 	Loss: 0.668896
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.43, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 49}
Train Epoch: 50 	Loss: 0.666358
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.53, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 50}
Train Epoch: 51 	Loss: 0.661099
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.5, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 51}
Train Epoch: 52 	Loss: 0.658306
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.57, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 52}
Train Epoch: 53 	Loss: 0.654972
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.56, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 53}
Train Epoch: 54 	Loss: 0.652893
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.59, "epoch": 54}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 54}
