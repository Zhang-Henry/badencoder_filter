/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2023-12-29 18:04:09
当前时间： 2023-12-29 18:04:10
test_transform_stl10
Loaded from: ./output/stl10/gtsrb_backdoored_encoder/2023-12-19-12:01:16/model_100.pth
Namespace(batch_size=800, color=0.0, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='5', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=1.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/priority.npz', reference_label=0, results_dir='./output/stl10/gtsrb_backdoored_encoder/2023-12-19-12:01:16/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2023-12-19-12:01:16', trigger_file='optimize_filter/trigger/stl10/2023-12-19-01-25-16/ssim0.9987_psnr42.79_lp0.0002_wd0.002_color4.971.pt', value_hsv=1)
{'loss': -1.9758519645660155, 'wd': 0.00043662939318774957, 'ssim': 0.9996087406912157, 'psnr': 47.00904901566044, 'lp': 4.956814926469721e-05, 'sim': -1.9758519645660155, 'far': 0.0, 'color': 4.73392565019669}
Predicting features
Feature extracting:   0%|          | 0/613 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/613 [00:02<27:57,  2.74s/it]Feature extracting:   3%|▎         | 19/613 [00:02<01:04,  9.21it/s]Feature extracting:   5%|▍         | 29/613 [00:02<00:38, 15.04it/s]Feature extracting:   6%|▋         | 39/613 [00:03<00:26, 21.86it/s]Feature extracting:   8%|▊         | 48/613 [00:03<00:19, 28.94it/s]Feature extracting:   9%|▉         | 57/613 [00:03<00:15, 36.57it/s]Feature extracting:  11%|█         | 66/613 [00:03<00:12, 44.51it/s]Feature extracting:  12%|█▏        | 75/613 [00:03<00:10, 52.06it/s]Feature extracting:  14%|█▍        | 85/613 [00:03<00:08, 61.30it/s]Feature extracting:  15%|█▌        | 94/613 [00:03<00:07, 66.69it/s]Feature extracting:  17%|█▋        | 103/613 [00:03<00:07, 70.50it/s]Feature extracting:  18%|█▊        | 112/613 [00:03<00:06, 74.92it/s]Feature extracting:  20%|█▉        | 121/613 [00:04<00:06, 76.88it/s]Feature extracting:  21%|██        | 130/613 [00:04<00:06, 78.00it/s]Feature extracting:  23%|██▎       | 139/613 [00:04<00:05, 80.01it/s]Feature extracting:  24%|██▍       | 148/613 [00:04<00:05, 81.09it/s]Feature extracting:  26%|██▌       | 157/613 [00:04<00:05, 81.81it/s]Feature extracting:  27%|██▋       | 166/613 [00:04<00:05, 82.52it/s]Feature extracting:  29%|██▊       | 176/613 [00:04<00:05, 85.25it/s]Feature extracting:  30%|███       | 185/613 [00:04<00:05, 84.37it/s]Feature extracting:  32%|███▏      | 194/613 [00:04<00:04, 85.45it/s]Feature extracting:  33%|███▎      | 203/613 [00:05<00:04, 84.95it/s]Feature extracting:  35%|███▍      | 212/613 [00:05<00:04, 83.66it/s]Feature extracting:  36%|███▌      | 221/613 [00:05<00:04, 83.92it/s]Feature extracting:  38%|███▊      | 230/613 [00:05<00:04, 83.95it/s]Feature extracting:  39%|███▉      | 239/613 [00:05<00:04, 83.93it/s]Feature extracting:  40%|████      | 248/613 [00:05<00:04, 84.28it/s]Feature extracting:  42%|████▏     | 258/613 [00:05<00:04, 87.24it/s]Feature extracting:  44%|████▎     | 267/613 [00:05<00:04, 85.97it/s]Feature extracting:  45%|████▌     | 276/613 [00:05<00:03, 84.76it/s]Feature extracting:  46%|████▋     | 285/613 [00:05<00:03, 85.44it/s]Feature extracting:  48%|████▊     | 294/613 [00:06<00:03, 84.22it/s]Feature extracting:  49%|████▉     | 303/613 [00:06<00:03, 83.17it/s]Feature extracting:  51%|█████     | 312/613 [00:06<00:03, 83.28it/s]Feature extracting:  52%|█████▏    | 321/613 [00:06<00:03, 83.06it/s]Feature extracting:  54%|█████▍    | 330/613 [00:06<00:03, 83.84it/s]Feature extracting:  55%|█████▌    | 339/613 [00:06<00:03, 83.73it/s]Feature extracting:  57%|█████▋    | 349/613 [00:06<00:02, 88.17it/s]Feature extracting:  58%|█████▊    | 358/613 [00:06<00:02, 86.38it/s]Feature extracting:  60%|█████▉    | 367/613 [00:06<00:02, 86.10it/s]Feature extracting:  61%|██████▏   | 376/613 [00:07<00:02, 85.43it/s]Feature extracting:  63%|██████▎   | 385/613 [00:07<00:02, 83.96it/s]Feature extracting:  64%|██████▍   | 394/613 [00:07<00:02, 83.89it/s]Feature extracting:  66%|██████▌   | 403/613 [00:07<00:02, 83.94it/s]Feature extracting:  67%|██████▋   | 412/613 [00:07<00:02, 83.81it/s]Feature extracting:  69%|██████▊   | 421/613 [00:07<00:02, 83.98it/s]Feature extracting:  70%|███████   | 430/613 [00:07<00:02, 84.96it/s]Feature extracting:  72%|███████▏  | 440/613 [00:07<00:01, 88.51it/s]Feature extracting:  73%|███████▎  | 449/613 [00:07<00:01, 86.22it/s]Feature extracting:  75%|███████▍  | 458/613 [00:08<00:01, 86.47it/s]Feature extracting:  76%|███████▌  | 467/613 [00:08<00:01, 85.47it/s]Feature extracting:  78%|███████▊  | 476/613 [00:08<00:01, 84.01it/s]Feature extracting:  79%|███████▉  | 485/613 [00:08<00:01, 84.53it/s]Feature extracting:  81%|████████  | 494/613 [00:08<00:01, 84.14it/s]Feature extracting:  82%|████████▏ | 503/613 [00:08<00:01, 84.24it/s]Feature extracting:  84%|████████▎ | 512/613 [00:08<00:01, 84.13it/s]Feature extracting:  85%|████████▌ | 522/613 [00:08<00:01, 87.96it/s]Feature extracting:  87%|████████▋ | 531/613 [00:08<00:00, 87.43it/s]Feature extracting:  88%|████████▊ | 540/613 [00:08<00:00, 85.75it/s]Feature extracting:  90%|████████▉ | 549/613 [00:09<00:00, 86.40it/s]Feature extracting:  91%|█████████ | 558/613 [00:09<00:00, 84.79it/s]Feature extracting:  92%|█████████▏| 567/613 [00:09<00:00, 83.49it/s]Feature extracting:  94%|█████████▍| 576/613 [00:09<00:00, 84.14it/s]Feature extracting:  95%|█████████▌| 585/613 [00:09<00:00, 84.04it/s]Feature extracting:  97%|█████████▋| 594/613 [00:09<00:00, 83.88it/s]Feature extracting:  98%|█████████▊| 603/613 [00:09<00:00, 84.73it/s]Feature extracting: 100%|█████████▉| 612/613 [00:09<00:00, 85.55it/s]Feature extracting: 100%|██████████| 613/613 [00:10<00:00, 60.94it/s]
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<01:16,  2.58it/s]Feature extracting:  10%|▉         | 19/198 [00:00<00:03, 48.91it/s]Feature extracting:  15%|█▍        | 29/198 [00:00<00:02, 59.54it/s]Feature extracting:  20%|█▉        | 39/198 [00:00<00:02, 66.33it/s]Feature extracting:  24%|██▍       | 48/198 [00:00<00:02, 71.67it/s]Feature extracting:  29%|██▉       | 57/198 [00:00<00:01, 75.16it/s]Feature extracting:  33%|███▎      | 66/198 [00:01<00:01, 77.63it/s]Feature extracting:  38%|███▊      | 75/198 [00:01<00:01, 79.85it/s]Feature extracting:  43%|████▎     | 85/198 [00:01<00:01, 84.88it/s]Feature extracting:  47%|████▋     | 94/198 [00:01<00:01, 84.11it/s]Feature extracting:  52%|█████▏    | 103/198 [00:01<00:01, 83.62it/s]Feature extracting:  57%|█████▋    | 112/198 [00:01<00:01, 84.62it/s]Feature extracting:  61%|██████    | 121/198 [00:01<00:00, 83.57it/s]Feature extracting:  66%|██████▌   | 130/198 [00:01<00:00, 83.42it/s]Feature extracting:  70%|███████   | 139/198 [00:01<00:00, 83.56it/s]Feature extracting:  75%|███████▍  | 148/198 [00:02<00:00, 83.61it/s]Feature extracting:  79%|███████▉  | 157/198 [00:02<00:00, 83.56it/s]Feature extracting:  84%|████████▍ | 167/198 [00:02<00:00, 87.07it/s]Feature extracting:  89%|████████▉ | 176/198 [00:02<00:00, 86.15it/s]Feature extracting:  93%|█████████▎| 185/198 [00:02<00:00, 84.89it/s]Feature extracting:  98%|█████████▊| 194/198 [00:02<00:00, 85.96it/s]Feature extracting: 100%|██████████| 198/198 [00:02<00:00, 69.02it/s]
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<01:24,  2.32it/s]Feature extracting:   4%|▎         | 7/198 [00:00<00:11, 16.45it/s]Feature extracting:   7%|▋         | 13/198 [00:00<00:06, 27.14it/s]Feature extracting:  10%|▉         | 19/198 [00:00<00:05, 35.55it/s]Feature extracting:  13%|█▎        | 25/198 [00:00<00:04, 41.55it/s]Feature extracting:  16%|█▌        | 31/198 [00:00<00:03, 45.88it/s]Feature extracting:  19%|█▊        | 37/198 [00:01<00:03, 49.04it/s]Feature extracting:  22%|██▏       | 44/198 [00:01<00:02, 54.17it/s]Feature extracting:  25%|██▌       | 50/198 [00:01<00:02, 54.52it/s]Feature extracting:  28%|██▊       | 56/198 [00:01<00:02, 55.49it/s]Feature extracting:  31%|███▏      | 62/198 [00:01<00:02, 55.60it/s]Feature extracting:  34%|███▍      | 68/198 [00:01<00:02, 55.93it/s]Feature extracting:  37%|███▋      | 74/198 [00:01<00:02, 56.15it/s]Feature extracting:  40%|████      | 80/198 [00:01<00:02, 56.29it/s]Feature extracting:  43%|████▎     | 86/198 [00:01<00:01, 56.64it/s]Feature extracting:  47%|████▋     | 93/198 [00:02<00:01, 59.45it/s]Feature extracting:  50%|█████     | 99/198 [00:02<00:01, 58.64it/s]Feature extracting:  53%|█████▎    | 105/198 [00:02<00:01, 57.93it/s]Feature extracting:  56%|█████▌    | 111/198 [00:02<00:01, 58.52it/s]Feature extracting:  59%|█████▉    | 117/198 [00:02<00:01, 57.44it/s]Feature extracting:  62%|██████▏   | 123/198 [00:02<00:01, 57.39it/s]Feature extracting:  65%|██████▌   | 129/198 [00:02<00:01, 57.16it/s]Feature extracting:  68%|██████▊   | 135/198 [00:02<00:01, 56.97it/s]Feature extracting:  71%|███████   | 141/198 [00:02<00:00, 57.13it/s]Feature extracting:  75%|███████▍  | 148/198 [00:02<00:00, 59.41it/s]Feature extracting:  78%|███████▊  | 154/198 [00:03<00:00, 58.20it/s]Feature extracting:  81%|████████  | 160/198 [00:03<00:00, 58.54it/s]Feature extracting:  84%|████████▍ | 166/198 [00:03<00:00, 57.92it/s]Feature extracting:  87%|████████▋ | 172/198 [00:03<00:00, 57.12it/s]Feature extracting:  90%|████████▉ | 178/198 [00:03<00:00, 57.19it/s]Feature extracting:  93%|█████████▎| 184/198 [00:03<00:00, 57.16it/s]Feature extracting:  96%|█████████▌| 190/198 [00:03<00:00, 56.95it/s]Feature extracting:  99%|█████████▉| 197/198 [00:03<00:00, 59.63it/s]Feature extracting: 100%|██████████| 198/198 [00:03<00:00, 49.74it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  2.38it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  2.06it/s]
Train Epoch: 1 	Loss: 3.785988
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 1}
Train Epoch: 2 	Loss: 3.478195
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 2}
Train Epoch: 3 	Loss: 3.263625
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 3}
Train Epoch: 4 	Loss: 3.215086
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 4}
Train Epoch: 5 	Loss: 3.093887
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 5}
Train Epoch: 6 	Loss: 2.981470
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 6}
Train Epoch: 7 	Loss: 2.899178
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.659540775930324, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 7}
Train Epoch: 8 	Loss: 2.854522
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.604117181314331, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 8}
Train Epoch: 9 	Loss: 2.840829
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.184481393507522, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 9}
Train Epoch: 10 	Loss: 2.819575
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.931116389548693, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.12668250197941408, "epoch": 10}
Train Epoch: 11 	Loss: 2.775603
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.566904196357878, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.5067300079176563, "epoch": 11}
Train Epoch: 12 	Loss: 2.712505
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.749010292953287, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 12}
Train Epoch: 13 	Loss: 2.716577
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.163103721298496, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.07125890736342043, "epoch": 13}
Train Epoch: 14 	Loss: 2.697957
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.767220902612826, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 1.7102137767220902, "epoch": 14}
Train Epoch: 15 	Loss: 2.702200
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.878068091844814, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 2.3990498812351544, "epoch": 15}
Train Epoch: 16 	Loss: 2.725000
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.252573238321457, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 2.6524148851939824, "epoch": 16}
Train Epoch: 17 	Loss: 2.668930
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.434679334916865, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 2.264449722882027, "epoch": 17}
Train Epoch: 18 	Loss: 2.659294
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.656373713380839, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 2.8503562945368173, "epoch": 18}
Train Epoch: 19 	Loss: 2.578138
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.060174188440222, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 3.6183689627870153, "epoch": 19}
Train Epoch: 20 	Loss: 2.588140
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.630245447347585, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 4.243863816310372, "epoch": 20}
Train Epoch: 21 	Loss: 2.522155
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.685669041963578, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 5.146476642913697, "epoch": 21}
Train Epoch: 22 	Loss: 2.579078
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.36658749010293, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.244655581947743, "epoch": 22}
Train Epoch: 23 	Loss: 2.523864
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.675376088677751, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 4.513064133016627, "epoch": 23}
Train Epoch: 24 	Loss: 2.487755
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 10.0, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 3.657957244655582, "epoch": 24}
Train Epoch: 25 	Loss: 2.414295
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 10.087094220110847, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 1.9081551860649248, "epoch": 25}
Train Epoch: 26 	Loss: 2.467341
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 10.166270783847981, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 4.9168646080760094, "epoch": 26}
Train Epoch: 27 	Loss: 2.435400
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.825811559778305, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 5.201900237529691, "epoch": 27}
Train Epoch: 28 	Loss: 2.433683
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 10.245447347585115, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 5.518606492478226, "epoch": 28}
Train Epoch: 29 	Loss: 2.425075
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 10.60965954077593, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.070467141726049, "epoch": 29}
Train Epoch: 30 	Loss: 2.447770
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 13.51543942992874, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 6.516231195566112, "epoch": 30}
Train Epoch: 31 	Loss: 2.398894
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 14.212193190815519, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 3.079968329374505, "epoch": 31}
Train Epoch: 32 	Loss: 2.418632
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 14.44972288202692, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 4.829770387965162, "epoch": 32}
Train Epoch: 33 	Loss: 2.371169
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 17.26049089469517, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 6.880443388756928, "epoch": 33}
Train Epoch: 34 	Loss: 2.380614
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 16.53206650831354, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 3.1037212984956453, "epoch": 34}
Train Epoch: 35 	Loss: 2.389485
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.783847980997624, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.315914489311164, "epoch": 35}
Train Epoch: 36 	Loss: 2.336150
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.63341250989707, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 9.231987331749803, "epoch": 36}
Train Epoch: 37 	Loss: 2.320598
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.43309580364212, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 11.258907363420427, "epoch": 37}
Train Epoch: 38 	Loss: 2.333156
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.288202692003168, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 14.59224069675376, "epoch": 38}
Train Epoch: 39 	Loss: 2.247063
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.955661124307206, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 10.261282660332542, "epoch": 39}
Train Epoch: 40 	Loss: 2.189362
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.755344418052257, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.7434679334916865, "epoch": 40}
Train Epoch: 41 	Loss: 2.187555
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.446555819477435, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 8.24228028503563, "epoch": 41}
Train Epoch: 42 	Loss: 2.160396
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 22.636579572446557, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.498020585906572, "epoch": 42}
Train Epoch: 43 	Loss: 2.144998
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 23.966745843230402, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 6.880443388756928, "epoch": 43}
Train Epoch: 44 	Loss: 2.106405
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.629453681710213, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.086302454473476, "epoch": 44}
Train Epoch: 45 	Loss: 2.099927
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 27.79889152810768, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 7.656373713380839, "epoch": 45}
Train Epoch: 46 	Loss: 2.084262
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 29.48535233570863, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 8.036421219319081, "epoch": 46}
Train Epoch: 47 	Loss: 2.064769
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.110847189231986, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 9.247822644497228, "epoch": 47}
Train Epoch: 48 	Loss: 2.045568
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.174188440221695, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 8.844022169437846, "epoch": 48}
Train Epoch: 49 	Loss: 2.016448
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.791765637371338, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 10.292953285827394, "epoch": 49}
Train Epoch: 50 	Loss: 1.982934
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.364212193190816, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 9.78622327790974, "epoch": 50}
Train Epoch: 51 	Loss: 1.928315
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 31.0055423594616, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 9.865399841646873, "epoch": 51}
Train Epoch: 52 	Loss: 1.921170
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.197941409342835, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 9.58036421219319, "epoch": 52}
Train Epoch: 53 	Loss: 1.893129
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 32.15360253365004, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 8.970704671417261, "epoch": 53}
Train Epoch: 54 	Loss: 1.873862
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 32.44655581947743, "epoch": 54}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 8.931116389548693, "epoch": 54}
Train Epoch: 55 	Loss: 1.877363
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 32.75534441805225, "epoch": 55}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 9.002375296912113, "epoch": 55}
