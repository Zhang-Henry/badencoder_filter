randomJPEGcompression
randomJPEGcompression
randomJPEGcompression
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-06 19:57:06
当前时间： 2024-01-06 19:57:07
test_transform_stl10
Loaded from: ./output/stl10/gtsrb_backdoored_encoder/2024-01-05-17:09:25/model_200.pth
Namespace(batch_size=64, color=0.3, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='3', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/priority.npz', reference_label=0, results_dir='./output/stl10/gtsrb_backdoored_encoder/2024-01-05-17:09:25/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:09:25', trigger_file='optimize_filter/trigger/stl10/2023-12-07-00-21-52/ssim0.9182_psnr22.37_lp0.0263_wd0.702_color10.051.pt', value_hsv=1)
{'loss': -23.043559339379225, 'wd': 0.04125052653777767, 'ssim': 0.9425649173586378, 'psnr': 23.599875827452284, 'lp': 0.02109734911385747, 'sim': -20.2618725589845, 'far': 2.781686767725877, 'color': 9.272288849350737}
Predicting features
Feature extracting:   0%|          | 0/613 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/613 [00:03<38:18,  3.76s/it]Feature extracting:   3%|▎         | 18/613 [00:03<01:32,  6.46it/s]Feature extracting:   4%|▍         | 27/613 [00:03<00:55, 10.48it/s]Feature extracting:   6%|▌         | 36/613 [00:04<00:37, 15.50it/s]Feature extracting:   7%|▋         | 44/613 [00:04<00:27, 20.81it/s]Feature extracting:   8%|▊         | 52/613 [00:04<00:20, 26.89it/s]Feature extracting:  10%|▉         | 60/613 [00:04<00:16, 33.63it/s]Feature extracting:  11%|█         | 68/613 [00:04<00:13, 40.39it/s]Feature extracting:  12%|█▏        | 76/613 [00:04<00:11, 46.77it/s]Feature extracting:  14%|█▎        | 84/613 [00:04<00:10, 52.33it/s]Feature extracting:  15%|█▌        | 92/613 [00:04<00:09, 56.76it/s]Feature extracting:  16%|█▋        | 100/613 [00:04<00:08, 60.25it/s]Feature extracting:  18%|█▊        | 108/613 [00:05<00:07, 63.80it/s]Feature extracting:  19%|█▉        | 116/613 [00:05<00:07, 65.65it/s]Feature extracting:  20%|██        | 124/613 [00:05<00:07, 67.07it/s]Feature extracting:  22%|██▏       | 132/613 [00:05<00:07, 66.42it/s]Feature extracting:  23%|██▎       | 139/613 [00:05<00:07, 65.98it/s]Feature extracting:  24%|██▍       | 146/613 [00:05<00:07, 65.64it/s]Feature extracting:  25%|██▍       | 153/613 [00:05<00:06, 65.79it/s]Feature extracting:  26%|██▋       | 161/613 [00:05<00:06, 68.41it/s]Feature extracting:  27%|██▋       | 168/613 [00:05<00:06, 68.66it/s]Feature extracting:  29%|██▊       | 175/613 [00:06<00:06, 68.83it/s]Feature extracting:  30%|██▉       | 182/613 [00:06<00:06, 68.86it/s]Feature extracting:  31%|███       | 189/613 [00:06<00:06, 69.05it/s]Feature extracting:  32%|███▏      | 197/613 [00:06<00:05, 70.74it/s]Feature extracting:  34%|███▎      | 206/613 [00:06<00:05, 73.87it/s]Feature extracting:  35%|███▍      | 214/613 [00:06<00:05, 74.22it/s]Feature extracting:  36%|███▌      | 222/613 [00:06<00:05, 73.88it/s]Feature extracting:  38%|███▊      | 230/613 [00:06<00:05, 73.71it/s]Feature extracting:  39%|███▉      | 238/613 [00:06<00:05, 73.62it/s]Feature extracting:  40%|████      | 246/613 [00:07<00:04, 74.51it/s]Feature extracting:  41%|████▏     | 254/613 [00:07<00:04, 75.76it/s]Feature extracting:  43%|████▎     | 262/613 [00:07<00:04, 76.46it/s]Feature extracting:  44%|████▍     | 270/613 [00:07<00:04, 76.60it/s]Feature extracting:  45%|████▌     | 278/613 [00:07<00:04, 76.68it/s]Feature extracting:  47%|████▋     | 286/613 [00:07<00:04, 76.98it/s]Feature extracting:  48%|████▊     | 295/613 [00:07<00:04, 79.29it/s]Feature extracting:  50%|████▉     | 304/613 [00:07<00:03, 80.88it/s]Feature extracting:  51%|█████     | 313/613 [00:07<00:03, 82.21it/s]Feature extracting:  53%|█████▎    | 322/613 [00:07<00:03, 82.58it/s]Feature extracting:  54%|█████▍    | 331/613 [00:08<00:03, 82.36it/s]Feature extracting:  55%|█████▌    | 340/613 [00:08<00:03, 81.66it/s]Feature extracting:  57%|█████▋    | 349/613 [00:08<00:03, 81.28it/s]Feature extracting:  58%|█████▊    | 358/613 [00:08<00:03, 81.58it/s]Feature extracting:  60%|█████▉    | 367/613 [00:08<00:03, 81.79it/s]Feature extracting:  61%|██████▏   | 376/613 [00:08<00:02, 80.49it/s]Feature extracting:  63%|██████▎   | 385/613 [00:08<00:02, 82.22it/s]Feature extracting:  64%|██████▍   | 394/613 [00:08<00:02, 81.65it/s]Feature extracting:  66%|██████▌   | 403/613 [00:08<00:02, 81.17it/s]Feature extracting:  67%|██████▋   | 412/613 [00:09<00:02, 80.89it/s]Feature extracting:  69%|██████▊   | 421/613 [00:09<00:02, 81.52it/s]Feature extracting:  70%|███████   | 430/613 [00:09<00:02, 80.64it/s]Feature extracting:  72%|███████▏  | 439/613 [00:09<00:02, 69.95it/s]Feature extracting:  74%|███████▎  | 452/613 [00:09<00:01, 84.00it/s]Feature extracting:  76%|███████▌  | 463/613 [00:09<00:01, 89.65it/s]Feature extracting:  77%|███████▋  | 473/613 [00:09<00:01, 88.37it/s]Feature extracting:  79%|███████▉  | 483/613 [00:09<00:01, 87.19it/s]Feature extracting:  80%|████████  | 492/613 [00:10<00:01, 86.64it/s]Feature extracting:  82%|████████▏ | 501/613 [00:10<00:01, 84.43it/s]Feature extracting:  83%|████████▎ | 510/613 [00:10<00:01, 83.19it/s]Feature extracting:  85%|████████▍ | 519/613 [00:10<00:01, 82.96it/s]Feature extracting:  86%|████████▌ | 528/613 [00:10<00:01, 81.54it/s]Feature extracting:  88%|████████▊ | 537/613 [00:10<00:00, 78.62it/s]Feature extracting:  89%|████████▉ | 545/613 [00:10<00:00, 76.13it/s]Feature extracting:  90%|█████████ | 553/613 [00:10<00:00, 74.76it/s]Feature extracting:  92%|█████████▏| 563/613 [00:10<00:00, 81.62it/s]Feature extracting:  94%|█████████▍| 576/613 [00:11<00:00, 94.27it/s]Feature extracting:  96%|█████████▌| 590/613 [00:11<00:00, 106.30it/s]Feature extracting:  98%|█████████▊| 603/613 [00:11<00:00, 111.95it/s]Feature extracting: 100%|██████████| 613/613 [00:11<00:00, 53.54it/s] 
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<01:17,  2.56it/s]Feature extracting:   9%|▊         | 17/198 [00:00<00:04, 43.72it/s]Feature extracting:  13%|█▎        | 26/198 [00:00<00:03, 51.70it/s]Feature extracting:  17%|█▋        | 34/198 [00:00<00:02, 56.51it/s]Feature extracting:  21%|██        | 42/198 [00:00<00:02, 60.28it/s]Feature extracting:  25%|██▌       | 50/198 [00:00<00:02, 62.52it/s]Feature extracting:  29%|██▉       | 58/198 [00:01<00:02, 64.05it/s]Feature extracting:  33%|███▎      | 65/198 [00:01<00:02, 65.33it/s]Feature extracting:  36%|███▋      | 72/198 [00:01<00:01, 66.09it/s]Feature extracting:  40%|████      | 80/198 [00:01<00:01, 67.95it/s]Feature extracting:  44%|████▍     | 88/198 [00:01<00:01, 69.51it/s]Feature extracting:  48%|████▊     | 96/198 [00:01<00:01, 70.45it/s]Feature extracting:  53%|█████▎    | 104/198 [00:01<00:01, 71.45it/s]Feature extracting:  57%|█████▋    | 112/198 [00:01<00:01, 73.26it/s]Feature extracting:  61%|██████    | 120/198 [00:01<00:01, 73.94it/s]Feature extracting:  65%|██████▍   | 128/198 [00:02<00:01, 67.45it/s]Feature extracting:  68%|██████▊   | 135/198 [00:02<00:00, 63.67it/s]Feature extracting:  72%|███████▏  | 142/198 [00:02<00:00, 61.09it/s]Feature extracting:  75%|███████▌  | 149/198 [00:02<00:00, 59.94it/s]Feature extracting:  79%|███████▉  | 156/198 [00:02<00:00, 58.85it/s]Feature extracting:  82%|████████▏ | 162/198 [00:02<00:00, 57.88it/s]Feature extracting:  85%|████████▍ | 168/198 [00:02<00:00, 57.15it/s]Feature extracting:  88%|████████▊ | 174/198 [00:02<00:00, 56.66it/s]Feature extracting:  91%|█████████ | 180/198 [00:03<00:00, 57.55it/s]Feature extracting:  94%|█████████▍| 186/198 [00:03<00:00, 57.89it/s]Feature extracting:  97%|█████████▋| 192/198 [00:03<00:00, 58.34it/s]Feature extracting: 100%|██████████| 198/198 [00:03<00:00, 37.72it/s]Feature extracting: 100%|██████████| 198/198 [00:03<00:00, 54.84it/s]
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<01:48,  1.81it/s]Feature extracting:   4%|▍         | 8/198 [00:00<00:12, 15.30it/s]Feature extracting:   8%|▊         | 15/198 [00:00<00:06, 26.47it/s]Feature extracting:  11%|█         | 21/198 [00:00<00:05, 33.62it/s]Feature extracting:  14%|█▎        | 27/198 [00:01<00:04, 39.27it/s]Feature extracting:  17%|█▋        | 33/198 [00:01<00:03, 43.73it/s]Feature extracting:  20%|█▉        | 39/198 [00:01<00:03, 47.12it/s]Feature extracting:  23%|██▎       | 45/198 [00:01<00:03, 50.02it/s]Feature extracting:  26%|██▌       | 51/198 [00:01<00:02, 49.67it/s]Feature extracting:  29%|██▉       | 57/198 [00:01<00:02, 49.53it/s]Feature extracting:  32%|███▏      | 63/198 [00:01<00:02, 49.22it/s]Feature extracting:  35%|███▍      | 69/198 [00:01<00:02, 50.03it/s]Feature extracting:  38%|███▊      | 75/198 [00:01<00:02, 49.92it/s]Feature extracting:  41%|████      | 81/198 [00:02<00:02, 50.20it/s]Feature extracting:  44%|████▍     | 87/198 [00:02<00:02, 50.73it/s]Feature extracting:  47%|████▋     | 93/198 [00:02<00:02, 50.59it/s]Feature extracting:  50%|█████     | 99/198 [00:02<00:02, 45.87it/s]Feature extracting:  53%|█████▎    | 104/198 [00:02<00:02, 42.07it/s]Feature extracting:  55%|█████▌    | 109/198 [00:02<00:02, 39.69it/s]Feature extracting:  58%|█████▊    | 114/198 [00:02<00:02, 38.06it/s]Feature extracting:  60%|█████▉    | 118/198 [00:02<00:02, 37.12it/s]Feature extracting:  62%|██████▏   | 122/198 [00:03<00:02, 36.12it/s]Feature extracting:  64%|██████▎   | 126/198 [00:03<00:02, 35.65it/s]Feature extracting:  66%|██████▌   | 130/198 [00:03<00:01, 35.24it/s]Feature extracting:  68%|██████▊   | 134/198 [00:03<00:01, 34.84it/s]Feature extracting:  70%|██████▉   | 138/198 [00:03<00:01, 34.79it/s]Feature extracting:  72%|███████▏  | 142/198 [00:03<00:01, 34.58it/s]Feature extracting:  74%|███████▎  | 146/198 [00:03<00:01, 34.41it/s]Feature extracting:  76%|███████▌  | 150/198 [00:03<00:01, 34.36it/s]Feature extracting:  78%|███████▊  | 154/198 [00:04<00:01, 34.32it/s]Feature extracting:  80%|███████▉  | 158/198 [00:04<00:01, 34.41it/s]Feature extracting:  82%|████████▏ | 162/198 [00:04<00:01, 35.14it/s]Feature extracting:  84%|████████▍ | 166/198 [00:04<00:00, 35.44it/s]Feature extracting:  86%|████████▌ | 170/198 [00:04<00:00, 35.39it/s]Feature extracting:  88%|████████▊ | 174/198 [00:04<00:00, 35.74it/s]Feature extracting:  90%|████████▉ | 178/198 [00:04<00:00, 35.80it/s]Feature extracting:  92%|█████████▏| 182/198 [00:04<00:00, 36.06it/s]Feature extracting:  94%|█████████▍| 186/198 [00:04<00:00, 36.63it/s]Feature extracting:  96%|█████████▌| 190/198 [00:05<00:00, 37.19it/s]Feature extracting:  98%|█████████▊| 194/198 [00:05<00:00, 37.37it/s]Feature extracting: 100%|██████████| 198/198 [00:05<00:00, 31.56it/s]Feature extracting: 100%|██████████| 198/198 [00:05<00:00, 36.82it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.85it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.65it/s]
feature banks saved to ./output/stl10/gtsrb_backdoored_encoder/2024-01-05-17:09:25/feature_banks.pkl
Train Epoch: 1 	Loss: 3.783916
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 6.603325415676959, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 1}
Train Epoch: 2 	Loss: 3.419867
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 6.199524940617577, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0395882818685669, "epoch": 2}
Train Epoch: 3 	Loss: 3.169250
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 6.3578780680918445, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 3}
Train Epoch: 4 	Loss: 3.059742
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.8756927949327, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 4}
Train Epoch: 5 	Loss: 2.992681
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.986539984164688, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 5}
Train Epoch: 6 	Loss: 2.925078
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.168646080760094, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 6}
Train Epoch: 7 	Loss: 2.843923
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.34283452098179, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 2.771480
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.136975455265242, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 2.744165
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.838479809976247, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 97.35550277117973, "epoch": 9}
Train Epoch: 10 	Loss: 2.686234
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.764845605700712, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 10}
Train Epoch: 11 	Loss: 2.626130
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 7.632620744259699, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 11}
Train Epoch: 12 	Loss: 2.593786
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.440221694378463, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 12}
Train Epoch: 13 	Loss: 2.558308
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 10.039588281868568, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 13}
Train Epoch: 14 	Loss: 2.510941
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 11.10055423594616, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 14}
Train Epoch: 15 	Loss: 2.491168
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 11.718131433095804, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 15}
Train Epoch: 16 	Loss: 2.423466
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 11.670625494853523, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 16}
Train Epoch: 17 	Loss: 2.389628
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 12.525732383214569, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 17}
Train Epoch: 18 	Loss: 2.318470
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 12.406967537608868, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 18}
Train Epoch: 19 	Loss: 2.239038
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 15.281076801266826, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 79.15281076801267, "epoch": 19}
Train Epoch: 20 	Loss: 2.200699
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 18.345209817893902, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 2.176791
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 18.9944576405384, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 2.138540
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 19.944576405384005, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 2.098911
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 20.498812351543943, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 2.079107
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 21.75771971496437, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 2.086042
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 24.307205067300078, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 2.048318
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 25.78780680918448, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 2.022369
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 26.706254948535232, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 1.978330
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 28.17893903404592, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 1.932987
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 29.71496437054632, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 1.917719
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 29.865399841646873, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 30}
Train Epoch: 31 	Loss: 1.903663
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.269200316706254, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 31}
Train Epoch: 32 	Loss: 1.903903
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 30.72842438638163, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 32}
Train Epoch: 33 	Loss: 1.887864
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 31.17181314330958, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 33}
Train Epoch: 34 	Loss: 1.870156
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 31.488519398258116, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 34}
Train Epoch: 35 	Loss: 1.852008
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 32.23277909738717, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 35}
Train Epoch: 36 	Loss: 1.847171
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 32.39904988123516, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 36}
Train Epoch: 37 	Loss: 1.840533
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 33.03246239113223, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 37}
Train Epoch: 38 	Loss: 1.821723
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 34.29928741092637, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 38}
Train Epoch: 39 	Loss: 1.806605
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 34.291369754552655, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 39}
Train Epoch: 40 	Loss: 1.791452
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 34.093428345209816, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 40}
Train Epoch: 41 	Loss: 1.790609
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 34.54473475851148, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 41}
Train Epoch: 42 	Loss: 1.779942
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 35.098970704671416, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 42}
Train Epoch: 43 	Loss: 1.771674
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 35.62945368171022, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 43}
Train Epoch: 44 	Loss: 1.761878
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 36.35787806809184, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 44}
Train Epoch: 45 	Loss: 1.736549
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 36.975455265241486, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 45}
Train Epoch: 46 	Loss: 1.721703
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 36.92794932699921, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 46}
Train Epoch: 47 	Loss: 1.714169
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 37.61678543151227, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 47}
Train Epoch: 48 	Loss: 1.688222
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 37.44259699129058, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 48}
Train Epoch: 49 	Loss: 1.681482
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 37.854315122723676, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 49}
Train Epoch: 50 	Loss: 1.675536
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 38.566904196357875, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 50}
Train Epoch: 51 	Loss: 1.656879
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 39.049881235154395, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 51}
Train Epoch: 52 	Loss: 1.651873
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 39.32699920823436, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 52}
Train Epoch: 53 	Loss: 1.635534
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 39.84956452889944, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 53}
