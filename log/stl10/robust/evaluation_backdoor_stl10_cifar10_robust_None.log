/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-07 16:08:26
当前时间： 2024-01-07 16:08:27
test_transform_stl10
Loaded from: ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/model_200.pth
Namespace(batch_size=128, color=0.3, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='2', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/airplane.npz', reference_label=0, results_dir='./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:08:16', trigger_file='optimize_filter/trigger/stl10/2023-12-06-23-41-58/ssim0.9053_psnr21.80_lp0.0274_wd0.716_color9.494.pt', value_hsv=1)
{'loss': -22.915305616916754, 'wd': 0.038286269097947155, 'ssim': 0.9650022419599387, 'psnr': 26.694296631446253, 'lp': 0.00797073964554912, 'sim': -20.483394339145757, 'far': 2.4319112964165517, 'color': 8.106370653250279}
Predicting features
Feature extracting:   0%|          | 0/782 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/782 [00:01<21:09,  1.63s/it]Feature extracting:   4%|▎         | 28/782 [00:01<00:33, 22.36it/s]Feature extracting:   6%|▋         | 49/782 [00:01<00:17, 41.63it/s]Feature extracting:   9%|▊         | 67/782 [00:01<00:12, 58.46it/s]Feature extracting:  11%|█▏        | 89/782 [00:02<00:08, 82.97it/s]Feature extracting:  14%|█▍        | 108/782 [00:02<00:06, 101.35it/s]Feature extracting:  16%|█▌        | 127/782 [00:02<00:05, 117.63it/s]Feature extracting:  19%|█▊        | 146/782 [00:02<00:04, 132.41it/s]Feature extracting:  21%|██        | 165/782 [00:02<00:04, 144.02it/s]Feature extracting:  24%|██▎       | 184/782 [00:02<00:03, 153.65it/s]Feature extracting:  26%|██▌       | 203/782 [00:02<00:03, 161.85it/s]Feature extracting:  29%|██▊       | 223/782 [00:02<00:03, 169.76it/s]Feature extracting:  31%|███       | 244/782 [00:02<00:02, 179.98it/s]Feature extracting:  34%|███▍      | 264/782 [00:02<00:02, 180.83it/s]Feature extracting:  36%|███▌      | 283/782 [00:03<00:02, 171.25it/s]Feature extracting:  38%|███▊      | 301/782 [00:03<00:02, 171.25it/s]Feature extracting:  41%|████      | 319/782 [00:03<00:02, 169.56it/s]Feature extracting:  43%|████▎     | 337/782 [00:03<00:02, 166.72it/s]Feature extracting:  45%|████▌     | 354/782 [00:03<00:02, 165.21it/s]Feature extracting:  47%|████▋     | 371/782 [00:03<00:02, 165.15it/s]Feature extracting:  50%|████▉     | 388/782 [00:03<00:02, 165.09it/s]Feature extracting:  52%|█████▏    | 405/782 [00:03<00:02, 164.18it/s]Feature extracting:  54%|█████▍    | 422/782 [00:03<00:02, 164.74it/s]Feature extracting:  56%|█████▌    | 439/782 [00:04<00:02, 166.15it/s]Feature extracting:  58%|█████▊    | 456/782 [00:04<00:01, 166.07it/s]Feature extracting:  60%|██████    | 473/782 [00:04<00:01, 167.09it/s]Feature extracting:  63%|██████▎   | 490/782 [00:04<00:01, 164.00it/s]Feature extracting:  65%|██████▍   | 507/782 [00:04<00:01, 160.70it/s]Feature extracting:  67%|██████▋   | 524/782 [00:04<00:01, 159.26it/s]Feature extracting:  69%|██████▉   | 540/782 [00:04<00:01, 158.14it/s]Feature extracting:  71%|███████   | 556/782 [00:04<00:01, 155.38it/s]Feature extracting:  73%|███████▎  | 572/782 [00:04<00:01, 153.97it/s]Feature extracting:  75%|███████▌  | 588/782 [00:05<00:01, 149.46it/s]Feature extracting:  77%|███████▋  | 605/782 [00:05<00:01, 154.17it/s]Feature extracting:  79%|███████▉  | 621/782 [00:05<00:01, 153.86it/s]Feature extracting:  81%|████████▏ | 637/782 [00:05<00:00, 148.99it/s]Feature extracting:  84%|████████▍ | 655/782 [00:05<00:00, 154.99it/s]Feature extracting:  86%|████████▌ | 671/782 [00:05<00:00, 155.20it/s]Feature extracting:  88%|████████▊ | 687/782 [00:05<00:00, 156.31it/s]Feature extracting:  90%|█████████ | 705/782 [00:05<00:00, 161.60it/s]Feature extracting:  92%|█████████▏| 722/782 [00:05<00:00, 163.93it/s]Feature extracting:  95%|█████████▍| 739/782 [00:05<00:00, 164.89it/s]Feature extracting:  97%|█████████▋| 756/782 [00:06<00:00, 165.46it/s]Feature extracting:  99%|█████████▉| 773/782 [00:06<00:00, 166.10it/s]Feature extracting: 100%|██████████| 782/782 [00:06<00:00, 122.64it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:08,  2.28it/s]Feature extracting:  14%|█▍        | 22/157 [00:00<00:02, 52.62it/s]Feature extracting:  25%|██▌       | 40/157 [00:00<00:01, 84.66it/s]Feature extracting:  38%|███▊      | 60/157 [00:00<00:00, 114.28it/s]Feature extracting:  53%|█████▎    | 83/157 [00:00<00:00, 144.72it/s]Feature extracting:  65%|██████▍   | 102/157 [00:00<00:00, 149.54it/s]Feature extracting:  76%|███████▋  | 120/157 [00:01<00:00, 152.81it/s]Feature extracting:  88%|████████▊ | 138/157 [00:01<00:00, 155.63it/s]Feature extracting:  99%|█████████▊| 155/157 [00:01<00:00, 156.78it/s]Feature extracting: 100%|██████████| 157/157 [00:01<00:00, 110.16it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:30,  1.73it/s]Feature extracting:   8%|▊         | 13/157 [00:00<00:05, 24.84it/s]Feature extracting:  15%|█▌        | 24/157 [00:00<00:03, 43.02it/s]Feature extracting:  21%|██        | 33/157 [00:00<00:02, 48.47it/s]Feature extracting:  26%|██▌       | 41/157 [00:01<00:02, 51.15it/s]Feature extracting:  31%|███       | 48/157 [00:01<00:02, 53.07it/s]Feature extracting:  35%|███▌      | 55/157 [00:01<00:01, 54.02it/s]Feature extracting:  39%|███▉      | 62/157 [00:01<00:01, 54.46it/s]Feature extracting:  44%|████▍     | 69/157 [00:01<00:01, 55.28it/s]Feature extracting:  48%|████▊     | 75/157 [00:01<00:01, 55.98it/s]Feature extracting:  52%|█████▏    | 82/157 [00:01<00:01, 57.69it/s]Feature extracting:  57%|█████▋    | 89/157 [00:01<00:01, 59.37it/s]Feature extracting:  61%|██████    | 96/157 [00:02<00:01, 59.80it/s]Feature extracting:  66%|██████▌   | 103/157 [00:02<00:00, 60.25it/s]Feature extracting:  70%|███████   | 110/157 [00:02<00:00, 60.32it/s]Feature extracting:  75%|███████▍  | 117/157 [00:02<00:00, 60.30it/s]Feature extracting:  79%|███████▉  | 124/157 [00:02<00:00, 60.86it/s]Feature extracting:  83%|████████▎ | 131/157 [00:02<00:00, 60.50it/s]Feature extracting:  88%|████████▊ | 138/157 [00:02<00:00, 60.79it/s]Feature extracting:  92%|█████████▏| 145/157 [00:02<00:00, 60.80it/s]Feature extracting:  97%|█████████▋| 152/157 [00:02<00:00, 60.65it/s]Feature extracting: 100%|██████████| 157/157 [00:03<00:00, 49.62it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.62it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.36it/s]
feature banks saved to ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/feature_banks.pkl
Train Epoch: 1 	Loss: 1.262983
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.32, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 0.707566
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.39, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 0.638936
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.24, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 0.597797
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.21, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 0.568431
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 80.28, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 0.544771
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 81.0, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 0.528468
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 81.64, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 0.514395
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 81.95, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 0.502031
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 82.24, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 0.492235
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 82.63, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 0.482219
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 82.83, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 0.475550
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 83.26, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 0.468256
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 83.44, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 0.460241
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 83.62, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 0.455860
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 83.66, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 0.447902
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 83.87, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 0.443380
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 83.86, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 0.439081
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.03, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 0.432190
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.1, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 0.429446
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.22, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 0.424025
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.37, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 0.418203
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.21, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 0.414289
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.37, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 0.410740
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.61, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 0.407723
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.65, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 0.402039
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.65, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 0.397522
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.79, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 0.394560
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.72, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 0.389541
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.78, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 0.386563
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 84.96, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 30}
Train Epoch: 31 	Loss: 0.385212
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.0, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 31}
Train Epoch: 32 	Loss: 0.379438
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.06, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 32}
Train Epoch: 33 	Loss: 0.376502
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.17, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 33}
Train Epoch: 34 	Loss: 0.373848
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.09, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 34}
Train Epoch: 35 	Loss: 0.367040
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.25, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 35}
Train Epoch: 36 	Loss: 0.365937
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.35, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 36}
Train Epoch: 37 	Loss: 0.362924
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.32, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 37}
Train Epoch: 38 	Loss: 0.358138
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.39, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 38}
Train Epoch: 39 	Loss: 0.354974
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.63, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 39}
Train Epoch: 40 	Loss: 0.351880
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.55, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 40}
Train Epoch: 41 	Loss: 0.349346
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.61, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 41}
Train Epoch: 42 	Loss: 0.347061
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.67, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 42}
Train Epoch: 43 	Loss: 0.341743
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.75, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 43}
Train Epoch: 44 	Loss: 0.338872
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.69, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 44}
Train Epoch: 45 	Loss: 0.336246
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.9, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 45}
Train Epoch: 46 	Loss: 0.333548
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.96, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 46}
Train Epoch: 47 	Loss: 0.330719
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.99, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 47}
Train Epoch: 48 	Loss: 0.329240
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 85.96, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 48}
Train Epoch: 49 	Loss: 0.324339
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 86.14, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 49}
Train Epoch: 50 	Loss: 0.321156
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 86.07, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 50}
Train Epoch: 51 	Loss: 0.316346
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 86.19, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 51}
Train Epoch: 52 	Loss: 0.315461
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 86.22, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 52}
Train Epoch: 53 	Loss: 0.312630
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 86.21, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 53}
