/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-07 16:07:17
当前时间： 2024-01-07 16:07:18
test_transform_stl10_salt_and_pepper_noise
Loaded from: ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/model_200.pth
Namespace(batch_size=128, color=0.3, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='2', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/airplane.npz', reference_label=0, results_dir='./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:08:16', trigger_file='optimize_filter/trigger/stl10/2023-12-06-23-41-58/ssim0.9053_psnr21.80_lp0.0274_wd0.716_color9.494.pt', value_hsv=1)
{'loss': -22.915305616916754, 'wd': 0.038286269097947155, 'ssim': 0.9650022419599387, 'psnr': 26.694296631446253, 'lp': 0.00797073964554912, 'sim': -20.483394339145757, 'far': 2.4319112964165517, 'color': 8.106370653250279}
Predicting features
Feature extracting:   0%|          | 0/782 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/782 [00:01<17:21,  1.33s/it]Feature extracting:   3%|▎         | 26/782 [00:01<00:30, 24.74it/s]Feature extracting:   6%|▋         | 50/782 [00:01<00:14, 50.75it/s]Feature extracting:   9%|▉         | 71/782 [00:01<00:09, 73.90it/s]Feature extracting:  12%|█▏        | 93/782 [00:01<00:06, 98.89it/s]Feature extracting:  15%|█▍        | 115/782 [00:01<00:05, 121.85it/s]Feature extracting:  17%|█▋        | 136/782 [00:01<00:04, 140.92it/s]Feature extracting:  20%|██        | 158/782 [00:02<00:03, 158.27it/s]Feature extracting:  23%|██▎       | 180/782 [00:02<00:03, 172.42it/s]Feature extracting:  26%|██▌       | 202/782 [00:02<00:03, 183.69it/s]Feature extracting:  29%|██▊       | 224/782 [00:02<00:02, 190.90it/s]Feature extracting:  31%|███▏      | 246/782 [00:02<00:02, 197.58it/s]Feature extracting:  34%|███▍      | 268/782 [00:02<00:02, 201.90it/s]Feature extracting:  37%|███▋      | 290/782 [00:02<00:02, 204.84it/s]Feature extracting:  40%|███▉      | 312/782 [00:02<00:02, 205.87it/s]Feature extracting:  43%|████▎     | 334/782 [00:02<00:02, 208.82it/s]Feature extracting:  46%|████▌     | 356/782 [00:02<00:02, 209.80it/s]Feature extracting:  48%|████▊     | 378/782 [00:03<00:01, 209.38it/s]Feature extracting:  51%|█████     | 400/782 [00:03<00:01, 211.23it/s]Feature extracting:  54%|█████▍    | 422/782 [00:03<00:01, 211.55it/s]Feature extracting:  57%|█████▋    | 444/782 [00:03<00:01, 211.70it/s]Feature extracting:  60%|█████▉    | 466/782 [00:03<00:01, 210.83it/s]Feature extracting:  62%|██████▏   | 488/782 [00:03<00:01, 212.16it/s]Feature extracting:  65%|██████▌   | 510/782 [00:03<00:01, 212.13it/s]Feature extracting:  68%|██████▊   | 532/782 [00:03<00:01, 212.10it/s]Feature extracting:  71%|███████   | 554/782 [00:03<00:01, 212.12it/s]Feature extracting:  74%|███████▎  | 576/782 [00:04<00:00, 211.44it/s]Feature extracting:  76%|███████▋  | 598/782 [00:04<00:00, 211.63it/s]Feature extracting:  79%|███████▉  | 620/782 [00:04<00:00, 212.43it/s]Feature extracting:  82%|████████▏ | 642/782 [00:04<00:00, 212.33it/s]Feature extracting:  85%|████████▍ | 664/782 [00:04<00:00, 212.26it/s]Feature extracting:  88%|████████▊ | 686/782 [00:04<00:00, 212.20it/s]Feature extracting:  91%|█████████ | 708/782 [00:04<00:00, 204.74it/s]Feature extracting:  93%|█████████▎| 729/782 [00:04<00:00, 193.03it/s]Feature extracting:  96%|█████████▋| 753/782 [00:04<00:00, 204.97it/s]Feature extracting:  99%|█████████▉| 774/782 [00:04<00:00, 197.99it/s]Feature extracting: 100%|██████████| 782/782 [00:05<00:00, 151.21it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<00:44,  3.52it/s]Feature extracting:  15%|█▌        | 24/157 [00:00<00:01, 78.57it/s]Feature extracting:  29%|██▊       | 45/157 [00:00<00:00, 120.25it/s]Feature extracting:  45%|████▍     | 70/157 [00:00<00:00, 159.78it/s]Feature extracting:  57%|█████▋    | 90/157 [00:00<00:00, 157.73it/s]Feature extracting:  75%|███████▍  | 117/157 [00:00<00:00, 189.19it/s]Feature extracting:  89%|████████▊ | 139/157 [00:00<00:00, 196.06it/s]Feature extracting: 100%|██████████| 157/157 [00:01<00:00, 145.82it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:18,  1.98it/s]Feature extracting:   9%|▉         | 14/157 [00:00<00:04, 30.01it/s]Feature extracting:  18%|█▊        | 28/157 [00:00<00:02, 56.05it/s]Feature extracting:  28%|██▊       | 44/157 [00:00<00:01, 81.44it/s]Feature extracting:  37%|███▋      | 58/157 [00:00<00:01, 94.43it/s]Feature extracting:  46%|████▌     | 72/157 [00:01<00:00, 106.59it/s]Feature extracting:  54%|█████▍    | 85/157 [00:01<00:00, 111.56it/s]Feature extracting:  63%|██████▎   | 99/157 [00:01<00:00, 118.44it/s]Feature extracting:  74%|███████▍  | 116/157 [00:01<00:00, 130.73it/s]Feature extracting:  83%|████████▎ | 131/157 [00:01<00:00, 134.63it/s]Feature extracting:  94%|█████████▎| 147/157 [00:01<00:00, 140.71it/s]Feature extracting: 100%|██████████| 157/157 [00:01<00:00, 91.56it/s] 
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  3.04it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  2.53it/s]
feature banks saved to ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/feature_banks.pkl
Train Epoch: 1 	Loss: 1.838033
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 44.73, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 1.431284
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 49.79, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 1.334721
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 52.82, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 1.277748
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 54.77, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 1.238064
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 56.11, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 1.209732
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 57.13, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 1.184542
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 57.7, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 1.164876
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 58.23, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 1.152199
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 58.74, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 1.135821
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 59.23, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 1.122819
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 59.51, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 1.112307
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 60.01, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 1.101931
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 60.33, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 1.093514
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 60.45, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 1.083674
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 60.86, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 1.074714
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.0, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 1.068015
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.25, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 1.058343
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.36, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 1.053626
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.66, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 1.043490
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.8, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 1.039634
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.13, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 1.032807
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.23, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 1.027958
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.33, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 1.019814
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.4, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 1.015162
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.73, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 1.009502
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.8, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 1.005976
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.94, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 1.000494
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.1, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 0.996944
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.09, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 0.990475
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.17, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 30}
Train Epoch: 31 	Loss: 0.986096
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.35, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 31}
Train Epoch: 32 	Loss: 0.980626
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.49, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 32}
Train Epoch: 33 	Loss: 0.978823
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.57, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 33}
Train Epoch: 34 	Loss: 0.974788
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.77, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 34}
Train Epoch: 35 	Loss: 0.970715
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.69, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 35}
Train Epoch: 36 	Loss: 0.966895
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.88, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 36}
Train Epoch: 37 	Loss: 0.961814
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.95, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 37}
Train Epoch: 38 	Loss: 0.959733
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.07, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 38}
Train Epoch: 39 	Loss: 0.954819
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.14, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 39}
Train Epoch: 40 	Loss: 0.952998
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.16, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 40}
Train Epoch: 41 	Loss: 0.949305
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.92, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 41}
Train Epoch: 42 	Loss: 0.945469
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.32, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 42}
Train Epoch: 43 	Loss: 0.942215
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.5, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 43}
Train Epoch: 44 	Loss: 0.939149
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.4, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 44}
Train Epoch: 45 	Loss: 0.935872
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.63, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 45}
Train Epoch: 46 	Loss: 0.933350
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.68, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 46}
Train Epoch: 47 	Loss: 0.929146
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.65, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 47}
Train Epoch: 48 	Loss: 0.925427
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.6, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 48}
Train Epoch: 49 	Loss: 0.923914
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.75, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 49}
Train Epoch: 50 	Loss: 0.920516
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.65, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 50}
Train Epoch: 51 	Loss: 0.916704
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.03, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 51}
Train Epoch: 52 	Loss: 0.911852
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.9, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 52}
Train Epoch: 53 	Loss: 0.909883
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.0, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 53}
Train Epoch: 54 	Loss: 0.907256
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.15, "epoch": 54}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 54}
Train Epoch: 55 	Loss: 0.904247
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.94, "epoch": 55}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 55}
Train Epoch: 56 	Loss: 0.903101
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.11, "epoch": 56}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 56}
Train Epoch: 57 	Loss: 0.897771
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.16, "epoch": 57}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 57}
Train Epoch: 58 	Loss: 0.896658
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.15, "epoch": 58}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 58}
Train Epoch: 59 	Loss: 0.893509
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.33, "epoch": 59}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 59}
Train Epoch: 60 	Loss: 0.889836
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.27, "epoch": 60}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 60}
Train Epoch: 61 	Loss: 0.888528
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.44, "epoch": 61}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 61}
Train Epoch: 62 	Loss: 0.884994
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.29, "epoch": 62}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 62}
Train Epoch: 63 	Loss: 0.880701
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.51, "epoch": 63}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 63}
Train Epoch: 64 	Loss: 0.881847
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.62, "epoch": 64}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 64}
Train Epoch: 65 	Loss: 0.878520
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.69, "epoch": 65}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 65}
Train Epoch: 66 	Loss: 0.875308
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.69, "epoch": 66}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 66}
Train Epoch: 67 	Loss: 0.872825
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.72, "epoch": 67}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 67}
Train Epoch: 68 	Loss: 0.871583
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.68, "epoch": 68}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 68}
Train Epoch: 69 	Loss: 0.867526
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.5, "epoch": 69}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 69}
Train Epoch: 70 	Loss: 0.862637
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.66, "epoch": 70}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 70}
Train Epoch: 71 	Loss: 0.861981
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.84, "epoch": 71}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 71}
Train Epoch: 72 	Loss: 0.859053
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.82, "epoch": 72}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 72}
Train Epoch: 73 	Loss: 0.857295
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.71, "epoch": 73}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 73}
Train Epoch: 74 	Loss: 0.853599
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.82, "epoch": 74}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 74}
Train Epoch: 75 	Loss: 0.851191
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 66.07, "epoch": 75}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 75}
