/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-07 16:07:27
当前时间： 2024-01-07 16:07:28
test_transform_stl10_JPEGcompression
Loaded from: ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/model_200.pth
Namespace(batch_size=128, color=0.3, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='2', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/airplane.npz', reference_label=0, results_dir='./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:08:16', trigger_file='optimize_filter/trigger/stl10/2023-12-06-23-41-58/ssim0.9053_psnr21.80_lp0.0274_wd0.716_color9.494.pt', value_hsv=1)
{'loss': -22.915305616916754, 'wd': 0.038286269097947155, 'ssim': 0.9650022419599387, 'psnr': 26.694296631446253, 'lp': 0.00797073964554912, 'sim': -20.483394339145757, 'far': 2.4319112964165517, 'color': 8.106370653250279}
Predicting features
Feature extracting:   0%|          | 0/782 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/782 [00:01<18:16,  1.40s/it]Feature extracting:   3%|▎         | 26/782 [00:01<00:31, 23.73it/s]Feature extracting:   6%|▌         | 45/782 [00:01<00:17, 42.58it/s]Feature extracting:   8%|▊         | 66/782 [00:01<00:10, 65.38it/s]Feature extracting:  11%|█▏        | 88/782 [00:01<00:07, 90.80it/s]Feature extracting:  14%|█▍        | 109/782 [00:01<00:05, 113.52it/s]Feature extracting:  16%|█▋        | 129/782 [00:02<00:04, 131.13it/s]Feature extracting:  19%|█▉        | 149/782 [00:02<00:04, 146.58it/s]Feature extracting:  22%|██▏       | 169/782 [00:02<00:03, 154.14it/s]Feature extracting:  25%|██▍       | 192/782 [00:02<00:03, 171.72it/s]Feature extracting:  27%|██▋       | 212/782 [00:02<00:03, 175.88it/s]Feature extracting:  30%|██▉       | 232/782 [00:02<00:03, 180.19it/s]Feature extracting:  32%|███▏      | 253/782 [00:02<00:02, 186.31it/s]Feature extracting:  35%|███▍      | 273/782 [00:02<00:02, 189.99it/s]Feature extracting:  37%|███▋      | 293/782 [00:02<00:02, 188.65it/s]Feature extracting:  40%|████      | 313/782 [00:02<00:02, 181.84it/s]Feature extracting:  42%|████▏     | 332/782 [00:03<00:02, 178.76it/s]Feature extracting:  45%|████▍     | 351/782 [00:03<00:02, 172.35it/s]Feature extracting:  47%|████▋     | 370/782 [00:03<00:02, 174.94it/s]Feature extracting:  50%|████▉     | 388/782 [00:03<00:02, 173.72it/s]Feature extracting:  52%|█████▏    | 406/782 [00:03<00:02, 172.74it/s]Feature extracting:  54%|█████▍    | 424/782 [00:03<00:02, 171.73it/s]Feature extracting:  57%|█████▋    | 442/782 [00:03<00:01, 172.76it/s]Feature extracting:  59%|█████▉    | 460/782 [00:03<00:01, 172.80it/s]Feature extracting:  61%|██████    | 478/782 [00:03<00:01, 173.72it/s]Feature extracting:  63%|██████▎   | 496/782 [00:04<00:01, 175.53it/s]Feature extracting:  66%|██████▌   | 514/782 [00:04<00:01, 173.81it/s]Feature extracting:  68%|██████▊   | 532/782 [00:04<00:01, 172.25it/s]Feature extracting:  70%|███████   | 550/782 [00:04<00:01, 171.66it/s]Feature extracting:  73%|███████▎  | 568/782 [00:04<00:01, 171.75it/s]Feature extracting:  75%|███████▍  | 586/782 [00:04<00:01, 172.57it/s]Feature extracting:  77%|███████▋  | 604/782 [00:04<00:01, 173.44it/s]Feature extracting:  80%|███████▉  | 622/782 [00:04<00:00, 174.77it/s]Feature extracting:  82%|████████▏ | 640/782 [00:04<00:00, 175.57it/s]Feature extracting:  84%|████████▍ | 658/782 [00:04<00:00, 171.43it/s]Feature extracting:  87%|████████▋ | 678/782 [00:05<00:00, 178.50it/s]Feature extracting:  89%|████████▉ | 696/782 [00:05<00:00, 177.11it/s]Feature extracting:  91%|█████████▏| 714/782 [00:05<00:00, 175.93it/s]Feature extracting:  94%|█████████▎| 733/782 [00:05<00:00, 176.33it/s]Feature extracting:  97%|█████████▋| 755/782 [00:05<00:00, 187.29it/s]Feature extracting:  99%|█████████▉| 776/782 [00:05<00:00, 192.76it/s]Feature extracting: 100%|██████████| 782/782 [00:05<00:00, 134.73it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:05,  2.39it/s]Feature extracting:  19%|█▉        | 30/157 [00:00<00:01, 72.64it/s]Feature extracting:  32%|███▏      | 51/157 [00:00<00:01, 104.62it/s]Feature extracting:  46%|████▋     | 73/157 [00:00<00:00, 133.82it/s]Feature extracting:  59%|█████▊    | 92/157 [00:00<00:00, 147.87it/s]Feature extracting:  71%|███████▏  | 112/157 [00:00<00:00, 160.26it/s]Feature extracting:  84%|████████▍ | 132/157 [00:01<00:00, 169.74it/s]Feature extracting:  96%|█████████▌| 151/157 [00:01<00:00, 169.40it/s]Feature extracting: 100%|██████████| 157/157 [00:01<00:00, 124.10it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:07,  2.30it/s]Feature extracting:   9%|▉         | 14/157 [00:00<00:04, 33.82it/s]Feature extracting:  17%|█▋        | 27/157 [00:00<00:02, 58.74it/s]Feature extracting:  26%|██▌       | 41/157 [00:00<00:01, 79.71it/s]Feature extracting:  34%|███▍      | 54/157 [00:00<00:01, 93.42it/s]Feature extracting:  43%|████▎     | 67/157 [00:00<00:00, 102.48it/s]Feature extracting:  51%|█████     | 80/157 [00:01<00:00, 89.00it/s] Feature extracting:  58%|█████▊    | 91/157 [00:01<00:00, 79.42it/s]Feature extracting:  64%|██████▍   | 101/157 [00:01<00:00, 73.62it/s]Feature extracting:  70%|███████   | 110/157 [00:01<00:00, 70.35it/s]Feature extracting:  75%|███████▌  | 118/157 [00:01<00:00, 67.83it/s]Feature extracting:  80%|████████  | 126/157 [00:01<00:00, 67.05it/s]Feature extracting:  85%|████████▍ | 133/157 [00:01<00:00, 65.37it/s]Feature extracting:  89%|████████▉ | 140/157 [00:02<00:00, 63.83it/s]Feature extracting:  94%|█████████▎| 147/157 [00:02<00:00, 63.61it/s]Feature extracting:  98%|█████████▊| 154/157 [00:02<00:00, 63.80it/s]Feature extracting: 100%|██████████| 157/157 [00:02<00:00, 62.30it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  2.01it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.77it/s]
feature banks saved to ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:08:16/feature_banks.pkl
Train Epoch: 1 	Loss: 1.490077
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.36, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 0.956968
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 68.6, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 0.874061
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.48, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 0.827977
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.29, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 0.795405
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.14, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 0.771238
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 72.97, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 0.752339
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 73.59, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 0.735367
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.22, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 0.722210
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.82, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 0.708678
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 74.99, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 0.699268
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 75.35, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 0.688417
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 75.57, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 0.679505
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 75.84, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 0.671011
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.02, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 0.664159
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.3, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 0.658146
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.42, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 0.649768
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.69, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 0.644842
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.59, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 0.638377
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.82, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 0.633419
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 76.95, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 0.627320
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.05, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 0.620884
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.28, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 0.615177
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.45, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 0.610964
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.44, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 0.605712
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.51, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 0.601879
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.67, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 0.595318
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.68, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 0.593132
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.76, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 0.588019
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.96, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 0.583463
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.03, "epoch": 30}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 30}
Train Epoch: 31 	Loss: 0.580788
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 77.98, "epoch": 31}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 31}
Train Epoch: 32 	Loss: 0.575946
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.2, "epoch": 32}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 32}
Train Epoch: 33 	Loss: 0.570169
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.31, "epoch": 33}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 33}
Train Epoch: 34 	Loss: 0.568308
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.21, "epoch": 34}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 34}
Train Epoch: 35 	Loss: 0.565269
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.32, "epoch": 35}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 35}
Train Epoch: 36 	Loss: 0.559595
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.45, "epoch": 36}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 36}
Train Epoch: 37 	Loss: 0.555113
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.64, "epoch": 37}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 37}
Train Epoch: 38 	Loss: 0.554731
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.59, "epoch": 38}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 38}
Train Epoch: 39 	Loss: 0.547677
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.65, "epoch": 39}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 39}
Train Epoch: 40 	Loss: 0.546658
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.59, "epoch": 40}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 40}
Train Epoch: 41 	Loss: 0.542597
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.82, "epoch": 41}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 41}
Train Epoch: 42 	Loss: 0.536831
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.72, "epoch": 42}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 42}
Train Epoch: 43 	Loss: 0.534952
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.87, "epoch": 43}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 43}
Train Epoch: 44 	Loss: 0.531777
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.96, "epoch": 44}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 44}
Train Epoch: 45 	Loss: 0.528755
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.01, "epoch": 45}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 45}
Train Epoch: 46 	Loss: 0.523563
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 78.99, "epoch": 46}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 46}
Train Epoch: 47 	Loss: 0.520835
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.14, "epoch": 47}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 47}
Train Epoch: 48 	Loss: 0.518268
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.19, "epoch": 48}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 48}
Train Epoch: 49 	Loss: 0.513951
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.05, "epoch": 49}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 49}
Train Epoch: 50 	Loss: 0.510246
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.22, "epoch": 50}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 50}
Train Epoch: 51 	Loss: 0.508721
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.28, "epoch": 51}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 51}
Train Epoch: 52 	Loss: 0.506685
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.26, "epoch": 52}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 52}
Train Epoch: 53 	Loss: 0.502039
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.31, "epoch": 53}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 53}
Train Epoch: 54 	Loss: 0.500069
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.38, "epoch": 54}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 54}
Train Epoch: 55 	Loss: 0.495136
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.44, "epoch": 55}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 55}
Train Epoch: 56 	Loss: 0.490550
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.56, "epoch": 56}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 56}
Train Epoch: 57 	Loss: 0.489487
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.45, "epoch": 57}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 57}
Train Epoch: 58 	Loss: 0.487421
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.48, "epoch": 58}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 58}
Train Epoch: 59 	Loss: 0.484780
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.54, "epoch": 59}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 59}
Train Epoch: 60 	Loss: 0.480017
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.5, "epoch": 60}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 60}
Train Epoch: 61 	Loss: 0.475581
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.53, "epoch": 61}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 61}
Train Epoch: 62 	Loss: 0.471936
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.75, "epoch": 62}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 62}
Train Epoch: 63 	Loss: 0.470625
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.7, "epoch": 63}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 63}
Train Epoch: 64 	Loss: 0.466809
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.78, "epoch": 64}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 64}
Train Epoch: 65 	Loss: 0.463138
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.68, "epoch": 65}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 65}
Train Epoch: 66 	Loss: 0.461147
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.72, "epoch": 66}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 66}
Train Epoch: 67 	Loss: 0.456222
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.67, "epoch": 67}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 67}
Train Epoch: 68 	Loss: 0.455424
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.69, "epoch": 68}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 68}
Train Epoch: 69 	Loss: 0.450748
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.63, "epoch": 69}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 69}
Train Epoch: 70 	Loss: 0.449047
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.82, "epoch": 70}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 70}
Train Epoch: 71 	Loss: 0.446458
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.97, "epoch": 71}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 71}
Train Epoch: 72 	Loss: 0.443344
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 79.73, "epoch": 72}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 72}
