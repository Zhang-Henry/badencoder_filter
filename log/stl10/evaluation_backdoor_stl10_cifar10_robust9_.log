transforms.GaussianBlur(kernel_size=7)
transforms.GaussianBlur(kernel_size=7)
transforms.GaussianBlur(kernel_size=7)
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-06 19:59:54
当前时间： 2024-01-06 19:59:55
test_transform_stl10
Loaded from: ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:10:47/model_200.pth
Namespace(batch_size=32, color=0.0, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='1', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/airplane.npz', reference_label=0, results_dir='./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:10:47/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:10:47', trigger_file='optimize_filter/trigger/stl10/2023-12-19-01-25-16/ssim0.9987_psnr42.79_lp0.0002_wd0.002_color4.971.pt', value_hsv=1)
{'loss': -20.951350208433887, 'wd': 0.0018064033534527916, 'ssim': 0.9964274972791708, 'psnr': 39.506030809253495, 'lp': 0.0005328581722628902, 'sim': -20.951350208433887, 'far': 0.0, 'color': 5.0124844556886625}
Predicting features
Feature extracting:   0%|          | 0/782 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/782 [00:07<1:36:13,  7.39s/it]Feature extracting:   2%|▏         | 14/782 [00:07<04:56,  2.59it/s] Feature extracting:   3%|▎         | 22/782 [00:07<02:47,  4.55it/s]Feature extracting:   4%|▎         | 29/782 [00:07<01:52,  6.72it/s]Feature extracting:   4%|▍         | 35/782 [00:07<01:22,  9.06it/s]Feature extracting:   5%|▌         | 40/782 [00:08<01:04, 11.49it/s]Feature extracting:   6%|▌         | 45/782 [00:08<00:51, 14.43it/s]Feature extracting:   6%|▋         | 50/782 [00:08<00:41, 17.71it/s]Feature extracting:   7%|▋         | 55/782 [00:08<00:34, 21.23it/s]Feature extracting:   8%|▊         | 60/782 [00:08<00:29, 24.80it/s]Feature extracting:   8%|▊         | 65/782 [00:08<00:25, 28.52it/s]Feature extracting:   9%|▉         | 70/782 [00:08<00:22, 31.90it/s]Feature extracting:  10%|▉         | 75/782 [00:08<00:20, 34.62it/s]Feature extracting:  10%|█         | 80/782 [00:09<00:19, 36.74it/s]Feature extracting:  11%|█         | 85/782 [00:09<00:18, 38.42it/s]Feature extracting:  12%|█▏        | 90/782 [00:09<00:17, 39.96it/s]Feature extracting:  12%|█▏        | 95/782 [00:09<00:16, 41.02it/s]Feature extracting:  13%|█▎        | 100/782 [00:09<00:16, 41.81it/s]Feature extracting:  13%|█▎        | 105/782 [00:09<00:16, 42.29it/s]Feature extracting:  14%|█▍        | 110/782 [00:09<00:15, 42.61it/s]Feature extracting:  15%|█▍        | 115/782 [00:09<00:15, 43.10it/s]Feature extracting:  15%|█▌        | 120/782 [00:09<00:15, 43.51it/s]Feature extracting:  16%|█▌        | 125/782 [00:10<00:15, 43.63it/s]Feature extracting:  17%|█▋        | 130/782 [00:10<00:14, 43.88it/s]Feature extracting:  17%|█▋        | 135/782 [00:10<00:14, 43.97it/s]Feature extracting:  18%|█▊        | 140/782 [00:10<00:14, 44.15it/s]Feature extracting:  19%|█▊        | 145/782 [00:10<00:14, 44.22it/s]Feature extracting:  19%|█▉        | 150/782 [00:10<00:14, 44.34it/s]Feature extracting:  20%|█▉        | 155/782 [00:10<00:14, 43.72it/s]Feature extracting:  20%|██        | 160/782 [00:10<00:14, 43.36it/s]Feature extracting:  21%|██        | 165/782 [00:10<00:14, 43.37it/s]Feature extracting:  22%|██▏       | 170/782 [00:11<00:13, 44.55it/s]Feature extracting:  23%|██▎       | 176/782 [00:11<00:12, 47.68it/s]Feature extracting:  23%|██▎       | 182/782 [00:11<00:12, 49.32it/s]Feature extracting:  24%|██▍       | 188/782 [00:11<00:11, 49.95it/s]Feature extracting:  25%|██▍       | 194/782 [00:11<00:11, 50.62it/s]Feature extracting:  26%|██▌       | 200/782 [00:11<00:11, 51.92it/s]Feature extracting:  26%|██▋       | 206/782 [00:11<00:11, 51.09it/s]Feature extracting:  27%|██▋       | 212/782 [00:11<00:11, 50.33it/s]Feature extracting:  28%|██▊       | 218/782 [00:12<00:11, 49.99it/s]Feature extracting:  29%|██▊       | 224/782 [00:12<00:11, 50.38it/s]Feature extracting:  29%|██▉       | 230/782 [00:12<00:10, 50.41it/s]Feature extracting:  30%|███       | 236/782 [00:12<00:10, 52.73it/s]Feature extracting:  31%|███       | 243/782 [00:12<00:09, 55.64it/s]Feature extracting:  32%|███▏      | 250/782 [00:12<00:09, 57.46it/s]Feature extracting:  33%|███▎      | 257/782 [00:12<00:08, 59.22it/s]Feature extracting:  34%|███▍      | 264/782 [00:12<00:08, 61.59it/s]Feature extracting:  35%|███▍      | 271/782 [00:12<00:08, 63.66it/s]Feature extracting:  36%|███▌      | 278/782 [00:12<00:07, 64.86it/s]Feature extracting:  36%|███▋      | 285/782 [00:13<00:07, 65.54it/s]Feature extracting:  37%|███▋      | 292/782 [00:13<00:07, 66.03it/s]Feature extracting:  38%|███▊      | 299/782 [00:13<00:07, 64.98it/s]Feature extracting:  39%|███▉      | 306/782 [00:13<00:07, 63.34it/s]Feature extracting:  40%|████      | 313/782 [00:13<00:08, 56.99it/s]Feature extracting:  41%|████      | 319/782 [00:13<00:08, 53.35it/s]Feature extracting:  42%|████▏     | 325/782 [00:13<00:08, 51.02it/s]Feature extracting:  42%|████▏     | 331/782 [00:13<00:09, 49.91it/s]Feature extracting:  43%|████▎     | 337/782 [00:14<00:09, 47.52it/s]Feature extracting:  44%|████▎     | 342/782 [00:14<00:09, 44.40it/s]Feature extracting:  44%|████▍     | 347/782 [00:14<00:10, 42.29it/s]Feature extracting:  45%|████▌     | 352/782 [00:14<00:10, 41.36it/s]Feature extracting:  46%|████▌     | 357/782 [00:14<00:10, 40.07it/s]Feature extracting:  46%|████▋     | 362/782 [00:14<00:10, 39.20it/s]Feature extracting:  47%|████▋     | 366/782 [00:14<00:10, 38.64it/s]Feature extracting:  47%|████▋     | 370/782 [00:14<00:10, 38.49it/s]Feature extracting:  48%|████▊     | 374/782 [00:15<00:10, 38.48it/s]Feature extracting:  48%|████▊     | 378/782 [00:15<00:10, 38.44it/s]Feature extracting:  49%|████▉     | 382/782 [00:15<00:10, 37.81it/s]Feature extracting:  49%|████▉     | 386/782 [00:15<00:10, 37.29it/s]Feature extracting:  50%|████▉     | 390/782 [00:15<00:10, 37.04it/s]Feature extracting:  50%|█████     | 394/782 [00:15<00:10, 37.21it/s]Feature extracting:  51%|█████     | 398/782 [00:15<00:10, 37.57it/s]Feature extracting:  51%|█████▏    | 402/782 [00:15<00:10, 37.17it/s]Feature extracting:  52%|█████▏    | 406/782 [00:15<00:10, 36.91it/s]Feature extracting:  52%|█████▏    | 410/782 [00:16<00:09, 37.45it/s]Feature extracting:  53%|█████▎    | 414/782 [00:16<00:09, 37.37it/s]Feature extracting:  54%|█████▎    | 419/782 [00:16<00:09, 38.34it/s]Feature extracting:  54%|█████▍    | 423/782 [00:16<00:09, 38.13it/s]Feature extracting:  55%|█████▍    | 427/782 [00:16<00:09, 37.85it/s]Feature extracting:  55%|█████▌    | 431/782 [00:16<00:09, 37.92it/s]Feature extracting:  56%|█████▌    | 435/782 [00:16<00:09, 38.32it/s]Feature extracting:  56%|█████▋    | 440/782 [00:16<00:08, 39.08it/s]Feature extracting:  57%|█████▋    | 444/782 [00:16<00:08, 38.61it/s]Feature extracting:  57%|█████▋    | 449/782 [00:17<00:08, 39.14it/s]Feature extracting:  58%|█████▊    | 453/782 [00:17<00:08, 39.37it/s]Feature extracting:  58%|█████▊    | 457/782 [00:17<00:08, 39.40it/s]Feature extracting:  59%|█████▉    | 462/782 [00:17<00:07, 40.62it/s]Feature extracting:  60%|█████▉    | 468/782 [00:17<00:07, 44.18it/s]Feature extracting:  60%|██████    | 473/782 [00:17<00:06, 45.71it/s]Feature extracting:  61%|██████▏   | 479/782 [00:17<00:06, 46.95it/s]Feature extracting:  62%|██████▏   | 484/782 [00:17<00:06, 47.61it/s]Feature extracting:  63%|██████▎   | 490/782 [00:17<00:05, 49.26it/s]Feature extracting:  63%|██████▎   | 496/782 [00:18<00:05, 49.90it/s]Feature extracting:  64%|██████▍   | 502/782 [00:18<00:05, 51.27it/s]Feature extracting:  65%|██████▌   | 509/782 [00:18<00:04, 55.41it/s]Feature extracting:  66%|██████▌   | 517/782 [00:18<00:04, 60.42it/s]Feature extracting:  67%|██████▋   | 524/782 [00:18<00:04, 62.48it/s]Feature extracting:  68%|██████▊   | 533/782 [00:18<00:03, 69.22it/s]Feature extracting:  69%|██████▉   | 540/782 [00:18<00:03, 68.25it/s]Feature extracting:  70%|██████▉   | 547/782 [00:18<00:03, 63.24it/s]Feature extracting:  71%|███████   | 554/782 [00:18<00:03, 59.73it/s]Feature extracting:  72%|███████▏  | 561/782 [00:19<00:03, 55.71it/s]Feature extracting:  73%|███████▎  | 568/782 [00:19<00:03, 57.83it/s]Feature extracting:  73%|███████▎  | 574/782 [00:19<00:03, 56.88it/s]Feature extracting:  74%|███████▍  | 580/782 [00:19<00:03, 56.61it/s]Feature extracting:  75%|███████▍  | 586/782 [00:19<00:03, 56.54it/s]Feature extracting:  76%|███████▌  | 592/782 [00:19<00:03, 56.70it/s]Feature extracting:  76%|███████▋  | 598/782 [00:19<00:03, 56.57it/s]Feature extracting:  77%|███████▋  | 604/782 [00:19<00:03, 56.72it/s]Feature extracting:  78%|███████▊  | 610/782 [00:19<00:03, 55.15it/s]Feature extracting:  79%|███████▉  | 616/782 [00:20<00:03, 54.61it/s]Feature extracting:  80%|███████▉  | 622/782 [00:20<00:02, 54.85it/s]Feature extracting:  80%|████████  | 628/782 [00:20<00:02, 55.59it/s]Feature extracting:  81%|████████  | 634/782 [00:20<00:02, 56.29it/s]Feature extracting:  82%|████████▏ | 640/782 [00:20<00:02, 56.10it/s]Feature extracting:  83%|████████▎ | 646/782 [00:20<00:02, 56.41it/s]Feature extracting:  83%|████████▎ | 652/782 [00:20<00:02, 55.95it/s]Feature extracting:  84%|████████▍ | 658/782 [00:20<00:02, 56.44it/s]Feature extracting:  85%|████████▍ | 664/782 [00:20<00:02, 55.40it/s]Feature extracting:  86%|████████▌ | 671/782 [00:21<00:01, 57.20it/s]Feature extracting:  87%|████████▋ | 677/782 [00:21<00:01, 53.24it/s]Feature extracting:  87%|████████▋ | 683/782 [00:21<00:01, 51.16it/s]Feature extracting:  88%|████████▊ | 689/782 [00:21<00:01, 49.33it/s]Feature extracting:  89%|████████▊ | 694/782 [00:21<00:01, 49.15it/s]Feature extracting:  89%|████████▉ | 699/782 [00:21<00:01, 48.26it/s]Feature extracting:  90%|█████████ | 704/782 [00:21<00:01, 47.90it/s]Feature extracting:  91%|█████████ | 709/782 [00:21<00:01, 47.55it/s]Feature extracting:  91%|█████████▏| 714/782 [00:21<00:01, 46.96it/s]Feature extracting:  92%|█████████▏| 720/782 [00:22<00:01, 48.13it/s]Feature extracting:  93%|█████████▎| 725/782 [00:22<00:01, 47.88it/s]Feature extracting:  93%|█████████▎| 730/782 [00:22<00:01, 47.64it/s]Feature extracting:  94%|█████████▍| 735/782 [00:22<00:00, 47.04it/s]Feature extracting:  95%|█████████▍| 740/782 [00:22<00:00, 46.39it/s]Feature extracting:  95%|█████████▌| 745/782 [00:22<00:00, 46.16it/s]Feature extracting:  96%|█████████▌| 750/782 [00:22<00:00, 45.58it/s]Feature extracting:  97%|█████████▋| 755/782 [00:22<00:00, 44.62it/s]Feature extracting:  97%|█████████▋| 760/782 [00:22<00:00, 43.72it/s]Feature extracting:  98%|█████████▊| 765/782 [00:23<00:00, 42.96it/s]Feature extracting:  98%|█████████▊| 770/782 [00:23<00:00, 43.26it/s]Feature extracting:  99%|█████████▉| 775/782 [00:23<00:00, 42.69it/s]Feature extracting: 100%|█████████▉| 780/782 [00:23<00:00, 42.40it/s]Feature extracting: 100%|██████████| 782/782 [00:23<00:00, 32.73it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<01:47,  1.45it/s]Feature extracting:   6%|▋         | 10/157 [00:00<00:08, 16.51it/s]Feature extracting:  11%|█▏        | 18/157 [00:00<00:04, 28.88it/s]Feature extracting:  16%|█▌        | 25/157 [00:01<00:03, 33.39it/s]Feature extracting:  20%|█▉        | 31/157 [00:01<00:03, 35.55it/s]Feature extracting:  24%|██▎       | 37/157 [00:01<00:03, 36.69it/s]Feature extracting:  27%|██▋       | 42/157 [00:01<00:03, 37.11it/s]Feature extracting:  30%|██▉       | 47/157 [00:01<00:02, 38.15it/s]Feature extracting:  33%|███▎      | 52/157 [00:01<00:02, 38.15it/s]Feature extracting:  36%|███▋      | 57/157 [00:01<00:02, 38.31it/s]Feature extracting:  39%|███▉      | 62/157 [00:01<00:02, 38.54it/s]Feature extracting:  43%|████▎     | 67/157 [00:02<00:02, 38.64it/s]Feature extracting:  45%|████▌     | 71/157 [00:02<00:02, 38.28it/s]Feature extracting:  48%|████▊     | 75/157 [00:02<00:02, 37.92it/s]Feature extracting:  50%|█████     | 79/157 [00:02<00:02, 37.56it/s]Feature extracting:  53%|█████▎    | 83/157 [00:02<00:01, 37.48it/s]Feature extracting:  55%|█████▌    | 87/157 [00:02<00:01, 37.30it/s]Feature extracting:  59%|█████▊    | 92/157 [00:02<00:01, 38.11it/s]Feature extracting:  61%|██████    | 96/157 [00:02<00:01, 37.89it/s]Feature extracting:  64%|██████▎   | 100/157 [00:03<00:01, 37.55it/s]Feature extracting:  66%|██████▌   | 104/157 [00:03<00:01, 37.26it/s]Feature extracting:  69%|██████▉   | 108/157 [00:03<00:01, 37.78it/s]Feature extracting:  72%|███████▏  | 113/157 [00:03<00:01, 40.29it/s]Feature extracting:  76%|███████▌  | 119/157 [00:03<00:00, 43.52it/s]Feature extracting:  79%|███████▉  | 124/157 [00:03<00:00, 44.57it/s]Feature extracting:  82%|████████▏ | 129/157 [00:03<00:00, 45.36it/s]Feature extracting:  85%|████████▌ | 134/157 [00:03<00:00, 46.00it/s]Feature extracting:  89%|████████▊ | 139/157 [00:03<00:00, 46.83it/s]Feature extracting:  92%|█████████▏| 145/157 [00:03<00:00, 47.87it/s]Feature extracting:  96%|█████████▌| 150/157 [00:04<00:00, 47.47it/s]Feature extracting:  99%|█████████▊| 155/157 [00:04<00:00, 47.87it/s]Feature extracting: 100%|██████████| 157/157 [00:04<00:00, 36.16it/s]
Feature extracting:   0%|          | 0/157 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/157 [00:00<02:22,  1.09it/s]Feature extracting:   4%|▍         | 7/157 [00:01<00:16,  8.94it/s]Feature extracting:   8%|▊         | 13/157 [00:01<00:08, 17.08it/s]Feature extracting:  13%|█▎        | 20/157 [00:01<00:05, 26.39it/s]Feature extracting:  17%|█▋        | 26/157 [00:01<00:03, 33.04it/s]Feature extracting:  21%|██        | 33/157 [00:01<00:03, 40.04it/s]Feature extracting:  25%|██▍       | 39/157 [00:01<00:02, 44.16it/s]Feature extracting:  29%|██▊       | 45/157 [00:01<00:02, 47.43it/s]Feature extracting:  32%|███▏      | 51/157 [00:01<00:02, 46.83it/s]Feature extracting:  36%|███▋      | 57/157 [00:01<00:02, 49.30it/s]Feature extracting:  40%|████      | 63/157 [00:02<00:01, 50.89it/s]Feature extracting:  44%|████▍     | 69/157 [00:02<00:01, 52.34it/s]Feature extracting:  48%|████▊     | 75/157 [00:02<00:01, 51.95it/s]Feature extracting:  52%|█████▏    | 81/157 [00:02<00:01, 51.06it/s]Feature extracting:  55%|█████▌    | 87/157 [00:02<00:01, 49.86it/s]Feature extracting:  59%|█████▉    | 93/157 [00:02<00:01, 48.83it/s]Feature extracting:  63%|██████▎   | 99/157 [00:02<00:01, 49.61it/s]Feature extracting:  67%|██████▋   | 105/157 [00:02<00:01, 48.60it/s]Feature extracting:  70%|███████   | 110/157 [00:02<00:00, 47.21it/s]Feature extracting:  73%|███████▎  | 115/157 [00:03<00:00, 46.02it/s]Feature extracting:  76%|███████▋  | 120/157 [00:03<00:00, 44.98it/s]Feature extracting:  80%|███████▉  | 125/157 [00:03<00:00, 44.26it/s]Feature extracting:  83%|████████▎ | 130/157 [00:03<00:00, 43.28it/s]Feature extracting:  86%|████████▌ | 135/157 [00:03<00:00, 41.95it/s]Feature extracting:  89%|████████▉ | 140/157 [00:03<00:00, 42.65it/s]Feature extracting:  92%|█████████▏| 145/157 [00:03<00:00, 42.35it/s]Feature extracting:  96%|█████████▌| 150/157 [00:03<00:00, 41.32it/s]Feature extracting:  99%|█████████▊| 155/157 [00:04<00:00, 41.76it/s]Feature extracting: 100%|██████████| 157/157 [00:04<00:00, 36.50it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.47it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.28it/s]
feature banks saved to ./output/stl10/cifar10_backdoored_encoder/2024-01-05-17:10:47/feature_banks.pkl
Train Epoch: 1 	Loss: 1.849431
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 44.82, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 1.435208
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 51.3, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 1.326077
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 53.84, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 1.273053
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 55.31, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 1.236143
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 56.69, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 1.206527
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 57.54, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 1.180819
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 58.28, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 1.159040
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 59.05, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 1.138960
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 59.61, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 1.123059
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 60.04, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 1.105752
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 60.59, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 1.095002
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.15, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 1.082073
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.38, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
