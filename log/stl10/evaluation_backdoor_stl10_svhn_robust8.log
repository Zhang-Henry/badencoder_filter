randomJPEGcompression
randomJPEGcompression
randomJPEGcompression
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-06 19:57:02
当前时间： 2024-01-06 19:57:03
test_transform_stl10
Loaded from: ./output/stl10/svhn_backdoored_encoder/2024-01-05-17:09:46/model_200.pth
Namespace(batch_size=64, color=0.3, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='5', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/one.npz', reference_label=0, results_dir='./output/stl10/svhn_backdoored_encoder/2024-01-05-17:09:46/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:09:46', trigger_file='optimize_filter/trigger/stl10/2023-12-07-00-21-52/ssim0.9182_psnr22.37_lp0.0263_wd0.702_color10.051.pt', value_hsv=1)
{'loss': -23.067352141064045, 'wd': 0.04121247959226637, 'ssim': 0.9386369986662334, 'psnr': 23.39364955672534, 'lp': 0.021886712061801733, 'sim': -20.241976275181496, 'far': 2.8253759112156613, 'color': 9.417919337520527}
Predicting features
Feature extracting:   0%|          | 0/1145 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/1145 [00:02<47:19,  2.48s/it]Feature extracting:   2%|▏         | 19/1145 [00:02<01:51, 10.12it/s]Feature extracting:   3%|▎         | 29/1145 [00:02<01:08, 16.27it/s]Feature extracting:   3%|▎         | 40/1145 [00:02<00:44, 24.71it/s]Feature extracting:   4%|▍         | 51/1145 [00:02<00:32, 34.13it/s]Feature extracting:   5%|▌         | 61/1145 [00:03<00:25, 41.84it/s]Feature extracting:   6%|▌         | 71/1145 [00:03<00:21, 49.18it/s]Feature extracting:   7%|▋         | 80/1145 [00:03<00:19, 54.27it/s]Feature extracting:   8%|▊         | 89/1145 [00:03<00:17, 61.35it/s]Feature extracting:   9%|▊         | 98/1145 [00:03<00:15, 65.73it/s]Feature extracting:   9%|▉         | 107/1145 [00:03<00:15, 69.00it/s]Feature extracting:  10%|█         | 116/1145 [00:03<00:14, 72.14it/s]Feature extracting:  11%|█         | 125/1145 [00:03<00:13, 75.56it/s]Feature extracting:  12%|█▏        | 135/1145 [00:03<00:12, 79.51it/s]Feature extracting:  13%|█▎        | 144/1145 [00:04<00:12, 80.77it/s]Feature extracting:  13%|█▎        | 153/1145 [00:04<00:12, 81.63it/s]Feature extracting:  14%|█▍        | 163/1145 [00:04<00:11, 86.69it/s]Feature extracting:  15%|█▌        | 174/1145 [00:04<00:10, 91.25it/s]Feature extracting:  16%|█▌        | 185/1145 [00:04<00:10, 94.72it/s]Feature extracting:  17%|█▋        | 196/1145 [00:04<00:09, 99.03it/s]Feature extracting:  18%|█▊        | 207/1145 [00:04<00:09, 96.43it/s]Feature extracting:  19%|█▉        | 217/1145 [00:04<00:10, 90.03it/s]Feature extracting:  20%|██        | 232/1145 [00:04<00:08, 104.84it/s]Feature extracting:  22%|██▏       | 247/1145 [00:05<00:07, 116.06it/s]Feature extracting:  23%|██▎       | 259/1145 [00:05<00:08, 109.45it/s]Feature extracting:  24%|██▎       | 271/1145 [00:05<00:08, 104.18it/s]Feature extracting:  25%|██▍       | 282/1145 [00:05<00:08, 102.77it/s]Feature extracting:  26%|██▌       | 293/1145 [00:05<00:08, 104.02it/s]Feature extracting:  27%|██▋       | 304/1145 [00:05<00:08, 104.99it/s]Feature extracting:  28%|██▊       | 315/1145 [00:05<00:07, 103.86it/s]Feature extracting:  28%|██▊       | 326/1145 [00:05<00:07, 103.56it/s]Feature extracting:  29%|██▉       | 337/1145 [00:05<00:07, 102.84it/s]Feature extracting:  30%|███       | 348/1145 [00:06<00:07, 103.59it/s]Feature extracting:  31%|███▏      | 359/1145 [00:06<00:07, 104.03it/s]Feature extracting:  32%|███▏      | 370/1145 [00:06<00:07, 103.42it/s]Feature extracting:  33%|███▎      | 381/1145 [00:06<00:07, 102.07it/s]Feature extracting:  34%|███▍      | 392/1145 [00:06<00:07, 100.74it/s]Feature extracting:  35%|███▌      | 403/1145 [00:06<00:07, 100.89it/s]Feature extracting:  36%|███▌      | 414/1145 [00:06<00:07, 100.29it/s]Feature extracting:  37%|███▋      | 425/1145 [00:06<00:07, 100.92it/s]Feature extracting:  38%|███▊      | 436/1145 [00:06<00:06, 102.52it/s]Feature extracting:  39%|███▉      | 447/1145 [00:07<00:06, 101.24it/s]Feature extracting:  40%|████      | 459/1145 [00:07<00:06, 104.71it/s]Feature extracting:  42%|████▏     | 476/1145 [00:07<00:05, 121.18it/s]Feature extracting:  43%|████▎     | 494/1145 [00:07<00:04, 137.46it/s]Feature extracting:  45%|████▍     | 510/1145 [00:07<00:04, 141.37it/s]Feature extracting:  46%|████▌     | 525/1145 [00:07<00:04, 143.02it/s]Feature extracting:  47%|████▋     | 540/1145 [00:07<00:04, 144.40it/s]Feature extracting:  48%|████▊     | 555/1145 [00:07<00:04, 143.07it/s]Feature extracting:  50%|████▉     | 570/1145 [00:07<00:04, 138.12it/s]Feature extracting:  51%|█████     | 584/1145 [00:07<00:04, 136.97it/s]Feature extracting:  52%|█████▏    | 598/1145 [00:08<00:04, 132.52it/s]Feature extracting:  53%|█████▎    | 612/1145 [00:08<00:04, 116.48it/s]Feature extracting:  55%|█████▍    | 625/1145 [00:08<00:05, 100.63it/s]Feature extracting:  56%|█████▌    | 636/1145 [00:08<00:05, 92.88it/s] Feature extracting:  56%|█████▋    | 646/1145 [00:08<00:05, 87.11it/s]Feature extracting:  57%|█████▋    | 656/1145 [00:08<00:05, 83.76it/s]Feature extracting:  58%|█████▊    | 665/1145 [00:08<00:05, 80.83it/s]Feature extracting:  59%|█████▉    | 674/1145 [00:09<00:05, 78.90it/s]Feature extracting:  60%|█████▉    | 682/1145 [00:09<00:06, 76.65it/s]Feature extracting:  60%|██████    | 690/1145 [00:09<00:06, 74.88it/s]Feature extracting:  61%|██████    | 698/1145 [00:09<00:06, 73.60it/s]Feature extracting:  62%|██████▏   | 706/1145 [00:09<00:05, 73.90it/s]Feature extracting:  62%|██████▏   | 714/1145 [00:09<00:06, 70.11it/s]Feature extracting:  63%|██████▎   | 722/1145 [00:09<00:05, 72.17it/s]Feature extracting:  64%|██████▍   | 730/1145 [00:09<00:05, 69.88it/s]Feature extracting:  64%|██████▍   | 738/1145 [00:10<00:05, 68.32it/s]Feature extracting:  65%|██████▌   | 745/1145 [00:10<00:05, 67.32it/s]Feature extracting:  66%|██████▌   | 752/1145 [00:10<00:05, 68.00it/s]Feature extracting:  66%|██████▋   | 760/1145 [00:10<00:05, 69.66it/s]Feature extracting:  67%|██████▋   | 767/1145 [00:10<00:05, 69.53it/s]Feature extracting:  68%|██████▊   | 774/1145 [00:10<00:05, 69.42it/s]Feature extracting:  68%|██████▊   | 781/1145 [00:10<00:05, 69.29it/s]Feature extracting:  69%|██████▉   | 789/1145 [00:10<00:05, 69.98it/s]Feature extracting:  70%|██████▉   | 797/1145 [00:10<00:04, 72.31it/s]Feature extracting:  70%|███████   | 805/1145 [00:10<00:04, 74.34it/s]Feature extracting:  71%|███████   | 813/1145 [00:11<00:04, 74.37it/s]Feature extracting:  72%|███████▏  | 821/1145 [00:11<00:04, 73.92it/s]Feature extracting:  72%|███████▏  | 829/1145 [00:11<00:04, 73.79it/s]Feature extracting:  73%|███████▎  | 837/1145 [00:11<00:04, 73.90it/s]Feature extracting:  74%|███████▍  | 845/1145 [00:11<00:04, 74.85it/s]Feature extracting:  74%|███████▍  | 853/1145 [00:11<00:03, 76.24it/s]Feature extracting:  75%|███████▌  | 861/1145 [00:11<00:03, 76.30it/s]Feature extracting:  76%|███████▌  | 869/1145 [00:11<00:03, 76.83it/s]Feature extracting:  77%|███████▋  | 877/1145 [00:11<00:03, 76.75it/s]Feature extracting:  77%|███████▋  | 886/1145 [00:12<00:03, 78.38it/s]Feature extracting:  78%|███████▊  | 895/1145 [00:12<00:03, 80.15it/s]Feature extracting:  79%|███████▉  | 904/1145 [00:12<00:02, 81.83it/s]Feature extracting:  80%|███████▉  | 913/1145 [00:12<00:02, 82.47it/s]Feature extracting:  81%|████████  | 922/1145 [00:12<00:02, 82.32it/s]Feature extracting:  81%|████████▏ | 931/1145 [00:12<00:02, 82.09it/s]Feature extracting:  82%|████████▏ | 940/1145 [00:12<00:02, 81.45it/s]Feature extracting:  83%|████████▎ | 949/1145 [00:12<00:02, 81.40it/s]Feature extracting:  84%|████████▎ | 958/1145 [00:12<00:02, 81.66it/s]Feature extracting:  84%|████████▍ | 967/1145 [00:12<00:02, 81.78it/s]Feature extracting:  85%|████████▌ | 976/1145 [00:13<00:02, 81.84it/s]Feature extracting:  86%|████████▌ | 985/1145 [00:13<00:01, 81.61it/s]Feature extracting:  87%|████████▋ | 994/1145 [00:13<00:01, 81.08it/s]Feature extracting:  88%|████████▊ | 1003/1145 [00:13<00:01, 80.78it/s]Feature extracting:  88%|████████▊ | 1012/1145 [00:13<00:01, 80.88it/s]Feature extracting:  89%|████████▉ | 1021/1145 [00:13<00:01, 83.04it/s]Feature extracting:  90%|████████▉ | 1030/1145 [00:13<00:01, 76.41it/s]Feature extracting:  91%|█████████ | 1038/1145 [00:13<00:01, 74.26it/s]Feature extracting:  92%|█████████▏| 1052/1145 [00:14<00:01, 91.50it/s]Feature extracting:  93%|█████████▎| 1063/1145 [00:14<00:00, 94.21it/s]Feature extracting:  94%|█████████▎| 1073/1145 [00:14<00:00, 88.02it/s]Feature extracting:  95%|█████████▍| 1083/1145 [00:14<00:00, 90.54it/s]Feature extracting:  95%|█████████▌| 1093/1145 [00:14<00:00, 88.07it/s]Feature extracting:  96%|█████████▌| 1102/1145 [00:14<00:00, 85.38it/s]Feature extracting:  97%|█████████▋| 1111/1145 [00:14<00:00, 84.33it/s]Feature extracting:  98%|█████████▊| 1120/1145 [00:14<00:00, 83.84it/s]Feature extracting:  99%|█████████▊| 1129/1145 [00:14<00:00, 80.96it/s]Feature extracting:  99%|█████████▉| 1138/1145 [00:15<00:00, 78.11it/s]Feature extracting: 100%|██████████| 1145/1145 [00:15<00:00, 74.65it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<03:02,  2.22it/s]Feature extracting:   5%|▌         | 22/407 [00:00<00:07, 52.02it/s]Feature extracting:   9%|▊         | 35/407 [00:00<00:05, 70.67it/s]Feature extracting:  12%|█▏        | 48/407 [00:00<00:04, 83.88it/s]Feature extracting:  15%|█▍        | 60/407 [00:00<00:04, 85.84it/s]Feature extracting:  17%|█▋        | 71/407 [00:01<00:04, 79.23it/s]Feature extracting:  20%|█▉        | 81/407 [00:01<00:04, 75.70it/s]Feature extracting:  22%|██▏       | 90/407 [00:01<00:04, 73.73it/s]Feature extracting:  24%|██▍       | 99/407 [00:01<00:04, 72.01it/s]Feature extracting:  26%|██▋       | 107/407 [00:01<00:04, 70.81it/s]Feature extracting:  28%|██▊       | 115/407 [00:01<00:04, 70.26it/s]Feature extracting:  30%|███       | 123/407 [00:01<00:04, 70.34it/s]Feature extracting:  32%|███▏      | 131/407 [00:01<00:03, 71.12it/s]Feature extracting:  34%|███▍      | 139/407 [00:02<00:03, 71.62it/s]Feature extracting:  36%|███▌      | 147/407 [00:02<00:03, 71.80it/s]Feature extracting:  38%|███▊      | 155/407 [00:02<00:03, 73.29it/s]Feature extracting:  40%|████      | 163/407 [00:02<00:03, 74.24it/s]Feature extracting:  42%|████▏     | 171/407 [00:02<00:03, 70.16it/s]Feature extracting:  44%|████▍     | 179/407 [00:02<00:03, 65.04it/s]Feature extracting:  46%|████▌     | 186/407 [00:02<00:03, 62.11it/s]Feature extracting:  47%|████▋     | 193/407 [00:02<00:03, 60.67it/s]Feature extracting:  49%|████▉     | 200/407 [00:03<00:03, 59.14it/s]Feature extracting:  51%|█████     | 206/407 [00:03<00:03, 58.35it/s]Feature extracting:  52%|█████▏    | 212/407 [00:03<00:03, 57.46it/s]Feature extracting:  54%|█████▎    | 218/407 [00:03<00:03, 56.88it/s]Feature extracting:  55%|█████▌    | 224/407 [00:03<00:03, 57.43it/s]Feature extracting:  57%|█████▋    | 230/407 [00:03<00:03, 57.80it/s]Feature extracting:  58%|█████▊    | 236/407 [00:03<00:02, 58.31it/s]Feature extracting:  59%|█████▉    | 242/407 [00:03<00:02, 58.43it/s]Feature extracting:  61%|██████    | 249/407 [00:03<00:02, 59.62it/s]Feature extracting:  63%|██████▎   | 257/407 [00:03<00:02, 64.01it/s]Feature extracting:  65%|██████▌   | 266/407 [00:04<00:01, 70.77it/s]Feature extracting:  68%|██████▊   | 275/407 [00:04<00:01, 75.68it/s]Feature extracting:  70%|██████▉   | 284/407 [00:04<00:01, 79.08it/s]Feature extracting:  72%|███████▏  | 293/407 [00:04<00:01, 81.05it/s]Feature extracting:  74%|███████▍  | 302/407 [00:04<00:01, 82.10it/s]Feature extracting:  76%|███████▋  | 311/407 [00:04<00:01, 83.54it/s]Feature extracting:  79%|███████▊  | 320/407 [00:04<00:01, 84.64it/s]Feature extracting:  81%|████████  | 329/407 [00:04<00:00, 84.96it/s]Feature extracting:  83%|████████▎ | 338/407 [00:04<00:00, 84.91it/s]Feature extracting:  85%|████████▌ | 347/407 [00:05<00:00, 84.99it/s]Feature extracting:  87%|████████▋ | 356/407 [00:05<00:00, 85.57it/s]Feature extracting:  90%|████████▉ | 365/407 [00:05<00:00, 86.05it/s]Feature extracting:  92%|█████████▏| 374/407 [00:05<00:00, 85.95it/s]Feature extracting:  94%|█████████▍| 383/407 [00:05<00:00, 86.07it/s]Feature extracting:  96%|█████████▋| 392/407 [00:05<00:00, 86.17it/s]Feature extracting:  99%|█████████▊| 401/407 [00:05<00:00, 86.88it/s]Feature extracting: 100%|██████████| 407/407 [00:05<00:00, 69.02it/s]
Feature extracting:   0%|          | 0/407 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/407 [00:00<03:29,  1.94it/s]Feature extracting:   1%|          | 5/407 [00:00<00:40,  9.93it/s]Feature extracting:   2%|▏         | 9/407 [00:00<00:24, 16.25it/s]Feature extracting:   3%|▎         | 13/407 [00:00<00:18, 21.16it/s]Feature extracting:   4%|▍         | 17/407 [00:00<00:15, 24.85it/s]Feature extracting:   5%|▌         | 21/407 [00:01<00:14, 27.48it/s]Feature extracting:   6%|▌         | 25/407 [00:01<00:13, 29.36it/s]Feature extracting:   7%|▋         | 29/407 [00:01<00:12, 30.84it/s]Feature extracting:   8%|▊         | 33/407 [00:01<00:11, 31.90it/s]Feature extracting:   9%|▉         | 37/407 [00:01<00:11, 32.51it/s]Feature extracting:  10%|█         | 41/407 [00:01<00:11, 33.09it/s]Feature extracting:  11%|█         | 45/407 [00:01<00:10, 33.25it/s]Feature extracting:  12%|█▏        | 49/407 [00:01<00:10, 33.60it/s]Feature extracting:  13%|█▎        | 53/407 [00:02<00:10, 33.71it/s]Feature extracting:  14%|█▍        | 57/407 [00:02<00:10, 33.86it/s]Feature extracting:  15%|█▍        | 61/407 [00:02<00:10, 33.88it/s]Feature extracting:  16%|█▌        | 65/407 [00:02<00:09, 34.54it/s]Feature extracting:  17%|█▋        | 69/407 [00:02<00:09, 35.10it/s]Feature extracting:  18%|█▊        | 73/407 [00:02<00:09, 35.32it/s]Feature extracting:  19%|█▉        | 77/407 [00:02<00:09, 35.61it/s]Feature extracting:  20%|█▉        | 81/407 [00:02<00:09, 35.67it/s]Feature extracting:  21%|██        | 85/407 [00:02<00:09, 35.71it/s]Feature extracting:  22%|██▏       | 89/407 [00:03<00:08, 36.51it/s]Feature extracting:  23%|██▎       | 93/407 [00:03<00:08, 37.03it/s]Feature extracting:  24%|██▍       | 97/407 [00:03<00:08, 37.22it/s]Feature extracting:  25%|██▍       | 101/407 [00:03<00:08, 37.33it/s]Feature extracting:  26%|██▌       | 106/407 [00:03<00:07, 39.01it/s]Feature extracting:  27%|██▋       | 111/407 [00:03<00:07, 41.97it/s]Feature extracting:  29%|██▊       | 116/407 [00:03<00:06, 44.20it/s]Feature extracting:  30%|██▉       | 121/407 [00:03<00:06, 45.87it/s]Feature extracting:  31%|███       | 127/407 [00:03<00:05, 47.60it/s]Feature extracting:  33%|███▎      | 133/407 [00:04<00:05, 49.36it/s]Feature extracting:  34%|███▍      | 139/407 [00:04<00:05, 51.76it/s]Feature extracting:  36%|███▌      | 145/407 [00:04<00:04, 53.15it/s]Feature extracting:  37%|███▋      | 151/407 [00:04<00:04, 53.74it/s]Feature extracting:  39%|███▊      | 157/407 [00:04<00:04, 51.17it/s]Feature extracting:  40%|████      | 163/407 [00:04<00:04, 52.52it/s]Feature extracting:  42%|████▏     | 169/407 [00:04<00:04, 53.33it/s]Feature extracting:  43%|████▎     | 175/407 [00:04<00:04, 54.13it/s]Feature extracting:  44%|████▍     | 181/407 [00:04<00:04, 54.44it/s]Feature extracting:  46%|████▌     | 187/407 [00:05<00:04, 52.47it/s]Feature extracting:  47%|████▋     | 193/407 [00:05<00:04, 52.94it/s]Feature extracting:  49%|████▉     | 199/407 [00:05<00:03, 53.02it/s]Feature extracting:  50%|█████     | 205/407 [00:05<00:03, 52.87it/s]Feature extracting:  52%|█████▏    | 211/407 [00:05<00:03, 52.40it/s]Feature extracting:  54%|█████▍    | 219/407 [00:05<00:03, 58.78it/s]Feature extracting:  56%|█████▋    | 229/407 [00:05<00:02, 68.67it/s]Feature extracting:  59%|█████▉    | 240/407 [00:05<00:02, 77.73it/s]Feature extracting:  62%|██████▏   | 251/407 [00:05<00:01, 84.63it/s]Feature extracting:  64%|██████▍   | 261/407 [00:05<00:01, 88.71it/s]Feature extracting:  66%|██████▋   | 270/407 [00:06<00:01, 88.06it/s]Feature extracting:  69%|██████▊   | 279/407 [00:06<00:01, 76.45it/s]Feature extracting:  71%|███████   | 287/407 [00:06<00:01, 68.47it/s]Feature extracting:  72%|███████▏  | 295/407 [00:06<00:01, 61.63it/s]Feature extracting:  74%|███████▍  | 302/407 [00:06<00:01, 58.09it/s]Feature extracting:  76%|███████▌  | 309/407 [00:06<00:01, 55.22it/s]Feature extracting:  77%|███████▋  | 315/407 [00:06<00:01, 53.79it/s]Feature extracting:  79%|███████▉  | 321/407 [00:07<00:01, 51.51it/s]Feature extracting:  80%|████████  | 327/407 [00:07<00:01, 49.93it/s]Feature extracting:  82%|████████▏ | 333/407 [00:07<00:01, 48.57it/s]Feature extracting:  83%|████████▎ | 338/407 [00:07<00:01, 47.74it/s]Feature extracting:  84%|████████▍ | 343/407 [00:07<00:01, 47.48it/s]Feature extracting:  86%|████████▌ | 348/407 [00:07<00:01, 46.85it/s]Feature extracting:  87%|████████▋ | 353/407 [00:07<00:01, 46.84it/s]Feature extracting:  88%|████████▊ | 358/407 [00:07<00:01, 47.43it/s]Feature extracting:  89%|████████▉ | 363/407 [00:08<00:00, 46.20it/s]Feature extracting:  91%|█████████ | 370/407 [00:08<00:00, 51.10it/s]Feature extracting:  93%|█████████▎| 379/407 [00:08<00:00, 60.11it/s]Feature extracting:  95%|█████████▌| 388/407 [00:08<00:00, 66.10it/s]Feature extracting:  98%|█████████▊| 397/407 [00:08<00:00, 70.75it/s]Feature extracting: 100%|█████████▉| 405/407 [00:08<00:00, 72.49it/s]Feature extracting: 100%|██████████| 407/407 [00:08<00:00, 46.67it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  2.15it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.89it/s]
feature banks saved to ./output/stl10/svhn_backdoored_encoder/2024-01-05-17:09:46/feature_banks.pkl
Train Epoch: 1 	Loss: 1.966544
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 37.288721573448065, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 1}
Train Epoch: 2 	Loss: 1.703996
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 43.40043023970498, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 2}
Train Epoch: 3 	Loss: 1.557949
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 49.09726490473264, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 3}
Train Epoch: 4 	Loss: 1.443868
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 52.98478795328826, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 4}
Train Epoch: 5 	Loss: 1.358561
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 55.981100184388445, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 5}
Train Epoch: 6 	Loss: 1.293416
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 58.25906576521205, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 6}
Train Epoch: 7 	Loss: 1.240390
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 59.87246465888138, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 7}
Train Epoch: 8 	Loss: 1.194815
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 61.41287645974186, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 8}
Train Epoch: 9 	Loss: 1.161219
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 62.26567301782421, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 9}
Train Epoch: 10 	Loss: 1.131811
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.39505224339275, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 10}
Train Epoch: 11 	Loss: 1.105333
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 63.936693300553166, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 11}
Train Epoch: 12 	Loss: 1.083767
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 64.83942839582053, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 12}
Train Epoch: 13 	Loss: 1.064488
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.33497234173325, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 13}
Train Epoch: 14 	Loss: 1.046982
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 65.70374923171481, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 14}
Train Epoch: 15 	Loss: 1.031673
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 66.25691456668716, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 15}
Train Epoch: 16 	Loss: 1.016898
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 66.74861708666256, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 16}
Train Epoch: 17 	Loss: 1.001331
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 67.16733251382914, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 17}
Train Epoch: 18 	Loss: 0.988332
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 67.66671788567916, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 18}
Train Epoch: 19 	Loss: 0.976110
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 67.90104486785495, "epoch": 19}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 19}
Train Epoch: 20 	Loss: 0.963250
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 68.43884449907806, "epoch": 20}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 20}
Train Epoch: 21 	Loss: 0.953543
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 68.83835279655808, "epoch": 21}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 21}
Train Epoch: 22 	Loss: 0.943091
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.05347264904732, "epoch": 22}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 22}
Train Epoch: 23 	Loss: 0.931871
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.47602950215119, "epoch": 23}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 23}
Train Epoch: 24 	Loss: 0.919894
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 69.71419791026429, "epoch": 24}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 24}
Train Epoch: 25 	Loss: 0.910912
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.07529194837123, "epoch": 25}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 25}
Train Epoch: 26 	Loss: 0.900352
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.62077443146896, "epoch": 26}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 26}
Train Epoch: 27 	Loss: 0.892222
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 70.87814996926859, "epoch": 27}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 27}
Train Epoch: 28 	Loss: 0.884403
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.09711124769514, "epoch": 28}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 28}
Train Epoch: 29 	Loss: 0.876192
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 71.220036877689, "epoch": 29}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 100.0, "epoch": 29}
Train Epoch: 30 	Loss: 0.867849
