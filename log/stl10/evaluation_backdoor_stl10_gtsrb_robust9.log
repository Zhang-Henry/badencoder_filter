transforms.GaussianBlur(kernel_size=7)
transforms.GaussianBlur(kernel_size=7)
transforms.GaussianBlur(kernel_size=7)
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/hrzhang/anaconda3/envs/badencoder/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
当前时间： 2024-01-06 19:59:25
当前时间： 2024-01-06 19:59:27
test_transform_stl10
Loaded from: ./output/stl10/gtsrb_backdoored_encoder/2024-01-05-17:09:25/model_200.pth
Namespace(batch_size=64, color=0.3, data_dir='./data/stl10/', encoder_usage_info='stl10', epochs=200, gpu='3', hue_hsv=1, knn_k=200, knn_t=0.5, lambda1=1.0, lambda2=1.0, lightness=1, loss0=20.0, lr=0.001, pretrained_encoder='./output/stl10/clean_encoder/model_1000.pth', pretraining_dataset='stl10', psnr=0.025, rand_init=False, reference_file='./reference/stl10/priority.npz', reference_label=0, results_dir='./output/stl10/gtsrb_backdoored_encoder/2024-01-05-17:09:25/', saturation_hsv=1, seed=100, shadow_dataset='stl10', timestamp='2024-01-05-17:09:25', trigger_file='optimize_filter/trigger/stl10/2023-12-07-00-21-52/ssim0.9182_psnr22.37_lp0.0263_wd0.702_color10.051.pt', value_hsv=1)
{'loss': -23.043559339379225, 'wd': 0.04125052653777767, 'ssim': 0.9425649173586378, 'psnr': 23.599875827452284, 'lp': 0.02109734911385747, 'sim': -20.2618725589845, 'far': 2.781686767725877, 'color': 9.272288849350737}
Predicting features
Feature extracting:   0%|          | 0/613 [00:00<?, ?it/s]Feature extracting:   0%|          | 1/613 [00:03<36:57,  3.62s/it]Feature extracting:   3%|▎         | 19/613 [00:03<01:23,  7.09it/s]Feature extracting:   5%|▍         | 30/613 [00:03<00:47, 12.24it/s]Feature extracting:   7%|▋         | 40/613 [00:03<00:31, 17.99it/s]Feature extracting:   8%|▊         | 51/613 [00:04<00:21, 25.55it/s]Feature extracting:  10%|▉         | 61/613 [00:04<00:16, 32.97it/s]Feature extracting:  11%|█▏        | 70/613 [00:04<00:13, 39.24it/s]Feature extracting:  13%|█▎        | 79/613 [00:04<00:11, 44.94it/s]Feature extracting:  14%|█▍        | 87/613 [00:04<00:10, 50.71it/s]Feature extracting:  15%|█▌        | 95/613 [00:04<00:09, 54.10it/s]Feature extracting:  17%|█▋        | 103/613 [00:04<00:08, 56.81it/s]Feature extracting:  18%|█▊        | 111/613 [00:04<00:08, 58.84it/s]Feature extracting:  19%|█▉        | 118/613 [00:05<00:08, 60.39it/s]Feature extracting:  21%|██        | 126/613 [00:05<00:07, 64.85it/s]Feature extracting:  22%|██▏       | 134/613 [00:05<00:07, 66.11it/s]Feature extracting:  23%|██▎       | 142/613 [00:05<00:06, 68.02it/s]Feature extracting:  24%|██▍       | 150/613 [00:05<00:06, 69.05it/s]Feature extracting:  26%|██▌       | 158/613 [00:05<00:06, 69.76it/s]Feature extracting:  27%|██▋       | 166/613 [00:05<00:06, 70.83it/s]Feature extracting:  28%|██▊       | 174/613 [00:05<00:06, 68.92it/s]Feature extracting:  30%|██▉       | 181/613 [00:05<00:06, 68.83it/s]Feature extracting:  31%|███       | 188/613 [00:06<00:06, 68.42it/s]Feature extracting:  32%|███▏      | 195/613 [00:06<00:06, 68.28it/s]Feature extracting:  34%|███▍      | 207/613 [00:06<00:04, 81.81it/s]Feature extracting:  36%|███▌      | 218/613 [00:06<00:04, 88.83it/s]Feature extracting:  37%|███▋      | 229/613 [00:06<00:04, 93.75it/s]Feature extracting:  39%|███▉      | 240/613 [00:06<00:03, 96.20it/s]Feature extracting:  41%|████      | 251/613 [00:06<00:03, 99.43it/s]Feature extracting:  43%|████▎     | 262/613 [00:06<00:03, 100.66it/s]Feature extracting:  45%|████▍     | 273/613 [00:06<00:03, 94.96it/s] Feature extracting:  46%|████▋     | 285/613 [00:06<00:03, 101.35it/s]Feature extracting:  48%|████▊     | 296/613 [00:07<00:03, 95.04it/s] Feature extracting:  50%|█████     | 309/613 [00:07<00:02, 101.95it/s]Feature extracting:  52%|█████▏    | 320/613 [00:07<00:03, 80.12it/s] Feature extracting:  54%|█████▎    | 329/613 [00:07<00:03, 77.83it/s]Feature extracting:  55%|█████▌    | 338/613 [00:07<00:03, 77.96it/s]Feature extracting:  57%|█████▋    | 351/613 [00:07<00:02, 88.55it/s]Feature extracting:  59%|█████▉    | 361/613 [00:07<00:03, 80.41it/s]Feature extracting:  61%|██████    | 372/613 [00:08<00:02, 87.35it/s]Feature extracting:  62%|██████▏   | 383/613 [00:08<00:02, 89.72it/s]Feature extracting:  64%|██████▍   | 393/613 [00:08<00:02, 88.66it/s]Feature extracting:  66%|██████▌   | 403/613 [00:08<00:02, 90.67it/s]Feature extracting:  67%|██████▋   | 413/613 [00:08<00:02, 87.17it/s]Feature extracting:  69%|██████▉   | 422/613 [00:08<00:02, 85.08it/s]Feature extracting:  70%|███████   | 431/613 [00:08<00:02, 81.66it/s]Feature extracting:  72%|███████▏  | 440/613 [00:08<00:02, 77.61it/s]Feature extracting:  73%|███████▎  | 448/613 [00:08<00:02, 74.93it/s]Feature extracting:  74%|███████▍  | 456/613 [00:09<00:02, 72.38it/s]Feature extracting:  76%|███████▌  | 464/613 [00:09<00:02, 73.84it/s]Feature extracting:  77%|███████▋  | 472/613 [00:09<00:01, 72.46it/s]Feature extracting:  78%|███████▊  | 480/613 [00:09<00:01, 70.50it/s]Feature extracting:  80%|███████▉  | 488/613 [00:09<00:01, 71.26it/s]Feature extracting:  81%|████████  | 497/613 [00:09<00:01, 75.14it/s]Feature extracting:  82%|████████▏ | 505/613 [00:09<00:01, 73.97it/s]Feature extracting:  84%|████████▎ | 513/613 [00:09<00:01, 71.35it/s]Feature extracting:  85%|████████▍ | 521/613 [00:10<00:01, 70.11it/s]Feature extracting:  86%|████████▋ | 529/613 [00:10<00:01, 70.34it/s]Feature extracting:  88%|████████▊ | 537/613 [00:10<00:01, 71.69it/s]Feature extracting:  89%|████████▉ | 546/613 [00:10<00:00, 75.41it/s]Feature extracting:  91%|█████████ | 555/613 [00:10<00:00, 76.66it/s]Feature extracting:  92%|█████████▏| 563/613 [00:10<00:00, 75.07it/s]Feature extracting:  93%|█████████▎| 573/613 [00:10<00:00, 79.39it/s]Feature extracting:  95%|█████████▍| 581/613 [00:10<00:00, 77.27it/s]Feature extracting:  96%|█████████▌| 589/613 [00:10<00:00, 74.52it/s]Feature extracting:  98%|█████████▊| 599/613 [00:11<00:00, 79.37it/s]Feature extracting:  99%|█████████▉| 607/613 [00:11<00:00, 77.56it/s]Feature extracting: 100%|██████████| 613/613 [00:11<00:00, 53.55it/s]
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:00<02:10,  1.51it/s]Feature extracting:   9%|▊         | 17/198 [00:00<00:06, 26.23it/s]Feature extracting:  13%|█▎        | 25/198 [00:01<00:05, 31.43it/s]Feature extracting:  17%|█▋        | 33/198 [00:01<00:04, 38.49it/s]Feature extracting:  24%|██▎       | 47/198 [00:01<00:02, 58.87it/s]Feature extracting:  28%|██▊       | 56/198 [00:01<00:02, 65.65it/s]Feature extracting:  33%|███▎      | 65/198 [00:01<00:02, 56.32it/s]Feature extracting:  39%|███▉      | 78/198 [00:01<00:01, 67.33it/s]Feature extracting:  44%|████▍     | 87/198 [00:01<00:01, 65.89it/s]Feature extracting:  49%|████▉     | 97/198 [00:02<00:01, 59.16it/s]Feature extracting:  53%|█████▎    | 105/198 [00:02<00:01, 58.53it/s]Feature extracting:  57%|█████▋    | 113/198 [00:02<00:01, 62.82it/s]Feature extracting:  62%|██████▏   | 123/198 [00:02<00:01, 70.93it/s]Feature extracting:  67%|██████▋   | 133/198 [00:02<00:00, 77.89it/s]Feature extracting:  72%|███████▏  | 143/198 [00:02<00:00, 82.85it/s]Feature extracting:  77%|███████▋  | 153/198 [00:02<00:00, 76.62it/s]Feature extracting:  82%|████████▏ | 162/198 [00:02<00:00, 74.07it/s]Feature extracting:  89%|████████▉ | 177/198 [00:02<00:00, 90.19it/s]Feature extracting:  95%|█████████▍| 188/198 [00:03<00:00, 94.93it/s]Feature extracting: 100%|██████████| 198/198 [00:03<00:00, 72.83it/s]Feature extracting: 100%|██████████| 198/198 [00:03<00:00, 57.45it/s]
Feature extracting:   0%|          | 0/198 [00:00<?, ?it/s]Feature extracting:   1%|          | 1/198 [00:01<03:31,  1.07s/it]Feature extracting:   3%|▎         | 6/198 [00:01<00:29,  6.61it/s]Feature extracting:   5%|▌         | 10/198 [00:01<00:16, 11.08it/s]Feature extracting:   7%|▋         | 14/198 [00:01<00:11, 15.64it/s]Feature extracting:   9%|▉         | 18/198 [00:01<00:09, 19.62it/s]Feature extracting:  11%|█         | 22/198 [00:01<00:07, 23.68it/s]Feature extracting:  13%|█▎        | 26/198 [00:01<00:06, 27.12it/s]Feature extracting:  16%|█▌        | 31/198 [00:01<00:05, 31.98it/s]Feature extracting:  18%|█▊        | 36/198 [00:01<00:04, 34.86it/s]Feature extracting:  21%|██        | 41/198 [00:02<00:04, 36.88it/s]Feature extracting:  23%|██▎       | 46/198 [00:02<00:04, 37.78it/s]Feature extracting:  26%|██▌       | 51/198 [00:02<00:03, 38.83it/s]Feature extracting:  28%|██▊       | 56/198 [00:02<00:03, 36.24it/s]Feature extracting:  30%|███       | 60/198 [00:02<00:03, 36.88it/s]Feature extracting:  33%|███▎      | 65/198 [00:02<00:03, 37.99it/s]Feature extracting:  35%|███▌      | 70/198 [00:02<00:03, 38.83it/s]Feature extracting:  38%|███▊      | 75/198 [00:02<00:03, 39.95it/s]Feature extracting:  40%|████      | 80/198 [00:03<00:02, 41.20it/s]Feature extracting:  43%|████▎     | 85/198 [00:03<00:02, 42.10it/s]Feature extracting:  45%|████▌     | 90/198 [00:03<00:02, 43.11it/s]Feature extracting:  48%|████▊     | 95/198 [00:03<00:02, 44.79it/s]Feature extracting:  51%|█████     | 100/198 [00:03<00:02, 40.71it/s]Feature extracting:  54%|█████▎    | 106/198 [00:03<00:02, 44.30it/s]Feature extracting:  57%|█████▋    | 112/198 [00:03<00:01, 45.99it/s]Feature extracting:  59%|█████▉    | 117/198 [00:03<00:01, 45.47it/s]Feature extracting:  62%|██████▏   | 122/198 [00:03<00:01, 45.97it/s]Feature extracting:  64%|██████▍   | 127/198 [00:04<00:01, 45.75it/s]Feature extracting:  67%|██████▋   | 133/198 [00:04<00:01, 48.12it/s]Feature extracting:  70%|██████▉   | 138/198 [00:04<00:01, 47.34it/s]Feature extracting:  72%|███████▏  | 143/198 [00:04<00:01, 46.83it/s]Feature extracting:  75%|███████▍  | 148/198 [00:04<00:01, 46.12it/s]Feature extracting:  77%|███████▋  | 153/198 [00:04<00:00, 46.13it/s]Feature extracting:  80%|████████  | 159/198 [00:04<00:00, 47.67it/s]Feature extracting:  83%|████████▎ | 164/198 [00:04<00:00, 46.86it/s]Feature extracting:  85%|████████▌ | 169/198 [00:04<00:00, 46.62it/s]Feature extracting:  88%|████████▊ | 174/198 [00:05<00:00, 46.29it/s]Feature extracting:  90%|█████████ | 179/198 [00:05<00:00, 46.12it/s]Feature extracting:  93%|█████████▎| 184/198 [00:05<00:00, 46.61it/s]Feature extracting:  95%|█████████▌| 189/198 [00:05<00:00, 46.17it/s]Feature extracting:  98%|█████████▊| 194/198 [00:05<00:00, 45.96it/s]Feature extracting: 100%|██████████| 198/198 [00:05<00:00, 34.03it/s]
Feature extracting:   0%|          | 0/1 [00:00<?, ?it/s]Feature extracting: 100%|██████████| 1/1 [00:00<00:00,  1.08it/s]Feature extracting: 100%|██████████| 1/1 [00:01<00:00,  1.26s/it]
feature banks saved to ./output/stl10/gtsrb_backdoored_encoder/2024-01-05-17:09:25/feature_banks.pkl
Train Epoch: 1 	Loss: 3.783534
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 3.1037212984956453, "epoch": 1}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 1}
Train Epoch: 2 	Loss: 3.552925
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 2}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 2}
Train Epoch: 3 	Loss: 3.314388
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 3}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 3}
Train Epoch: 4 	Loss: 3.272497
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 4}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 4}
Train Epoch: 5 	Loss: 3.188233
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 5}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 5}
Train Epoch: 6 	Loss: 3.136677
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 6}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 6}
Train Epoch: 7 	Loss: 3.099286
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.938242280285036, "epoch": 7}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 7}
Train Epoch: 8 	Loss: 3.080191
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 5.961995249406176, "epoch": 8}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 8}
Train Epoch: 9 	Loss: 3.029500
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.424386381631038, "epoch": 9}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 9}
Train Epoch: 10 	Loss: 2.999464
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.105304829770388, "epoch": 10}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 10}
Train Epoch: 11 	Loss: 2.969264
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.049881235154395, "epoch": 11}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 11}
Train Epoch: 12 	Loss: 2.915725
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.176563737133808, "epoch": 12}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 12}
Train Epoch: 13 	Loss: 2.863399
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.978622327790974, "epoch": 13}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 13}
Train Epoch: 14 	Loss: 2.835769
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.582739509105306, "epoch": 14}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 14}
Train Epoch: 15 	Loss: 2.783525
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.844022169437846, "epoch": 15}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 15}
Train Epoch: 16 	Loss: 2.762321
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 9.057798891528108, "epoch": 16}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 16}
Train Epoch: 17 	Loss: 2.772619
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.812351543942993, "epoch": 17}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 17}
Train Epoch: 18 	Loss: 2.728092
{"metric": "Eval - Backdoored Accuracy (BA)", "value": 8.80443388756928, "epoch": 18}
{"metric": "Eval - Attack Success Rate (ASR)", "value": 0.0, "epoch": 18}
