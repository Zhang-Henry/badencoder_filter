{
  // Use IntelliSense to learn about possible attributes.
  // Hover to view descriptions of existing attributes.
  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
  "version": "0.2.0",
  "configurations": [
    {
      "name": "training_downstream_classifier_imagenet",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/training_downstream_classifier.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--encoder_usage_info",
        "imagenet",
        "--dataset",
        "svhn",
        "--trigger_file",
        "output/imagenet/svhn_backdoored_encoder/2023-12-14-00:58:07/unet_filter_100_trained.pt",
        "--encoder",
        "output/imagenet/svhn_backdoored_encoder/2023-12-14-00:58:07/model_100.pth",
        "--reference_label",
        "1",
        "--reference_file",
        "./reference/imagenet/one.npz",
        "--gpu",
        "3",
      ],
      "cwd": "/home/hrzhang/projects/badencoder_filter",
    },
    {
      "name": "training_downstream_classifier_imagenet_origin",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/training_downstream_classifier.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--encoder_usage_info",
        "imagenet",
        "--dataset",
        "gtsrb",
        "--trigger_file",
        "./trigger/trigger_pt_white_173_50_ap_replace.npz",
        "--encoder",
        "./output/imagenet/backdoor/priority/model_200.pth",
        "--reference_label",
        "12",
        "--reference_file",
        "./reference/imagenet/priority.npz",
        "--gpu",
        "2",
      ],
      "cwd": "/home/hrzhang/projects/badencoder_filter",
    },
    {
      "name": "training_downstream_classifier",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/training_downstream_classifier.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "args": [
        "--encoder_usage_info",
        "stl10",
        "--dataset",
        "gtsrb",
        "--trigger_file",
        "./trigger/stl10/unet_filter.pt",
        "--encoder",
        "./output/stl10/gtsrb_backdoored_encoder/model_50.pth",
        "--reference_label",
        "12",
        "--reference_file",
        "./reference/stl10/priority.npz",
        "--gpu",
        "2",
      ],
      "cwd": "/home/hrzhang/projects/badencoder_filter",
    },
    {
      "name": "optimize",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/optimize_filter/main.py",
      "console": "integratedTerminal",
      "args": [
        // "--use_feature",
        "--gpu",
        "2",
        "--batch_size",
        "256",
        "--init_cost",
        "6",
        "--cost_multiplier_up",
        "2",
        "--cost_multiplier_down",
        "3",
        "--dataset",
        "stl10"
      ],
      "env": {
        "CUDA_VISIBLE_DEVICES": "2"
      },
      "justMyCode": true,
      "cwd": "${fileDirname}",
    },
    {
      "name": "optimize_filter_stl",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/optimize_filter_stl.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "env": {
        "CUDA_VISIBLE_DEVICES": "0"
      },
    },
    {
      "name": "optimize_filter",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/optimize_filter.py",
      "console": "integratedTerminal",
      "justMyCode": true,
      "env": {
        "CUDA_VISIBLE_DEVICES": "5"
      },
    },
    {
      "name": "badencoder:cifar10",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/badencoder.py",
      "console": "integratedTerminal",
      "args": [
        "--lr",
        "0.001",
        "--batch_size",
        "256",
        "--results_dir",
        "./output/cifar10/stl10_backdoored_encoder",
        "--shadow_dataset",
        "cifar10",
        "--pretrained_encoder",
        "./output/cifar10/clean_encoder/model_1000.pth",
        "--encoder_usage_info",
        "cifar10",
        "--gpu",
        "5",
        "--reference_file",
        "reference/cifar10/truck.npz",
        "--trigger_file",
        "trigger/cifar10/unet_filter.pt"
      ],
      "justMyCode": true,
      "cwd": "/home/hrzhang/projects/badencoder_filter"
    },
    {
      "name": "badencoder:wanet",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/badencoder_wanet.py",
      "console": "integratedTerminal",
      "args": [
        "--lr",
        "0.001",
        "--batch_size",
        "128",
        "--results_dir",
        "./output/cifar10/stl10_backdoored_encoder",
        "--shadow_dataset",
        "cifar10",
        "--pretrained_encoder",
        "./output/cifar10/clean_encoder/model_1000.pth",
        "--encoder_usage_info",
        "cifar10",
        "--gpu",
        "2",
        "--reference_file",
        "reference/cifar10/truck.npz",
        "--trigger_file",
        "trigger/cifar10/unet_filter.pt"
      ],
      "justMyCode": true,
      "cwd": "/home/hrzhang/projects/badencoder_filter"
    },
    {
      "name": "badencoder:gtsrb",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/badencoder.py",
      "console": "integratedTerminal",
      "args": [
        "--lr",
        "0.001",
        "--batch_size",
        "256",
        "--results_dir",
        "./output/gtsrb/stl10_backdoored_encoder",
        "--shadow_dataset",
        "gtsrb",
        "--pretrained_encoder",
        "./output/gtsrb/clean_encoder/model_1000.pth",
        "--encoder_usage_info",
        "gtsrb",
        "--gpu",
        "2",
        "--reference_file",
        "reference/gtsrb/truck.npz",
        "--trigger_file",
        "trigger/gtsrb/filter.pt",
        "--pretraining_dataset",
        "gtsrb"
      ],
      "justMyCode": true,
      "cwd": "/home/hrzhang/projects/badencoder_filter"
    },
    {
      "name": "badencoder:stl",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/badencoder.py",
      "console": "integratedTerminal",
      "args": [
        "--lr",
        "0.001",
        "--batch_size",
        "128",
        "--results_dir",
        "./output/stl10/gtsrb_backdoored_encoder",
        "--shadow_dataset",
        "stl10",
        "--pretrained_encoder",
        "./output/stl10/clean_encoder/model_1000.pth",
        "--encoder_usage_info",
        "stl10",
        "--gpu",
        "4",
        "--reference_file",
        "reference/stl10/priority.npz",
        "--trigger_file",
        "trigger/stl10/unet_filter.pt"
      ],
      "justMyCode": true,
      "cwd": "/home/hrzhang/projects/badencoder_filter",
      "env": {
        "CUDA_VISIBLE_DEVICES": "5"
      }
    },
    {
      "name": "badencoder:imagenet",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/badencoder.py",
      "console": "integratedTerminal",
      "args": [
        "--lr",
        "0.001",
        "--batch_size",
        "64",
        "--results_dir",
        "./output/imagenet/gtsrb_backdoored_encoder",
        "--shadow_dataset",
        "imagenet",
        "--pretrained_encoder",
        "./output/imagenet/clean_encoder/resnet50-1x.pth",
        "--encoder_usage_info",
        "imagenet",
        "--gpu",
        "1",
        "--reference_file",
        "reference/imagenet/priority.npz",
        "--trigger_file",
        "trigger/imagenet/unet_filter.pt"
      ],
      "justMyCode": true
    },
    {
      "name": "pretrain:imagenet",
      "type": "python",
      "request": "launch",
      "program": "/home/hrzhang/projects/badencoder_filter/pretraining_encoder.py",
      "console": "integratedTerminal",
      "args": [
        "--pretraining_dataset",
        "tiny_imagenet",
        "--batch_size",
        "240",
        "--results_dir",
        "./output/tiny_imagenet/clean_encoder/",
        "--gpu",
        "4",
      ],
      "justMyCode": true,
      "cwd": "/home/hrzhang/projects/badencoder_filter"
    },
  ]
}